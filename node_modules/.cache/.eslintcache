[{"/var/www/netlear/html/clientNetlear/src/index.js":"1","/var/www/netlear/html/clientNetlear/src/App.js":"2","/var/www/netlear/html/clientNetlear/src/redux/store.js":"3","/var/www/netlear/html/clientNetlear/src/conf.js":"4","/var/www/netlear/html/clientNetlear/src/views/NotFound/NotFound.jsx":"5","/var/www/netlear/html/clientNetlear/src/views/Header/Header.jsx":"6","/var/www/netlear/html/clientNetlear/src/components/LoginForm/LoginForm.jsx":"7","/var/www/netlear/html/clientNetlear/src/components/RegForm/RegForm.jsx":"8","/var/www/netlear/html/clientNetlear/src/components/Footer/Footer.jsx":"9","/var/www/netlear/html/clientNetlear/src/redux/reducers/index.js":"10","/var/www/netlear/html/clientNetlear/src/views/index.js":"11","/var/www/netlear/html/clientNetlear/src/redux/actions/modal.js":"12","/var/www/netlear/html/clientNetlear/src/redux/actions/Auth/Auth.js":"13","/var/www/netlear/html/clientNetlear/src/components/RegForm/funcReg.js":"14","/var/www/netlear/html/clientNetlear/src/utils/mapArrays/footerContent.js":"15","/var/www/netlear/html/clientNetlear/src/redux/reducers/modal.js":"16","/var/www/netlear/html/clientNetlear/src/redux/reducers/spinner.js":"17","/var/www/netlear/html/clientNetlear/src/redux/reducers/dev.js":"18","/var/www/netlear/html/clientNetlear/src/redux/reducers/eventRedactor.js":"19","/var/www/netlear/html/clientNetlear/src/views/Header/MenuData.jsx":"20","/var/www/netlear/html/clientNetlear/src/components/Button/Button.jsx":"21","/var/www/netlear/html/clientNetlear/src/components/Modal/Modal.jsx":"22","/var/www/netlear/html/clientNetlear/src/components/Modal/ModalWindow/ModalWindow.jsx":"23","/var/www/netlear/html/clientNetlear/src/components/Spinner/Spinner.jsx":"24","/var/www/netlear/html/clientNetlear/src/components/FooterContentBlock/FooterContentBlock.jsx":"25","/var/www/netlear/html/clientNetlear/src/redux/reducers/sideMenu.js":"26","/var/www/netlear/html/clientNetlear/src/redux/reducers/Auth.js":"27","/var/www/netlear/html/clientNetlear/src/redux/reducers/Temp.js":"28","/var/www/netlear/html/clientNetlear/src/redux/reducers/UploadingCourse.js":"29","/var/www/netlear/html/clientNetlear/src/views/HomePage/HomePage.jsx":"30","/var/www/netlear/html/clientNetlear/src/views/AskQuestionPage/AskQuestionPage.jsx":"31","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/EventPage.jsx":"32","/var/www/netlear/html/clientNetlear/src/views/SpecialistsPage/SpecialistsPage.jsx":"33","/var/www/netlear/html/clientNetlear/src/views/EventsPage/EventsPage.jsx":"34","/var/www/netlear/html/clientNetlear/src/views/EditUserProfile/EditUserProfile.jsx":"35","/var/www/netlear/html/clientNetlear/src/views/UserProfile/UserProfile.jsx":"36","/var/www/netlear/html/clientNetlear/src/views/AuthGoogleToken/AuthGoogleToken.jsx":"37","/var/www/netlear/html/clientNetlear/src/views/AuthFacebookToken/AuthFacebookToken.jsx":"38","/var/www/netlear/html/clientNetlear/src/views/AuthCheckKey/AuthCheckKey.jsx":"39","/var/www/netlear/html/clientNetlear/src/views/TariffsPage/Tariffs.jsx":"40","/var/www/netlear/html/clientNetlear/src/views/AuthForms/LoginPage/LoginPage.jsx":"41","/var/www/netlear/html/clientNetlear/src/views/AuthForms/RegPage/RegPage.jsx":"42","/var/www/netlear/html/clientNetlear/src/redux/actions/Auth/api.js":"43","/var/www/netlear/html/clientNetlear/src/redux/actions/spinner.js":"44","/var/www/netlear/html/clientNetlear/src/utils/LocalStorage.js":"45","/var/www/netlear/html/clientNetlear/src/utils/getDate.js":"46","/var/www/netlear/html/clientNetlear/src/utils/calculations/getFullCourseCost.js":"47","/var/www/netlear/html/clientNetlear/src/redux/actions/user.js":"48","/var/www/netlear/html/clientNetlear/src/utils/api/apiFetch.js":"49","/var/www/netlear/html/clientNetlear/src/redux/actions/Temp/UserProfile.js":"50","/var/www/netlear/html/clientNetlear/src/components/AuthHeader/AuthHeader.jsx":"51","/var/www/netlear/html/clientNetlear/src/redux/actions/eventRedactor/eventRedactor.js":"52","/var/www/netlear/html/clientNetlear/src/components/TariffsCart/TariffsCart.jsx":"53","/var/www/netlear/html/clientNetlear/src/components/TextEditor/TextEditor.jsx":"54","/var/www/netlear/html/clientNetlear/src/components/EditUserProfileEmail/EditUserProfileEmail.jsx":"55","/var/www/netlear/html/clientNetlear/src/components/EditUserProfilePassword/EditUserProfilePassword.jsx":"56","/var/www/netlear/html/clientNetlear/src/components/EditUserProfileData/EditUserProfileData.jsx":"57","/var/www/netlear/html/clientNetlear/src/views/AskQuestionPage/MenuData.jsx":"58","/var/www/netlear/html/clientNetlear/src/views/EventsPage/EventsData.jsx":"59","/var/www/netlear/html/clientNetlear/src/components/SpecialistsSwiper/SpecialistsSwiper.jsx":"60","/var/www/netlear/html/clientNetlear/src/components/DeployCourseBlock/DeployCourseBlock.jsx":"61","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse3Page/EventPageAboutSpeaker/EventPageAboutSpeaker.jsx":"62","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse3Page/EventPageContent/EventPageContent.jsx":"63","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse3Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx":"64","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse2Page/EventPageAboutSpeaker/EventPageAboutSpeaker.jsx":"65","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse2Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx":"66","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse2Page/EventPageContent/EventPageContent.jsx":"67","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageAboutSpeaker/EventPageAboutSpeaker.jsx":"68","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageContent/EventPageContent.jsx":"69","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx":"70","/var/www/netlear/html/clientNetlear/src/redux/actions/Temp/api.js":"71","/var/www/netlear/html/clientNetlear/src/views/LatestEvents/LatestEvents.jsx":"72","/var/www/netlear/html/clientNetlear/src/views/LatestArticles/LatestArticles.jsx":"73","/var/www/netlear/html/clientNetlear/src/redux/actions/eventRedactor/api.js":"74","/var/www/netlear/html/clientNetlear/src/utils/getBase64.js":"75","/var/www/netlear/html/clientNetlear/src/utils/testVimeo.js":"76","/var/www/netlear/html/clientNetlear/src/utils/mapArrays/specialists.js":"77","/var/www/netlear/html/clientNetlear/src/utils/eventPopoverContent/bannerPopoversContent.js":"78","/var/www/netlear/html/clientNetlear/src/components/BlockTitle/BlockTitle.jsx":"79","/var/www/netlear/html/clientNetlear/src/utils/eventPopoverContent/aboutSpeakerPopoverContent.js":"80","/var/www/netlear/html/clientNetlear/src/components/SaveButton/SaveButton.jsx":"81","/var/www/netlear/html/clientNetlear/src/components/EventUploadImage/EventUploadImage.jsx":"82","/var/www/netlear/html/clientNetlear/src/components/EditButton/EditButton.jsx":"83","/var/www/netlear/html/clientNetlear/src/components/CoursePaymentCard/CoursePaymentCard.jsx":"84","/var/www/netlear/html/clientNetlear/src/components/AddItemButton/AddItemButton.jsx":"85","/var/www/netlear/html/clientNetlear/src/components/DeleteButton/DeleteButton.jsx":"86","/var/www/netlear/html/clientNetlear/src/components/WebinarsList/Webinars1List/WebinarsList.jsx":"87","/var/www/netlear/html/clientNetlear/src/components/EventsSwiper/EventsSwiper.jsx":"88","/var/www/netlear/html/clientNetlear/src/redux/actions/UploadingCourse/UploadingCourse.js":"89","/var/www/netlear/html/clientNetlear/src/redux/actions/sideMenu.js":"90","/var/www/netlear/html/clientNetlear/src/redux/actions/dev.js":"91","/var/www/netlear/html/clientNetlear/src/utils/mapArrays/latestEvents.js":"92","/var/www/netlear/html/clientNetlear/src/utils/eventPopoverContent/mainContentPopoverContent.js":"93","/var/www/netlear/html/clientNetlear/src/components/SideMenu/SideMenu.jsx":"94","/var/www/netlear/html/clientNetlear/src/components/CoursePaymentCardSettings/CoursePaymentCardSettings.jsx":"95","/var/www/netlear/html/clientNetlear/src/components/SettingsButton/SettingsButton.jsx":"96","/var/www/netlear/html/clientNetlear/src/components/WebinarsItemSettings/WebinarsItemSettings.jsx":"97","/var/www/netlear/html/clientNetlear/src/components/VideoPlayer/VideoPlayer.jsx":"98","/var/www/netlear/html/clientNetlear/src/redux/actions/UploadingCourse/api.js":"99","/var/www/netlear/html/clientNetlear/src/components/WebinarsList/Webinars2List/WebinarsList.jsx":"100","/var/www/netlear/html/clientNetlear/src/components/WebinarsList/Webinars3List/WebinarsList.jsx":"101","/var/www/netlear/html/clientNetlear/src/components/EventDeployPanel/EventDeployPanel.jsx":"102"},{"size":563,"mtime":1659371600560,"results":"103","hashOfConfig":"104"},{"size":6103,"mtime":1659964234536,"results":"105","hashOfConfig":"104"},{"size":323,"mtime":1659371600592,"results":"106","hashOfConfig":"104"},{"size":49,"mtime":1659371600552,"results":"107","hashOfConfig":"104"},{"size":707,"mtime":1659371600680,"results":"108","hashOfConfig":"104"},{"size":9443,"mtime":1659371600672,"results":"109","hashOfConfig":"104"},{"size":5484,"mtime":1659373706788,"results":"110","hashOfConfig":"104"},{"size":12772,"mtime":1659371600520,"results":"111","hashOfConfig":"104"},{"size":4243,"mtime":1659371600500,"results":"112","hashOfConfig":"104"},{"size":487,"mtime":1659371600584,"results":"113","hashOfConfig":"104"},{"size":936,"mtime":1659371600692,"results":"114","hashOfConfig":"104"},{"size":218,"mtime":1659371600572,"results":"115","hashOfConfig":"104"},{"size":3081,"mtime":1659371600564,"results":"116","hashOfConfig":"104"},{"size":1678,"mtime":1659371600524,"results":"117","hashOfConfig":"104"},{"size":1990,"mtime":1659371600604,"results":"118","hashOfConfig":"104"},{"size":503,"mtime":1659371600588,"results":"119","hashOfConfig":"104"},{"size":345,"mtime":1659371600588,"results":"120","hashOfConfig":"104"},{"size":254,"mtime":1659371600580,"results":"121","hashOfConfig":"104"},{"size":14266,"mtime":1659371600584,"results":"122","hashOfConfig":"104"},{"size":822,"mtime":1659371600672,"results":"123","hashOfConfig":"104"},{"size":265,"mtime":1659371600460,"results":"124","hashOfConfig":"104"},{"size":498,"mtime":1659371600516,"results":"125","hashOfConfig":"104"},{"size":724,"mtime":1659371600516,"results":"126","hashOfConfig":"104"},{"size":467,"mtime":1659371600536,"results":"127","hashOfConfig":"104"},{"size":356,"mtime":1659371600500,"results":"128","hashOfConfig":"104"},{"size":516,"mtime":1659371600588,"results":"129","hashOfConfig":"104"},{"size":1137,"mtime":1659371600580,"results":"130","hashOfConfig":"104"},{"size":2128,"mtime":1659371600580,"results":"131","hashOfConfig":"104"},{"size":3429,"mtime":1659371600580,"results":"132","hashOfConfig":"104"},{"size":2050,"mtime":1659371600676,"results":"133","hashOfConfig":"104"},{"size":5821,"mtime":1659371600608,"results":"134","hashOfConfig":"104"},{"size":15145,"mtime":1659371600624,"results":"135","hashOfConfig":"104"},{"size":3094,"mtime":1659371600684,"results":"136","hashOfConfig":"104"},{"size":9983,"mtime":1659374107174,"results":"137","hashOfConfig":"104"},{"size":5141,"mtime":1659371600660,"results":"138","hashOfConfig":"104"},{"size":4670,"mtime":1659371600688,"results":"139","hashOfConfig":"104"},{"size":911,"mtime":1659371600620,"results":"140","hashOfConfig":"104"},{"size":917,"mtime":1659371600616,"results":"141","hashOfConfig":"104"},{"size":1388,"mtime":1659371600616,"results":"142","hashOfConfig":"104"},{"size":1300,"mtime":1659371600684,"results":"143","hashOfConfig":"104"},{"size":2750,"mtime":1659371600620,"results":"144","hashOfConfig":"104"},{"size":4226,"mtime":1659371600620,"results":"145","hashOfConfig":"104"},{"size":465,"mtime":1659371600568,"results":"146","hashOfConfig":"104"},{"size":183,"mtime":1659371600576,"results":"147","hashOfConfig":"104"},{"size":327,"mtime":1659371600592,"results":"148","hashOfConfig":"104"},{"size":325,"mtime":1659371600600,"results":"149","hashOfConfig":"104"},{"size":465,"mtime":1659371600596,"results":"150","hashOfConfig":"104"},{"size":0,"mtime":1659371600576,"results":"151","hashOfConfig":"104"},{"size":621,"mtime":1659371600596,"results":"152","hashOfConfig":"104"},{"size":3071,"mtime":1659371600568,"results":"153","hashOfConfig":"104"},{"size":1132,"mtime":1659371600452,"results":"154","hashOfConfig":"104"},{"size":2958,"mtime":1659371600572,"results":"155","hashOfConfig":"104"},{"size":1129,"mtime":1659371600536,"results":"156","hashOfConfig":"104"},{"size":1561,"mtime":1659371600540,"results":"157","hashOfConfig":"104"},{"size":2504,"mtime":1659371600480,"results":"158","hashOfConfig":"104"},{"size":2690,"mtime":1659371600484,"results":"159","hashOfConfig":"104"},{"size":14895,"mtime":1659371600476,"results":"160","hashOfConfig":"104"},{"size":9911,"mtime":1659371600612,"results":"161","hashOfConfig":"104"},{"size":5576,"mtime":1659371600664,"results":"162","hashOfConfig":"104"},{"size":2001,"mtime":1659371600532,"results":"163","hashOfConfig":"104"},{"size":4449,"mtime":1659371600472,"results":"164","hashOfConfig":"104"},{"size":5951,"mtime":1660412772899,"results":"165","hashOfConfig":"104"},{"size":7656,"mtime":1659371600648,"results":"166","hashOfConfig":"104"},{"size":5032,"mtime":1659371600652,"results":"167","hashOfConfig":"104"},{"size":4563,"mtime":1659371600640,"results":"168","hashOfConfig":"104"},{"size":5032,"mtime":1659371600644,"results":"169","hashOfConfig":"104"},{"size":10455,"mtime":1660412691664,"results":"170","hashOfConfig":"104"},{"size":6426,"mtime":1660412559640,"results":"171","hashOfConfig":"104"},{"size":7680,"mtime":1659371600632,"results":"172","hashOfConfig":"104"},{"size":5361,"mtime":1660412710388,"results":"173","hashOfConfig":"104"},{"size":437,"mtime":1659371600568,"results":"174","hashOfConfig":"104"},{"size":326,"mtime":1659371600680,"results":"175","hashOfConfig":"104"},{"size":6004,"mtime":1659371600676,"results":"176","hashOfConfig":"104"},{"size":224,"mtime":1659371600572,"results":"177","hashOfConfig":"104"},{"size":256,"mtime":1659371600600,"results":"178","hashOfConfig":"104"},{"size":3188,"mtime":1659371600608,"results":"179","hashOfConfig":"104"},{"size":1170,"mtime":1659371600608,"results":"180","hashOfConfig":"104"},{"size":2140,"mtime":1659371600600,"results":"181","hashOfConfig":"104"},{"size":261,"mtime":1659371600456,"results":"182","hashOfConfig":"104"},{"size":1839,"mtime":1659371600600,"results":"183","hashOfConfig":"104"},{"size":774,"mtime":1659371600524,"results":"184","hashOfConfig":"104"},{"size":2008,"mtime":1659371600496,"results":"185","hashOfConfig":"104"},{"size":755,"mtime":1659371600476,"results":"186","hashOfConfig":"104"},{"size":4159,"mtime":1659371600464,"results":"187","hashOfConfig":"104"},{"size":883,"mtime":1659371600448,"results":"188","hashOfConfig":"104"},{"size":821,"mtime":1659371600472,"results":"189","hashOfConfig":"104"},{"size":8580,"mtime":1659371600548,"results":"190","hashOfConfig":"104"},{"size":1922,"mtime":1659371600496,"results":"191","hashOfConfig":"104"},{"size":1956,"mtime":1659371600568,"results":"192","hashOfConfig":"104"},{"size":269,"mtime":1659371600576,"results":"193","hashOfConfig":"104"},{"size":102,"mtime":1659371600572,"results":"194","hashOfConfig":"104"},{"size":1276,"mtime":1659371600604,"results":"195","hashOfConfig":"104"},{"size":2004,"mtime":1659371600600,"results":"196","hashOfConfig":"104"},{"size":807,"mtime":1659371600532,"results":"197","hashOfConfig":"104"},{"size":4318,"mtime":1659371600468,"results":"198","hashOfConfig":"104"},{"size":622,"mtime":1659371600528,"results":"199","hashOfConfig":"104"},{"size":9536,"mtime":1659371600544,"results":"200","hashOfConfig":"104"},{"size":300,"mtime":1659371600540,"results":"201","hashOfConfig":"104"},{"size":351,"mtime":1659371600572,"results":"202","hashOfConfig":"104"},{"size":8566,"mtime":1659371600548,"results":"203","hashOfConfig":"104"},{"size":8355,"mtime":1659371600552,"results":"204","hashOfConfig":"104"},{"size":10907,"mtime":1659371600492,"results":"205","hashOfConfig":"104"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},"12kdmvl",{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459"},"/var/www/netlear/html/clientNetlear/src/index.js",["460"],"import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { ParallaxProvider } from \"react-scroll-parallax\";\nimport App from \"./App\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n      {/* <React.StrictMode> */}\n      <ParallaxProvider>\n        <App />\n      </ParallaxProvider>\n      {/* </React.StrictMode> */}\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","/var/www/netlear/html/clientNetlear/src/App.js",["461","462","463","464"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport {\n  HomePage,\n  AskQuestionPage,\n  SpecialistsPage,\n  EventsPage,\n  EventPage,\n  EditUserProfile,\n  UserProfile,\n  AuthGoogleToken,\n  AuthFacebookToken,\n  AuthCheckKey,\n  Tariffs\n} from \"./views\";\n\nimport NotFound from \"./views/NotFound/NotFound\";\nimport Header from \"./views/Header/Header\";\nimport LoginForm from \"./components/LoginForm/LoginForm\";\nimport RegForm from \"./components/RegForm/RegForm\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Footer from \"./components/Footer/Footer\";\nimport { url } from \"./conf\";\n\n\nfunction App({ history }) {\n  const dispatch = useDispatch();\n  const [sd, setList] = useState(\"\")\n  const token = localStorage.getItem('token')\n  const user = useSelector(state => state.Auth)\n  const abortController = new AbortController()\n\n  // const getUser = (method,value) =>{\n  //   if(token){\n  //     fetch(`${url}useroute/user/`,{\n  //       method:\"POST\",\n  //       headers: {\n  //         'Content-Type': 'application/json;charset=utf-8',\n  //         \"Authorization\":`Bearer ${token}`\n  //       },\n  //       signal:abortController.signal\n  //     })\n  //     .then(responce =>{\n  //       return responce.json()\n  //     })\n  //     .then(result => {\n  //       if(result.message){\n  //         return \"\"\n  //       }else{\n  //         let res\n  //         if(result.user.avatar){\n  //           res = {...result.user,authorization:true,picture:`${url}uploads/${result.user.avatar}`} \n  //         } else {\n  //           res = {...result.user,authorization:true,picture:\"default\"} \n  //         }\n  //         store.dispatch({type:'SET_USER_DATA',payload:res})\n  //       }\n  //     })\n  //   }else if(method == \"google\"&&!token){\n  //     let objUser = JSON.parse(JSON.stringify(user))\n\n  //     fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${value}`,{signal:abortController.signal})\n  //     .then((res)=>res.json())\n  //     .then((result)=>{\n  //       if(result.error){\n  //         localStorage.clear();\n  //         store.dispatch({type:'SET_LOGOUT'})\n  //         return \"\"\n  //       }\n  //       objUser.lastname  = result.family_name\n  //       objUser.firstname = result.given_name\n  //       objUser.picture   = result.picture\n  //       objUser.email     = result.email\n  //       const res = {...objUser,authorization:true} \n  //       store.dispatch({type:'SET_USER_DATA',payload:res})\n  //     })\n  //   }\n  // }\n\n  useEffect(()=>{\n    const google = localStorage.getItem(\"google\")\n\n    if(google){\n      let objUser = JSON.parse(JSON.stringify(user))\n\n      fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${google}`,{signal:abortController.signal})\n      .then((res)=>res.json())\n      .then((result)=>{\n        if(result.error){\n          localStorage.clear();\n          store.dispatch({type:'SET_LOGOUT'})\n        } else {\n          objUser.lastname  = result.family_name\n          objUser.firstname = result.given_name\n          objUser.picture   = result.picture\n          objUser.email     = result.email\n          createGoogleUser(objUser)\n          const res = {...objUser,authorization:true} \n          store.dispatch({type:'SET_USER_DATA',payload:res})\n        }\n      })\n\n  let createGoogleUser = () =>{\n    fetch(`${url}auth/googleauth`,{\n      method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n      body: JSON.stringify({google: localStorage.getItem(\"google\")})\n    })\n    .then((res)=>res.json())\n    .then((result)=>localStorage.setItem(\"token\",result.token))\n    }\n\n    } else {\n      fetch(`${url}useroute/user/`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n          \"Authorization\":`Bearer ${token}`\n        },\n        signal:abortController.signal\n      })\n      .then(responce =>{\n        return responce.json()\n      })\n      .then(result => {\n        if(result.message){\n        }else{\n          let res\n          if(result.user.avatar){\n            res = {...result.user,authorization:true,picture:`${url}uploads/${result.user.avatar}`} \n          } else {\n            res = {...result.user,authorization:true,picture:\"default\"} \n          }\n          store.dispatch({type:'SET_USER_DATA',payload:res})\n        }\n      })\n    }\n    return () => { abortController.abort() }\n  },[setList])\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <Router>\n          <Header auth={()=>setList(Math.random())}/>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/reg-page\" component={RegForm} />\n            <Route exact path=\"/login-page\" component={LoginForm} />\n            <Route path=\"/ask-question\" component={AskQuestionPage} />\n            <Route path=\"/specialists\" component={SpecialistsPage} />\n            <Route path=\"/events\" component={EventsPage} />\n            <Route path=\"/event\" component={EventPage} />\n            <Route path=\"/tariffs\" component={Tariffs} />\n            <Route\n              path=\"/event-redactor\"\n              component={() => <EventPage variant=\"redactor\" />}\n            />\n            <Route\n              path=\"/pagecoorse/:id\"\n              component={() => <EventPage/>}\n            />\n            <Route path=\"/edit-user-profile\" component={EditUserProfile} />\n            <Route path=\"/user-profile\" component={UserProfile} />\n            <Route path=\"/google/callback/:token\" component={AuthGoogleToken} />\n            <Route\n              path=\"/facebook/callback/:token\"\n              component={AuthFacebookToken}\n            />\n            <Route path=\"/auth/check_key/:id\" component={AuthCheckKey} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","/var/www/netlear/html/clientNetlear/src/redux/store.js",[],"/var/www/netlear/html/clientNetlear/src/conf.js",[],"/var/www/netlear/html/clientNetlear/src/views/NotFound/NotFound.jsx",[],"/var/www/netlear/html/clientNetlear/src/views/Header/Header.jsx",["465","466","467","468","469","470","471","472","473"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\nimport \"./Header.scss\";\nimport Modal from \"../../components/Modal/Modal\";\nimport { ReactComponent as SearchIcon } from \"../../assets/icons/header/search.svg\";\nimport { ReactComponent as LikeIcon } from \"../../assets/icons/header/like.svg\";\nimport { ReactComponent as UserIcon } from \"../../assets/icons/header/user.svg\";\nimport { ReactComponent as LogoImg } from \"../../assets/icons/logo/edmed-logo-svg.svg\";\nimport HeaderImg   from \"../../assets/img/header/header_active_img.jpg\";\nimport { MenuData } from \"./MenuData\";\nimport \"../../App.scss\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport RegForm from \"../../components/RegForm/RegForm\";\nimport { Avatar, Badge, Menu, Dropdown, Space, Button, Select } from \"antd\";\nimport {\n  UserOutlined,\n  DownOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLogout } from \"../../redux/actions/Auth/Auth\";\nimport store from \"../../redux/store\"\nimport ModalWindow from \"../../components/Modal/ModalWindow/ModalWindow\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { showModal } from \"../../redux/actions/modal\";\n\nlet color = \"#ffffff\";\nlet style = \"light\";\nlet fillStyle = \"#C7CEDB\";\n\nfunction Header({auth}) {\n  const [state, setState] = useState({ isBurgerOpen: false });\n  const [whiteBlackMenu,setWhiteBlackMenu] = useState(false)\n  const location = useLocation()\n  const handleBurgerBtnClick = () => {\n    setState({ isBurgerOpen: !state.isBurgerOpen });\n  };\n\n  useEffect(()=>{\n    if(state.isBurgerOpen){\n      setWhiteBlackMenu(true)\n      style = \"dark\"\n    }else if(location.pathname == \"/tariffs\"){\n      setWhiteBlackMenu(true)\n      style = \"dark\"\n    }else if(location.pathname.length > 20){\n      setWhiteBlackMenu(true)\n      style = \"dark\"\n    }else if(location.pathname == \"/coorse\"){\n      setWhiteBlackMenu(true)\n      style = \"dark\"\n    }else if(location.pathname == \"/events\"){\n      setWhiteBlackMenu(true)\n      style = \"dark\"\n    }else if(location.pathname == \"/event-redactor\"){\n      setWhiteBlackMenu(true)\n      style = \"dark\"\n    }else{\n      setWhiteBlackMenu(false)\n      style = \"light\"\n    }\n  },[location.pathname,state])\n\n  const [stateReg,setStateReg] = useState(null)\n  const [like, setLike] = useState({ isLike: false });\n  const handleLikeBtnClick = () => {\n    setLike({ isLike: !like.isLike });\n  };\n\n  const [modalActive, setModalActive] = useState(false);\n  const showLoginForm = () => {\n    setModalActive(true);\n  };\n  const [modalActive1, setModalActive1] = useState(false);\n  const showRegForm = () => {\n    setModalActive1(true)\n    setModalActive(false)\n  };\n  const [modalActive3,setModalActive3] = useState(false)\n  const stateRegCb = (result) =>{\n    setStateReg(result)\n    setModalActive1(false)\n  }\n  const width = window.innerWidth;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const userData = useSelector((state) => state.Auth);\n\n  const onClickLogIn = () => {\n    history.push(\"/login-page\");\n  };\n  const onClickLogOut = () => {\n    dispatch(showModal(\"logoutModal\"));\n  };\n\n  const handleModalOk = () => {\n    history.push(\"/\");\n    dispatch(fetchLogout());\n    // dispatch(userLogout());\n  };\n  useEffect(()=>{\n    if(stateReg){\n      setModalActive3(true)\n    }\n  },[stateReg])\n\n  const menu = (\n    <Menu>\n      <Spinner color={\"blue\"}>\n        <Menu.Item key=\"0\">\n          <Link to={\"/event\"}>Мое обучение</Link>\n        </Menu.Item>\n        <Menu.Item key=\"1\">\n          <Link to={\"/event-redactor\"}>Создать свои курсы</Link>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"2\">\n          <Link to={\"/\"}>Уведомления</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <Link to={\"/\"}>Сообщения</Link>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"8\">\n          <Link to={\"/edit-user-profile\"}>Настройки учетной записи</Link>\n        </Menu.Item>\n        <Menu.Item key=\"7\">\n          <Link to={\"/\"}>Edmed coins</Link>\n        </Menu.Item>\n        <Menu.Item key=\"6\">\n          <Link to={\"/\"}>История покупок</Link>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"5\">\n          <Link to={\"/\"}>Помощь</Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          <Space>\n            <Button onClick={onClickLogOut}>Выйти</Button>\n          </Space>\n        </Menu.Item>\n      </Spinner>\n    </Menu>\n  );\n\n  return (\n    <div>\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        className=\"modal__login\"\n      >\n        <LoginForm callback={showRegForm} props={()=>{setModalActive(false);auth()}}/>\n        {/* <RegForm /> */}\n      </Modal>\n      <Modal\n        active={modalActive1}\n        setActive={setModalActive1}\n        className=\"modal__reg\"\n      >\n        <RegForm callback={showLoginForm} prop={stateRegCb}/>\n      </Modal>\n      <Modal \n        active={modalActive3}\n        setActive={setModalActive3}\n        className=\"modal__info\"\n      >\n        <p>{stateReg}</p>\n      </Modal>\n      <div\n        className={`header ${\n          state.isBurgerOpen ? \"header--active-nav\" : \"hide\"\n        }`}\n      >\n        <div className=\"header__container\">\n          <Link to=\"/\" className=\"header__logo\">\n            <LogoImg\n              className=\"header__logo-img\"\n              style={{ fill: whiteBlackMenu ? \"#24292F\" : fillStyle }}\n            />\n          </Link>\n          <div className=\"header__right\">\n            <form className=\"search__form\">\n              <SearchIcon\n                className=\"search__button\"\n                style={{ fill: whiteBlackMenu ? \"#161616\" : color , marginTop:\"0px\"}}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Поиск по сайту\"\n                className={`search__input ${style} ${\n                  whiteBlackMenu ? \"search__input--active\" : \"hide\"\n                }`}\n              />\n            </form>\n            <div className=\"block_Knop\">\n            <LikeIcon\n              className=\"like\"\n              // onClick={handleLikeBtnClick}\n              onClick={showRegForm}\n              style={\n                ({ stroke: whiteBlackMenu ? like.isLike ? \"red\" : \"#161616\" : like.isLike ? \"red\" : color})\n              }\n            />\n\n            {userData.authorization ? (\n              <>\n                <Dropdown overlay={menu} trigger={[\"click\"]}>\n                  <div\n                    className=\"ant-dropdown-link ant-user-dropdown-link\"\n                    style={{\"cursor\":\"pointer\"}}\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    {width >= 600 && userData.firstName}\n                    <>\n                      <ModalWindow\n                        title={\"Вы действительно хотите выйти?\"}\n                        onClickOk={handleModalOk}\n                        selector={\"logoutModal\"}\n                      >\n                        <ExclamationCircleOutlined\n                          style={{ color: \"yellow\", fontSize: \"50px\" }}\n                        ></ExclamationCircleOutlined>\n                      </ModalWindow>\n\n                      <div className=\"user-ico\">\n                        <span>\n                          <Badge dot={true}>\n                            <Avatar\n                              shape=\"square\"\n                              icon={\n                                <img src={userData.picture} alt=\"ava\" /> || (\n                                  <UserOutlined />\n                                )\n                              }\n                            />\n                          </Badge>\n                        </span>\n                      </div>\n                    </>\n                  </div>\n                </Dropdown>\n              </>\n            ) : (\n              <UserIcon\n                className=\"user\"\n                onClick={showLoginForm}\n                style={{ stroke: whiteBlackMenu ? \"#161616\" : color }}\n              />\n            )}\n\n            <button\n              className={`burger ${style} ${\n                state.isBurgerOpen ? \"burger--active\" : \"hide\"\n              }`}\n              onClick={handleBurgerBtnClick}\n            >\n              <span className={`burger__line ${style}`}></span>\n            </button>\n            {MenuData.length && (\n              <nav className={`nav ${state.isBurgerOpen ? \"active\" : \"hide\"}`}>\n                <ul className=\"nav__list\">\n                  {MenuData.map((item) => (\n                    <li className=\"nav__item\" key={item.label}>\n                      <Link\n                        to={item.url}\n                        className=\"nav__link\"\n                        onClick={handleBurgerBtnClick}\n                      >\n                        {item.label}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </nav>\n            )}\n            <div className=\"header__img\">\n              <img src={HeaderImg} alt=\"\" />\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/var/www/netlear/html/clientNetlear/src/components/LoginForm/LoginForm.jsx",["474","475","476","477"],"import React, { useContext, useEffect, useState } from \"react\";\nimport \"./LoginForm.scss\";\nimport \"../../fonts/iconsfont.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchLogIn } from \"../../redux/actions/Auth/Auth\";\nimport { url } from \"../../conf\"\nimport Button from \"../Button/Button\";\nimport store from \"../../redux/store\";\n\nconst LoginForm = ({ history, callback, props}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fail, setFail] = useState(\"\")\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector((state) => state.Auth);\n  const user = useSelector(state => state.Auth)\n\n  React.useEffect(() => {\n    if (isAuth) {\n      history.push(\"/\");\n    }\n  }, [isAuth]);\n  \n  const login = () =>{\n    //авторизация по почте\n    if(email.match(/@/)){\n      fetch(`${url}auth/loginemail`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({email:email,password:password})\n      })\n      .then(responce =>{\n        return responce.json()\n      })\n      .then(result => {\n        if(result.message){\n          setFail(result.message)\n        }else{\n          localStorage.setItem('token',result.token)\n          props()\n        }\n      })\n  \n      return\n    }else{\n      ///авторизация по мобилке\n      fetch(`${url}auth/loginphone`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({phoneNumber:email,password:password})\n      })\n      .then(responce =>{\n        return responce.json()\n      })\n      .then(result => {\n        if(result.message){\n          setFail(result.message)\n        }else{\n          localStorage.setItem(\"token\",result.token)\n          props()\n        }\n      })\n  \n      return\n    }\n  }\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    dispatch(fetchLogIn(values));\n    // dispatch(getToken(values.email, values.password, values.remember));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  let getUserGoogle = () =>{\n    let objUser = JSON.parse(JSON.stringify(user))\n\n    fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${localStorage.getItem(\"google\")}`)\n    .then((res)=>res.json())\n    .then((result)=>{\n      if(result.error){\n        localStorage.clear();\n        store.dispatch({type:'SET_LOGOUT'})\n        return\n      }\n      objUser.lastname  = result.family_name\n      objUser.firstname = result.given_name\n      objUser.picture   = result.picture\n      objUser.email     = result.email\n      createGoogleUser(objUser)\n      const res = {...objUser,authorization:true} \n      store.dispatch({type:'SET_USER_DATA',payload:res})\n    })\n  }\n\n  let createGoogleUser = () =>{\n    fetch(`${url}auth/googleauth`,{\n      method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n      body: JSON.stringify({google: localStorage.getItem(\"google\")})\n    })\n    .then((res)=>res.json())\n    .then((result)=>localStorage.setItem(\"token\",result.token))\n  }\n\n  const handleSubmitGoogleForm = () => {\n    let tokenSave = (e) =>{\n      localStorage.setItem('google',e.credential)\n      getUserGoogle()\n      props()\n    }\n    window.google.accounts.id.initialize({\n      client_id: \"259068887637-5on1upde1v5h96m4662ah00uhan2kipt.apps.googleusercontent.com\",\n      callback: tokenSave\n    });\n    window.google.accounts.id.prompt()\n  };\n\n  const handleSubmitFacebookForm = () => {\n    window.location = `${URL}auth/facebook`;\n  };\n\n  return (\n    <div className=\"login-form\">\n      <span className=\"login__span\">{fail}</span>\n      <form\n        action=\"\"\n        className=\"login__form\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"номер телефона или e-mail\"\n        />\n        <div className=\"lr__form_div\">\n          <input\n            className=\"lr__form_input\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            type=\"password\"\n            placeholder=\"Пароль\"\n          />\n          <span className=\"lr__form_forgot\">Забыли?</span>\n        </div>\n        <div className=\"lr__form_checkbox\">\n          <input type=\"checkbox\" id=\"checkbox\" />\n          <label for=\"checkbox\">Запомнить меня</label>\n        </div>\n\n        <Button\n          type=\"button\"\n          className=\"lr__form_button\"\n          text=\"Войти\"\n          onClick={() => login()}\n        ></Button>\n        {/* <Button onClick={() => store.registration(email, password)}>\n          Регистрация\n        </Button> */}\n      </form>\n      <span className=\"login__span\">Или продолжить с помощью</span>\n      <ul className=\"continue-with__list\">\n        <li className=\"continue-with__item icon-google\" onClick={handleSubmitGoogleForm}></li>\n      </ul>\n      <span className=\"login__span\">\n        У вас ещё нет аккаунта?{\" \"}\n        <span className=\"login__registration_btn\" onClick={callback}>Зарегистрироваться</span>\n      </span>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/var/www/netlear/html/clientNetlear/src/components/RegForm/RegForm.jsx",["478","479","480","481","482","483","484","485","486","487","488"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport \"./RegForm.scss\";\nimport {AddUser} from \"./funcReg\"\nimport { url } from \"../../conf\"\n\nconst RegForm = ({callback,prop}) => {\n  const [se,set] = useState(\"\")\n  const [img, setImg] = useState(null)\n  const [imgPreviyred, setImgPreviyred] = useState(\"\")\n  const [imgblockvisible, setImgblockvisible] = useState(\"notvisible\")\n  const [messageErr, setMessage] = useState(\"\")\n  const [codeNumber,setVerifyCode] = useState(false)\n  const [codeUser, setCodeUser] = useState(\"\")\n  const [codeErr,setCodeErr] = useState(\"\")\n  const [visibleMRegistation,setVisibleMRegistation] = useState({\n    email:\"notvisible\",\n    phone:\"notvisible\",\n    codePhone:\"notvisible\"\n  })\n\n  ///принять ошибки из funcReg\n  const [dataErr,setDataErr] = useState({\n    name:\"\",\n    lastname:\"\",\n    city:\"\",\n    phoneNumber:\"\",\n    academicDegrees:\"\",\n    position:\"\",\n    avatar:\"\",\n    email:\"\",\n    password:\"\",\n    gender:\"\"\n  })\n  const [data,setData] = useState({\n    name:\"\",\n    lastname:\"\",\n    city:\"\",\n    phoneNumber:\"\",\n    academicDegrees:\"\",\n    position:\"\",\n    avatar:\"\",\n    email:\"\",\n    password:\"\",\n    gender:\"\"\n  })\n  const startpozition = useRef(null);\n\n  const verifyCode = () =>{\n    const nom = {\n      recipient: data.phoneNumber,\n      id: \"myId123\",\n      validate: true,\n      limit: {\n        count: 3,\n        period: 600\n      }\n    }\n    fetch(`${url}/auth/veryfiphone`,{\n      method:\"POST\",\n      body:JSON.stringify(nom),\n      headers:{\n        \"Content-Type\":\"application/json;charset=utf-8\"\n      }\n    })\n    .then(result => result.json())\n    .then(res => setVerifyCode(res))\n  }\n\n  const cb = ({message,ref}) =>{\n    setMessage({msg:message,reff:ref})\n  }\n\n  const cbb = (result) =>{\n    if(result == \"Для подтверждения регистраций переидите в почту которую указали при регистраций\"||result == \"Вы успешно зарегестрировались!\"){\n      setData({\n        name:\"\",\n        lastname:\"\",\n        city:\"\",\n        phoneNumber:\"\",\n        academicDegrees:\"\",\n        position:\"\",\n        avatar:\"\",\n        email:\"\",\n        password:\"\",\n        gender:\"\"\n      })\n      prop(result)\n    }else{\n      setMessage({msg:result,reff:\"email\"})\n    }\n  }\n\n  useEffect(()=>{\n    if(messageErr){\n      let targetErr = messageErr.reff\n      for(let key in dataErr){\n        if(key == targetErr){\n          let obj = dataErr\n          obj[targetErr] = messageErr.msg\n          setDataErr(obj)\n          set(Math.random())\n        }\n      }\n      startpozition.current.scrollIntoView({behavior: \"smooth\",block:\"start\"})\n    }\n  },[messageErr])\n\n  useEffect(()=>{\n    if(!img){return}\n    setImgPreviyred(\"\")\n    const reader = new FileReader()\n\n    reader.onload = e =>{\n      setImgPreviyred(e.target.result)\n    }\n    \n    reader.readAsDataURL(img)\n  },[img])\n  \n  useEffect(()=>{\n    if(codeNumber.err){\n      setMessage({msg:codeNumber.err,reff:\"email\"})\n      return\n    }\n    if(codeNumber){\n      setVisibleMRegistation({\n        phone:\"lr__form_input\",\n        email:\"notvisible\",\n        codePhone:\"lr__form_input\"\n      })\n    }\n  },[codeNumber])\n\n  let checkCode = (code) =>{\n    if(code){\n      AddUser(data,img,cb,cbb,\"s\")\n      return\n    }\n    if(codeUser == codeNumber){\n      AddUser(data,img,cb,cbb,\"s\")\n    }\n  }\n  return (\n    <div className=\"reg-form\">\n      <h2 className=\"reg__title\" ref={startpozition}>Создать учетную запись</h2>\n      <form action=\"\" className=\"reg__form\">\n        <div style={{\"display\":\"flex\",\"justifyContent\":\"space-around\"}}>\n          <button className=\"input__file-button\" onClick={(e)=>{\n            e.preventDefault()\n            setVisibleMRegistation({\n              phone:\"lr__form_input\",\n              email:\"notvisible\",\n              codePhone:\"notvisible\"\n          })}}>По номеру</button>\n          <div style={{\"width\":\"10px\"}}></div>\n          <button className=\"input__file-button\" onClick={(e)=>{\n            e.preventDefault()\n            setVisibleMRegistation({\n              phone:\"notvisible\",\n              email:\"lr__form_input\",\n              codePhone:\"notvisible\"\n          })}}>По почте</button>\n        </div>\n        <input\n          className={visibleMRegistation.phone}\n          onChange={(e) =>{ \n            let obj = data\n            obj.phoneNumber = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.phoneNumber}\n          type=\"text\"\n          placeholder=\"Номер телефона для регистраций\"\n        />\n        <p className=\"errorMessage\">{dataErr.email}</p>\n        <input\n          className={visibleMRegistation.email}\n          onChange={(e) =>{ \n            let obj = data\n            obj.email = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.email}\n          type=\"text\"\n          placeholder=\"Имя пользователя/e-mail\"\n        />\n        <div className=\"lr__form_div\">\n          <p className=\"errorMessage\">{dataErr.password}</p>\n          <input\n            className=\"lr__form_input\"\n            onChange={(e) =>{ \n              let obj = data\n              obj.password = e.target.value\n              setData(obj)\n              set(Math.random())\n            }}\n            value={data.password}\n            type=\"password\"\n            placeholder=\"Пароль\"\n          />\n          <span className=\"lr__form_forgot\">Забыли?</span>\n        </div>\n        <span className=\"reg__password_span\">\n          Не менее 5 символов и короче 15 \n        </span>\n        <div className=\"lr__form_checkbox\">\n          <input type=\"checkbox\" id=\"checkbox1\" />\n          <label htmlFor=\"checkbox1\">Запомнить меня</label>\n        </div>\n        <h3>Личное</h3>\n        <p className=\"errorMessage\">{dataErr.name}</p>\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) =>{ \n            let obj = data\n            obj.name = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.name}\n          type=\"text\"\n\n          placeholder=\"Имя\"\n        />\n        <p className=\"errorMessage\">{dataErr.lastname}</p>\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) =>{ \n            let obj = data\n            obj.lastname = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.lastname}\n          type=\"text\"\n          placeholder=\"Фамилия\"\n        />\n        <div className=\"lr__form_radio\">\n          <p className=\"errorMessage\">{dataErr.gender}</p>\n          <input type=\"radio\" id=\"radio1\" name=\"radio-group1\" onChange={()=>{\n            let obj = data\n            obj.gender = \"Женский\"\n            setData(obj)\n            set(Math.random())\n          }}/>\n          <label htmlFor=\"radio1\">Женщина</label>\n          <input type=\"radio\" id=\"radio2\" name=\"radio-group1\" onChange={()=>{\n            let obj = data\n            obj.gender = \"Мужской\"\n            setData(obj)\n            set(Math.random())\n          }}/>\n          <label htmlFor=\"radio2\" id=\"label2\">\n            Мужчина\n          </label>\n        </div>\n        <h3>Контакты</h3>\n        <p className=\"errorMessage\">{dataErr.city}</p>\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) =>{ \n            let obj = data\n            obj.city = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.city}\n          type=\"text\"\n          placeholder=\"Город\"\n        />\n        <p className=\"errorMessage\">{dataErr.phoneNumber}</p>\n        <input\n          className={visibleMRegistation.email}\n          onChange={(e) =>{ \n            let obj = data\n            obj.phoneNumber = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.phoneNumber}\n          type=\"text\"\n          placeholder=\"Номер телефона\"\n        />\n        <h3>Профессиональное</h3>\n        <p className=\"errorMessage\">{dataErr.specialization}</p>\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) =>{ \n            let obj = data\n            obj.specialization = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.specialization}\n          type=\"text\"\n          placeholder=\"Специализация\"\n        />\n        <p className=\"errorMessage\">{dataErr.academicDegrees}</p>\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) =>{ \n            let obj = data\n            obj.academicDegrees = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.academicDegrees}\n          type=\"text\"\n          placeholder=\"Ученая степень \"\n        />\n        <p className=\"errorMessage\">{dataErr.position}</p>\n        <input\n          className=\"lr__form_input\"\n          onChange={(e) =>{ \n            let obj = data\n            obj.position = e.target.value\n            setData(obj)\n            set(Math.random())\n          }}\n          value={data.position}\n          type=\"text\"\n          placeholder=\"Должность\"\n        />\n        <div class=\"input__wrapper\">\n          <input \n            name=\"file\" \n            type=\"file\"\n            id=\"input__file\" \n            class=\"input__file\"\n            onChange={(event)=> { \n              setImgblockvisible(\"imgblockVisible\")\n              setImg(event.target.files[0]) \n            }}\n            multiple\n          />\n          <label for=\"input__file\" class=\"input__file-button\">\n            <span class=\"input__file-button-text\">Прикрепить файлы</span>\n          </label>\n        </div>\n        <span className=\"reg__add-files_span\">\n          Вы можете загрузить документы: сертификаты, дипломы, патенты,\n          подтверждающие вашу квалификацию. Это важно для пациентов и ваших\n          коллег.\n        </span>\n        <div class=\"input__wrapperava\">\n          <input \n            name=\"file\" \n            type=\"file\"\n            id=\"input__file\" \n            class=\"input__file\"\n            onChange={(event)=> { \n              setImgblockvisible(\"imgblockVisible\")\n              setImg(event.target.files[0]) \n            }}\n            multiple\n          />\n          <label for=\"input__file\" class=\"input__file-buttonava\">\n            <span class=\"input__file-button-text\">Добавить фото профиля</span>\n          </label>\n        </div>\n        <div className={imgblockvisible}>\n          <img className=\"avatarImgPreviyred\" src={imgPreviyred}/>\n        </div>\n        <div className=\"lr__form_radio\">\n          <input type=\"radio\" id=\"radio\" name=\"radio-group\" />\n          <label htmlFor=\"radio\">\n            Я прочел и принимаю\n            <br />\n            Политику конфиденциальности\n          </label>\n        </div>\n        <p>{codeErr}</p>\n        <input\n          className={visibleMRegistation.codePhone}\n          onChange={(e) =>{\n            if(e.target.value.length == 4){\n              if(e.target.value == codeNumber){\n                checkCode(e.target.value)\n              }else{\n                setCodeErr(\"Не правильные цифры\")\n              }\n            }\n            setCodeUser(e.target.value)\n            set(Math.random())\n          }}\n          value={codeUser}\n          type=\"text\"\n          placeholder=\"Введите последние 4 цифры номера телефона\"\n        />\n        <button\n          className=\"nth-of-type3\"\n          onClick={(e)=>{\n            e.preventDefault()\n            setDataErr({\n              name:\"\",\n              lastname:\"\",\n              phoneNumber:\"\",\n              email:\"\",\n              password:\"\"\n            })\n            setCodeErr(\"\")\n            setMessage(false)\n            if(visibleMRegistation.email == \"notvisible\"){\n              if(codeNumber&&!codeNumber.err){\n                checkCode()\n                return\n              }\n              verifyCode()\n              return\n            }else{\n              AddUser(data,img,cb,cbb,\"email\") \n            }\n          }}\n        >Создать учетную запись</button>\n        <div className=\"zamenit\">.</div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegForm;\n","/var/www/netlear/html/clientNetlear/src/components/Footer/Footer.jsx",["489","490","491","492","493","494","495","496","497","498","499","500","501"],"import React from 'react';\nimport './Footer.scss';\n\nimport mailImg from '../../assets/img/newsletter-mail.svg';\nimport paymentImg from '../../assets/img/payment/full-pay.png';\n\nimport FooterContentBlock from '../FooterContentBlock/FooterContentBlock';\nimport  { ReactComponent as LogoImg }  from \"../../assets/icons/logo/edmed-logo-svg.svg\";\n\nimport {\n  contantUs,\n  navigationArr,\n  networks,\n  forListeners,\n  forSpeakers,\n} from '../../utils/mapArrays/footerContent';\nimport { RightOutlined } from '@ant-design/icons';\nimport { Input, Button } from 'antd';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// Import Swiper styles\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\n\n// import './styles.css';\n\n// import Swiper core and required modules\nimport SwiperCore, { Pagination, Navigation, Autoplay } from 'swiper/core';\nimport { Link } from 'react-router-dom';\n\n// install Swiper modules\nSwiperCore.use([Pagination, Navigation, Autoplay]);\n\nconst layout = {\n  labelCol: {\n    span: 0,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nfunction Footer() {\n  const [subscribeState, setSubscribeState] = React.useState('');\n  const onChangeSubscribeInput = (e) => {\n    const value = e.target.value;\n    setSubscribeState(value);\n  };\n\n  const onSubmitSubscribeForm = () => {\n    console.log(`Success: ${subscribeState}`);\n  };\n\n  return (\n    <div className=\"footer\">\n      {/* <div className=\"footer__subsribe subscribe\">\n        <div className=\"subscribe__wrapper\">\n          <div className=\"subscribe__title\">\n            <img src={mailImg} alt=\"\" />\n            <h2>Подпишитесь на уведомления о новых мероприятиях</h2>\n          </div>\n          <div className=\"subscribe__form\">\n            <Input placeholder=\"Email\" onChange={onChangeSubscribeInput} />\n            <Button type=\"primary\" onClick={onSubmitSubscribeForm}>\n              Отправить\n            </Button>\n          </div>\n        </div>\n      </div> */}\n      <Link to=\"/\" className=\"header__logo\">\n        <LogoImg\n          className=\"header__logo-img\"\n          style={{ fill:\"#24292F\" }}\n       />\n      </Link>\n      <div className=\"footer__content footer-content\">\n        <div className=\"footer-content__wrapper\">\n          <FooterContentBlock title={'Контакты'}>\n            {contantUs.map((el, i) => {\n              return (\n                <div key={i} className=\"footer-content-block__item\">\n                  {el.img}\n                  <a href={el.link}>{el.text}</a>\n                </div>\n              );\n            })}\n          </FooterContentBlock>\n          <FooterContentBlock title={'Для слушателей'}>\n            {forListeners.map((el, i) => {\n              if (el.type === 'colored') {\n                return (\n                  <div key={i} className=\"footer-content-block__item_colored fs14\">\n                    <a href={el.link}>{el.text}</a>\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={i} className=\"footer-content-block__item fs14\">\n                    <a href={el.link}>{el.text}</a>\n                  </div>\n                );\n              }\n            })}\n          </FooterContentBlock>\n          <FooterContentBlock title={'Для лекторов'}>\n            {forSpeakers.map((el, i) => {\n              return (\n                <div key={i} className=\"footer-content-block__item fs14\">\n                  <a className=\"footer-content-block__item\" href={el.link}>\n                    {el.text}\n                  </a>\n                </div>\n              );\n            })}\n          </FooterContentBlock>\n        </div>\n      </div>\n      {/* <div className=\"footer-content\">\n        <div className=\"footer-content__wrapper footer-content__bottom\">\n          <img className=\"footer-content__payment\" src={paymentImg} alt=\"\" />\n          <div className=\"footer-content__logo\"><Logo /></div>\n          \n          <p className=\"footer-content__rights\">EnzoStudio © 2021. All Rights Reserved</p>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Footer;\n","/var/www/netlear/html/clientNetlear/src/redux/reducers/index.js",[],"/var/www/netlear/html/clientNetlear/src/views/index.js",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/modal.js",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/Auth/Auth.js",["502"],"import authAPI from './api';\nimport { setSpinFalse, setSpinTrue } from '../spinner';\nimport { removeLS, getLS, setLS } from '../../../utils/LocalStorage';\nimport { message } from 'antd';\n\nexport const setUserToken = (token) => ({\n  type: 'SET_USER_TOKEN',\n  token: token,\n});\n\nexport const setUserData = (data) => ({\n  type: 'SET_USER_DATA',\n  data: data,\n});\n\nexport const setUserAvatar = (picture) => ({\n  type: 'SET_USER_AVATAR',\n  picture: picture,\n});\n\nexport const setUserLogout = () => ({\n  type: 'SET_LOGOUT',\n});\n\nexport const fetchSignUp = (values) => (dispatch) => {\n  const userData = {\n    firstName: values.firstName,\n    lastName: values.lastName,\n    email: values.email,\n    password: values.password,\n  };\n\n  authAPI\n    .signUp(userData)\n    .then((data) => {\n      // debugger;\n      // setLS('EDMED_USER_TOKEN', data.token);\n      // dispatch(setUserToken(data.token));\n      // console.log(data);\n      message.success('Письмо с подтверждением выслано на указанный Email');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      // debugger;\n      if (error.response.status === 401) {\n        message.error('Данный Email уже зарегистрирован');\n        dispatch(setSpinFalse());\n      }\n      console.log(error);\n    });\n};\n\nexport const fetchAuthorization = (id) => (dispatch) => {\n  dispatch(setSpinTrue());\n  authAPI\n    .authorization(id)\n    .then((data) => {\n      dispatch(setUserToken(data.token));\n      console.log(data);\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => console.log(error));\n};\n\nexport const fetchAuthMe = () => (dispatch) => {\n  const userToken = getLS('EDMED_USER_TOKEN');\n  dispatch(setSpinTrue());\n  authAPI\n    .authMe()\n    .then((data) => {\n      // debugger;\n      console.log(data);\n      dispatch(setUserData(data));\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => console.log(error));\n};\n\nexport const fetchLogout = () => (dispatch) => {\n  dispatch(setSpinTrue());\n  authAPI\n    .logout()\n    .then((data) => {\n      //   debugger;\n      console.log(data);\n      dispatch(setUserLogout());\n      removeLS('EDMED_USER_TOKEN');\n      dispatch(setSpinFalse());\n      message.success('Вы успешно покинули сессию');\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n    });\n};\n\nexport const fetchLogIn = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  authAPI\n    .logIn(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      dispatch(setUserToken(data.token));\n      setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Вы успешно авторизовались');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\n//Google reg\n\n// export const fetchGoogleToken = () => (dispatch) => {\n//   authAPI\n//     .authGoogle()\n//     .then((data) => console.log(data))\n//     .catch((error) => console.log(error));\n// };\n","/var/www/netlear/html/clientNetlear/src/components/RegForm/funcReg.js",["503","504","505","506"],"import axios from \"axios\";\nimport { url } from \"../../conf\"\nexport const AddUser = async (objUser,img,cb,cbb,method) =>{\n  const date = Date.now()\n\n  if(img){\n    objUser.avatar = `${date}${img.name}`\n  }else{\n    objUser.avatar = \"defaultimg.jpg\"\n  }\n  let eror = (result) =>{\n    result.errors.errors.map((obj,index)=>{\n      const objErr = {}\n      let ref = obj.param\n      let message = obj.msg\n      objErr.message = message\n      objErr.ref = ref\n      cb(objErr)\n    })\n  }\n  if(method == \"email\"){\n    delete objUser.phoneNumber\n    fetch(`${url}auth/registeremail`,{\n      method:\"POST\",\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(objUser)\n    })\n    .then(responce =>{\n      return responce.json()\n    })\n    .then(result => {\n      if(result.errors){eror(result)}\n      {cbb(result.message)}\n    })\n  }else{\n    delete objUser.email\n    fetch(`${url}auth/registerphone`,{\n      method:\"POST\",\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(objUser)\n    })\n    .then(responce =>{\n      return responce.json()\n    })\n    .then(result => {\n      if(result.errors){eror(result)}\n      {cbb(result.message)}\n    })\n  }\n\n  if(img){  \n    //изменение названия картинки \n    const blob = img.slice(0, img.size, 'image/png'); \n    const newFile = new File([blob], `${date}${img.name}`, {type: 'image/png'});\n    const dataa = new FormData()\n\n    dataa.append(\"avatar\", newFile)\n\n    await axios.post(`${url}auth/uploadavatar`,dataa,{\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n  }\n}\n","/var/www/netlear/html/clientNetlear/src/utils/mapArrays/footerContent.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/modal.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/spinner.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/dev.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/eventRedactor.js",["507","508"],"import promoImg from '../../assets/img/medicineSections/cardiovascular-surgery.jpg';\nimport speakerImg from '../../assets/img/lector_1.jpg';\n\nimport {\n  getFullCourseCost,\n  getFullCourseCostWithDiscount,\n} from '../../utils/calculations/getFullCourseCost';\n\nimport getCurrentDate from '../../utils/getDate';\n\nconst currentDate = getCurrentDate();\n\nconst initialState = {\n  type:0,\n  banner: {\n    data: {\n      title: 'Интернет-торговля товарами без штрафов: платежи, законы, правила, налоги',\n      speakerName: 'Татьяна Гринько',\n      speakerShortDescription:\n        'Основательница проекта по повышению налоговой грамотности для ИП и малого бизнеса nalogov.by (@nalogov_net)',\n      backgroundImg: '',\n    },\n    selectors: {\n      title: false,\n      speakerName: false,\n      speakerShortDescription: false,\n      backgroundImg: false,\n    },\n  },\n  mainContent: {\n    data: {\n      youWillLearn: {\n        title: 'Из курса вы узнаете',\n        content:\n          '<ul><li>как&nbsp;продавать&nbsp;товары&nbsp;в&nbsp;интернете&nbsp;законно,&nbsp;в&nbsp;том&nbsp;числе&nbsp;используя&nbsp;соцсети</li><li>как&nbsp;правильно&nbsp;принимать&nbsp;оплату&nbsp;за&nbsp;товар,&nbsp;в&nbsp;том&nbsp;числе&nbsp;онлайн-платежи</li><li>какую&nbsp;систему&nbsp;налогообложения&nbsp;выбрать&nbsp;и&nbsp;как&nbsp;минимизировать&nbsp;налоговую&nbsp;нагрузку</li><li>что&nbsp;нужно&nbsp;знать&nbsp;о&nbsp;правилах&nbsp;торговли&nbsp;и&nbsp;о&nbsp;защите&nbsp;прав&nbsp;потребителей,&nbsp;чтобы&nbsp;защититься&nbsp;от&nbsp;потребительского&nbsp;экстремизма</li><li>как&nbsp;законно&nbsp;использовать&nbsp;социальные&nbsp;сети&nbsp;для&nbsp;рекламы</li><li>какие&nbsp;документы&nbsp;необходимо&nbsp;составлять&nbsp;и&nbsp;хранить&nbsp;при&nbsp;онлайн-продаже&nbsp;товаров</li></ul>',\n      },\n      eventProgram: {\n        title: 'Программа',\n        content:\n          '<p>Цикл полезен вам, если вы зарабатываете или хотите зарабатывать в интернете. Гринько Татьяна, эксперт в области учета и налогообложения малого бизнеса и ИП, расскажет как избежать ошибок. Ведь онлайн-бизнес - это не просто “магазин на диване”. Здесь есть свои законы и правила.</p>',\n      },\n      vebinars: [\n        {\n          promoImg: promoImg,\n          format: 'В записи',\n          date: currentDate,\n          isPaid: true,\n          cost: 9.99,\n          currency: 'RUB',\n          personalDiscount: 5,\n          promoCode: '',\n          video: false,\n          videoName: '',\n          videoDescription: '',\n          videoDuration: 20,\n          title: '<p>Продаем товары в интернете законно</p>',\n          content:\n            '<p>Требования к сайтам интернет-магазинов;</p><p>Шаги создания и регистрации интернет-магазина;</p><p>Зачем сайт, если есть соц.сети;</p><p>Обязательные способы приема платежей;</p>',\n        },\n        {\n          promoImg: promoImg,\n          format: 'Онлайн трансляция',\n          date: currentDate,\n          isPaid: false,\n          cost: 0,\n          currency: 'RUB',\n          personalDiscount: 0,\n          promoCode: '',\n          video: false,\n          videoName: '',\n          videoDescription: '',\n          videoDuration: 40,\n          title: '<p>Продаем товары в интернете законно!</p>',\n          content: '<p>asdasdasdasd</p>',\n        },\n        {\n          promoImg: promoImg,\n          format: 'Онлайн трансляция',\n          date: currentDate,\n          isPaid: false,\n          cost: 0,\n          currency: 'RUB',\n          personalDiscount: 15,\n          promoCode: '',\n          video: false,\n          videoName: '',\n          videoDescription: '',\n          videoDuration: 40,\n          title: '<p>Продаем товары в интернете законно!!</p>',\n          content: '<p>asdasdasdasd</p>',\n        },\n      ],\n      fullCoursePayCard: {\n        cost: '99.99',\n        currency: 'RUB',\n        discount: 15,\n        costWithDiscount: 0,\n        promoCode: '',\n        promoCodeDiscount: 0,\n      },\n    },\n\n    selectors: {\n      youWillLearn: false,\n      eventProgram: false,\n      vebinars: false,\n      fullCoursePayCard: false,\n    },\n  },\n  aboutSpeaker: {\n    data: {\n      fullName: 'Татьяна Гринько',\n      career: 'Бухгалтер-аналитик',\n      description:\n        '<p>Имеет 17-летний опыт работы в качестве главного бухгалтера, руководителя и собственника компаний в разных отраслях.</p><p>За 12 лет работы на общей системе налогообложения освоила и отработала на практике законные способы оптимизации налогов.</p><p>Без потерь прошла несколько налоговых проверок.</p><p>Последние 6 лет изучает нюансы и тонкости УСН и налогов для ИП и микробизнеса. Оказывает методическую помощь в написании программного обеспечения в области учета и налогов для ИП и малого бизнеса.</p><p>Действующий индивидуальный предприниматель и собственник ООО. Все предпринимательские боли знает изнутри. Готова делиться опытом не только как профессионал, но и как коллега.</p>',\n      img: speakerImg,\n      video: 'https://vimeo.com/189301566',\n      videoName: 'Промо-видео',\n    },\n    selectors: { blockEditing: false },\n  },\n};\n\nconst eventRedactor = (state = initialState, action) => {\n  if (action.type === 'SET_COORSE') {\n    const coorse = action.payload\n    console.log(coorse);\n    return {\n      ...coorse\n    };\n  }\n  if (action.type === 'SET_BANNER_DATA') {\n    const selector = action.selector;\n    const data = action.data;\n    return {\n      ...state,\n      banner: {\n        ...state.banner,\n        data: {\n          ...state.banner.data,\n          [selector]: data,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_BANNER_SELECTOR') {\n    const selector = action.selector;\n    const boolean = action.boolean;\n    return {\n      ...state,\n      banner: {\n        ...state.banner,\n        selectors: {\n          ...state.banner.selectors,\n          [selector]: boolean,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_MAIN_CONTENT_DATA') {\n    const selector = action.selector;\n    const subSelector = action.subSelector;\n    const data = action.data;\n    // console.log(selector, subSelector,data)\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          [selector]: { ...state.mainContent.data[selector], [subSelector]: data },\n        },\n      },\n    };\n  }\n  if (action.type === 'REMOVE_MAIN_CONTENT_VEBINARS_ITEM') {\n    const index = action.index;\n    const newDataArray = state.mainContent.data.vebinars.slice(0);\n    newDataArray.splice(index, 1);\n    console.log(newDataArray);\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          vebinars: newDataArray,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_MAIN_CONTENT_VEBINARS_DATA') {\n    const selector = action?.selector;\n    const index = action?.index;\n    const data = action?.data;\n    const newDataArray = state.mainContent.data.vebinars.map((el, i) => {\n      if (i == index) {\n        return { ...el, [selector]: data };\n      }\n      return el;\n    });\n    console.log(newDataArray);\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          vebinars: newDataArray,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_MAIN_CONTENT_VEBINARS_SETTINGS') {\n    const {\n      format,\n      date,\n      isPaid,\n      cost,\n      personalDiscount,\n      promoCode,\n      currency,\n      video,\n      videoName,\n      videoDescription,\n    } = action.payload;\n    const index = action?.index;\n    const newDataArray = state.mainContent.data.vebinars.map((el, i) => {\n      if (i == index) {\n        return {\n          ...el,\n          format: format,\n          date: date,\n          isPaid: isPaid,\n          currency: currency,\n          cost: Number(cost),\n          personalDiscount: personalDiscount,\n          promoCode: promoCode,\n          video: video,\n          videoName: videoName,\n          videoDescription: videoDescription,\n        };\n      }\n      return { ...el, currency: currency };\n    });\n    // console.log(newDataArray);\n    console.log(state);\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          vebinars: newDataArray,\n          fullCoursePayCard: {\n            ...state.mainContent.data.fullCoursePayCard,\n            currency: currency,\n          },\n        },\n      },\n    };\n  }\n  if (action.type === 'ADD_ITEM_MAIN_CONTENT_VEBINARS_DATA') {\n    const selector = action?.selector;\n    const newDataArray = state.mainContent.data[selector].slice(0);\n\n    const currentCurrency = state.mainContent.data.fullCoursePayCard.currency;\n    newDataArray.push({\n      promoImg: promoImg,\n      format: 'В записи',\n      date: currentDate,\n      isPaid: true,\n      cost: 9.99,\n      currency: currentCurrency,\n      personalDiscount: 0,\n      promoCode: '',\n      video: false,\n      videoDuration: 0,\n      title: '<p>Продаем товары в интернете законно</p>',\n      content:\n        '<p>Требования к сайтам интернет-магазинов;</p><p>Шаги создания и регистрации интернет-магазина;</p><p>Зачем сайт, если есть соц.сети;</p><p>Обязательные способы приема платежей;</p>',\n    });\n\n    console.log(newDataArray);\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          [selector]: newDataArray,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_MAIN_CONTENT_SELECTOR') {\n    const selector = action.selector;\n    const boolean = action.boolean;\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        selectors: {\n          ...state.mainContent.selectors,\n          [selector]: boolean,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_ALL_SELECTORS') {\n    // const boolean = action.boolean;\n    return {\n      ...state,\n      banner: {\n        ...state.banner,\n        selectors: {\n          title: false,\n          speakerName: false,\n          speakerShortDescription: false,\n          backgroundImg: false,\n        },\n      },\n      mainContent: {\n        ...state.mainContent,\n        selectors: { youWillLearn: false, eventProgram: false, vebinars: false },\n      },\n      aboutSpeaker: {\n        ...state.aboutSpeaker,\n        selectors: { blockEditing: false },\n      },\n    };\n  }\n  if (action.type === 'SET_FULL_COURSE_COST') {\n    const courseArray = state.mainContent.data.vebinars;\n    const costSum = getFullCourseCost(courseArray);\n    const fullCourseDiscount = state.mainContent.data.fullCoursePayCard.discount;\n    const costWithDiscount = getFullCourseCostWithDiscount(costSum, fullCourseDiscount);\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          fullCoursePayCard: {\n            ...state.mainContent.data.fullCoursePayCard,\n            cost: costSum,\n            costWithDiscount: costWithDiscount,\n          },\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_FULL_COURSE_SETTINGS') {\n    const { currency, discount, promoCode, promoCodeDiscount } = action.payload;\n    const dataArray = state.mainContent.data.vebinars.slice(0);\n    const newDataArray = dataArray.map((el, i) => {\n      return { ...el, currency: currency };\n    });\n    console.log(newDataArray);\n    return {\n      ...state,\n      mainContent: {\n        ...state.mainContent,\n        data: {\n          ...state.mainContent.data,\n          fullCoursePayCard: {\n            ...state.mainContent.data.fullCoursePayCard,\n            currency,\n            discount,\n            promoCode,\n            promoCodeDiscount,\n          },\n          vebinars: newDataArray,\n        },\n      },\n    };\n  }\n  if (action.type === 'SET_ABOUT_SPEAKER_SELECTOR') {\n    const selector = action.selector;\n    const boolean = action.boolean;\n    return {\n      ...state,\n      aboutSpeaker: {\n        ...state.aboutSpeaker,\n        selectors: { ...state.aboutSpeaker.selectors, [selector]: boolean },\n      },\n    };\n  }\n  if (action.type === 'SET_ABOUT_SPEAKER_DATA') {\n    const selector = action.selector;\n    const data = action.data;\n    return {\n      ...state,\n      aboutSpeaker: {\n        ...state.aboutSpeaker,\n        data: { ...state.aboutSpeaker.data, [selector]: data },\n      },\n    };\n  }\n  return state;\n};\n\nexport default eventRedactor;\n","/var/www/netlear/html/clientNetlear/src/views/Header/MenuData.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/Button/Button.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/Modal/Modal.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/Modal/ModalWindow/ModalWindow.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/Spinner/Spinner.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/FooterContentBlock/FooterContentBlock.jsx",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/sideMenu.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/Auth.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/Temp.js",[],"/var/www/netlear/html/clientNetlear/src/redux/reducers/UploadingCourse.js",["509"],"const initialState = {\n  videoList: [],\n  postedCourseId: null,\n  courseFiles: { webinarsImg: [] },\n  isImagesUploaded : false\n};\n\nconst uploadingCourse = (state = initialState, action) => {\n  if (action.type === 'SET_VIDEOS_FROM_REDACTOR') {\n    const vebinarsArray = action.vebinarsArray.filter((el, i) => {\n      if (el.video) {\n        return el;\n      } else return;\n    });\n    const aboutSpeakerVideo =\n      typeof action.aboutSpeaker.video !== 'string' ? [action.aboutSpeaker] : [];\n    const concatArray = [...vebinarsArray, ...aboutSpeakerVideo];\n    console.log('c', concatArray);\n    const videoList = concatArray.map((el, i) => {\n      return {\n        video: el?.video,\n        videoName: el?.videoName,\n        videoDescription: el.videoDescription || '',\n        uploadingProcess: 0,\n        transcodingStatus: null,\n        videoURI: null,\n        videoURL: null,\n      };\n    });\n    return {\n      ...state,\n      videoList: videoList,\n    };\n  }\n  if (action.type === 'SET_VIDEO_UPLOADING_PROCESS') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, uploadingProcess: action.percent };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_URI') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, videoURI: action.uri };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_TRANSCODING_STATUS') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, transcodingStatus: action.status };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_URL') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, videoURL: action.url };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n  if (action.type === 'SET_POSTED_COURSE_ID') {\n    const id = action.payload;\n    return {\n      ...state,\n      postedCourseId: id,\n    };\n  }\n  if (action.type === 'SET_COURSE_IMG') {\n    const file = action.file;\n    const name = action.name;\n    const index = action.index;\n    // console.log('reducer:', name, file);\n    if (typeof index !== 'boolean') {\n      // const webinarsImgArray = state.courseFiles.webinarsImg.slice();\n      // const newWebinarsImgArray = webinarsImgArray.push(file);\n      // console.log('check:', webinarsImgArray);\n      return {\n        ...state,\n        courseFiles: {\n          ...state.courseFiles,\n          webinarsImg: [...state.courseFiles.webinarsImg, { file: file, index: index }],\n        },\n      };\n    } else {\n      return {\n        ...state,\n        courseFiles: {\n          ...state.courseFiles,\n          [name]: file,\n        },\n      };\n    }\n  }\n  if (action.type === 'SET_IMAGES_UPLOADED') {\n    const boolean = action.boolean;\n    return {\n      ...state,\n      isImagesUploaded: boolean,\n    };\n  }\n  //   if (action.type === 'SET_SPIN_FALSE') {\n  //     return {\n  //         isSpinning: action.payload,\n  //     };\n  //   }\n\n  return state;\n};\n\nexport default uploadingCourse;\n","/var/www/netlear/html/clientNetlear/src/views/HomePage/HomePage.jsx",["510"],"import React, { useState, useEffect } from \"react\";\nimport \"./HomePage.scss\";\nimport \"../../components/AntCarousel/AntCarousel.scss\";\nimport { Carousel } from \"antd\";\nimport homeScreen1 from \"../../assets/img/slider/main_pic1.jpg\";\nimport homeScreen2 from \"../../assets/img/slider/main_pic2.jpg\";\nimport homeScreen3 from \"../../assets/img/slider/main_pic3.jpg\";\nimport homeScreen4 from \"../../assets/img/slider/main_pic4.jpg\";\n\nimport LatestArticles from \"../LatestArticles/LatestArticles\";\nimport LatestEvents from \"../LatestEvents/LatestEvents\";\n\nfunction HomePage() {\n  const slides = [\n    `url(${homeScreen1})`,\n    `url(${homeScreen2})`,\n    `url(${homeScreen3})`,\n    `url(${homeScreen4})`,\n  ];\n\n  const [value, setValue] = useState(0);\n\n  const [background, setBackground] = useState({});\n  useEffect(() => {\n    myFunction();\n    return () => {\n      setBackground({});\n    };\n  }, []);\n  const myFunction = () => {\n    setBackground(\n      setInterval(() => {\n        setValue((v) => (v >= 3 ? 0 : v + 1));\n      }, 5000)\n    );\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"slider\">\n        <Carousel\n          autoplay={false}\n          autoplaySpeed={2000}\n          pauseOnHover={false}\n          dots={false}\n          arrows={false}\n        >\n          <div className=\"slider__slide\">\n            <div\n              className=\"slider__item\"\n              style={{ backgroundImage: slides[value] }}\n            >\n              <div className=\"slider__text\">\n                <h2>Медицинское сообщество, готовое учить и обучаться</h2>\n                <h3>\n                  Помогаем врачам делиться опытом\n                  <br />и зарабатывать на знаниях\n                </h3>\n              </div>\n              <div className=\"slider__item_shadow\"></div>\n            </div>\n          </div>\n        </Carousel>\n      </div>\n      <LatestEvents />\n      <LatestArticles />\n    </div>\n  );\n}\n\nexport default HomePage;\n","/var/www/netlear/html/clientNetlear/src/views/AskQuestionPage/AskQuestionPage.jsx",["511","512"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"../../components/AntCarousel/AntCarousel.scss\";\nimport Button from \"../../components/Button/Button\";\nimport \"../../components/Button/Button.scss\";\nimport \"./AskQuestionPage.scss\";\nimport { Carousel } from \"antd\";\nimport neurosurgery from \"../../assets/img/slider/question_neurosurgery.jpg\";\nimport { MenuData } from \"./MenuData\";\nimport Modal from \"../../components/Modal/Modal\";\n\nfunction AskQuestionPage() {\n  const [modalActive, setModalActive] = useState(false);\n  const [category, setCategory] = useState(\n    { name: \"\" },\n    { description: \"\" },\n    { isSet: false }\n  );\n  const [listItemClass, setListItemClass] = useState({\n    previousItem: null,\n  });\n\n  const handleNavClick = (e, name, description) => {\n    setCategory({ name: name, description: description, isSet: true });\n    listItemClass.previousItem?.classList.remove(\"categories__link--active\");\n    setListItemClass({ previousItem: e.target });\n    e.target.classList.add(\"categories__link--active\");\n  };\n\n  const [form, setForm] = useState({ showForm: false });\n  const showQuestionForm = () => {\n    if (form.showForm === true) {\n      setBtnOptions({\n        text: \"Отправить\",\n        onClick: setModalActive(true),\n        type: \"submit\",\n      });\n      setCategory({ isSet: false });\n      setForm({ showForm: false });\n      document.querySelector(\".form__text\").value = \"\";\n    } else {\n      setForm({ showForm: true });\n    }\n  };\n  const [btnOptions, setBtnOptions] = useState(\n    { text: \"Задать вопрос\" },\n    { onClick: showQuestionForm },\n    { type: \"\" }\n  );\n\n  return (\n    <div className=\"question-page\">\n      <div className=\"slider\">\n        <Carousel\n          autoplay={false}\n          autoplaySpeed={2000}\n          pauseOnHover={false}\n          dots={false}\n          arrows={false}\n        >\n          <div className=\"slider__slide\">\n            <div\n              className=\"slider__item\"\n              style={{ backgroundImage: `url(${neurosurgery})` }}\n            >\n              <Modal active={modalActive} setActive={setModalActive}>\n                <div className=\"form__modal\">\n                  <h2>Ваш вопрос отправлен!</h2>\n                  <p>\n                    Доктор ответит на него\n                    {/* в ближайшее время */}\n                    <br />\n                    как только я справлюсь со всем этим)))\n                  </p>\n                </div>\n              </Modal>\n\n              <div\n                className={`categories ${\n                  category.isSet ? \"categories--active\" : \"hide\"\n                } ${form.showForm ? \"categories--active-form\" : \"hide\"}`}\n              >\n                <div className=\"categories__left\">\n                  <div className=\"categories__name\">{category.name}</div>\n                  <div className=\"categories__text\">\n                    {/* <div className=\"categories__line\"></div> */}\n                    <div className=\"categories__description\">\n                      {category.description}\n                    </div>\n                  </div>\n                  <form action=\"\" className=\"categories__form\">\n                    <span className=\"form__name\">Задать вопрос</span>\n                    <textarea className=\"form__text\"></textarea>\n                    <p>\n                      Опишите вашу проблему конкретному специалисту из выбранной\n                      области и он ответит на вопрос. Перед этим рекомендуем\n                      ознакомиться со специалистами, это можно сделать на\n                      странице <Link to=\"/specialists\">специалисты</Link>.\n                    </p>\n                  </form>\n\n                  <Button\n                    onClick={showQuestionForm}\n                    className=\"categories__button\"\n                    text={btnOptions.text}\n                  ></Button>\n                </div>\n\n                <nav\n                  className={`categories__nav ${\n                    category.isSet ? \"categories__nav--active\" : \"hide\"\n                  }`}\n                >\n                  <ul className=\"nav__list categories__list\">\n                    {MenuData.map((item) => (\n                      <li\n                        className=\"nav__item categories__item\"\n                        key={item.label}\n                      >\n                        <Link\n                          // to={item.url}\n                          className=\"nav__link categories__link\"\n                          onClick={(e) =>\n                            handleNavClick(e, item.label, item.description)\n                          }\n                        >\n                          <span className=\"nav__link_num\">\n                            {item.num + \"  \"}\n                          </span>\n                          {item.label}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </nav>\n              </div>\n\n              <div\n                className={`slider__text ${\n                  category.isSet ? \"slider__text--active\" : \"hide\"\n                }`}\n              >\n                <h2>\n                  Задать вопрос\n                  <br />\n                  специалисту\n                </h2>\n              </div>\n              <div className=\"slider__item_shadow\"></div>\n            </div>\n          </div>\n        </Carousel>\n      </div>\n    </div>\n  );\n}\n\nexport default AskQuestionPage;\n","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/EventPage.jsx",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537"],"import React, { useEffect, useState } from 'react';\nimport './EventPage.scss';\n\nimport EventPageParallaxBanner from './corse1Page/EventPageParallaxBanner/EventPageParallaxBanner';\nimport EventPageContent from './corse1Page/EventPageContent/EventPageContent';\nimport EventPageAboutSpeaker from './corse1Page/EventPageAboutSpeaker/EventPageAboutSpeaker';\nimport EventPageParallaxBanner2 from './corse2Page/EventPageParallaxBanner/EventPageParallaxBanner';\nimport EventPageContent2 from './corse2Page/EventPageContent/EventPageContent';\nimport EventPageAboutSpeaker2 from './corse2Page/EventPageAboutSpeaker/EventPageAboutSpeaker';\nimport EventPageParallaxBanner3 from './corse3Page/EventPageParallaxBanner/EventPageParallaxBanner';\nimport EventPageContent3 from './corse3Page/EventPageContent/EventPageContent';\nimport EventPageAboutSpeaker3 from './corse3Page/EventPageAboutSpeaker/EventPageAboutSpeaker';\nimport DeployCourseBlock from '../../components/DeployCourseBlock/DeployCourseBlock';\nimport promoImg from '../../assets/img/medicineSections/cardiovascular-surgery.jpg';\nimport speakerImg from '../../assets/img/lector_1.jpg';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchGetAllCourses, setCoorseRedux,\n} from '../../redux/actions/eventRedactor/eventRedactor';\nimport { url } from '../../conf';\nimport getCurrentDate from '../../utils/getDate';\n\nfunction EventPage({ variant = 'static' }) {\n  const dispatch = useDispatch();\n  const eventRedactor = useSelector((state) => state.eventRedactor);\n  const [typeCoorse, setTypeCoorse] = useState(\"\")\n  const [coorse, setCoorse] = useState(false)\n  const currentDate = getCurrentDate();\n\n  useEffect(()=>{\n    let urlpage = []\n    let id  = []\n    let idd = false\n    let i   = 0\n    let coorse = []\n\n    for(let key of window.location.pathname){\n      i++\n      if(idd){\n        id.push(key)\n      }\n      if(key == \"/\" && i != 1){\n        id.push(key)\n        idd = true\n      } else if(!idd){\n        urlpage.push(key)\n      }\n    }\n    id[0]  = \"\"\n    urlpage[0] = \"\"\n    urlpage = urlpage.join(\"\")\n    id  = id.join(\"\")\n    \n    if(urlpage == \"pagecoorse\"){\n      fetch(`${url}post/`,{\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n        },\n      })\n      .then((res)=>res.json())\n      .then((result)=> coorse = result )\n\n      if(coorse.message){\n        alert(coorse.message)\n      }\n\n      for(let key of coorse){\n        if(key._id == id){\n          setCoorse(key)\n        } \n      }\n    } else {\n      const initialState = {\n        type:0,\n        banner: {\n          data: {\n            title: 'Интернет-торговля товарами без штрафов: платежи, законы, правила, налоги',\n            speakerName: 'Татьяна Гринько',\n            speakerShortDescription:\n              'Основательница проекта по повышению налоговой грамотности для ИП и малого бизнеса nalogov.by (@nalogov_net)',\n            backgroundImg: '',\n          },\n          selectors: {\n            title: false,\n            speakerName: false,\n            speakerShortDescription: false,\n            backgroundImg: false,\n          },\n        },\n        mainContent: {\n          data: {\n            youWillLearn: {\n              title: 'Из курса вы узнаете',\n              content:\n                '<ul><li>как&nbsp;продавать&nbsp;товары&nbsp;в&nbsp;интернете&nbsp;законно,&nbsp;в&nbsp;том&nbsp;числе&nbsp;используя&nbsp;соцсети</li><li>как&nbsp;правильно&nbsp;принимать&nbsp;оплату&nbsp;за&nbsp;товар,&nbsp;в&nbsp;том&nbsp;числе&nbsp;онлайн-платежи</li><li>какую&nbsp;систему&nbsp;налогообложения&nbsp;выбрать&nbsp;и&nbsp;как&nbsp;минимизировать&nbsp;налоговую&nbsp;нагрузку</li><li>что&nbsp;нужно&nbsp;знать&nbsp;о&nbsp;правилах&nbsp;торговли&nbsp;и&nbsp;о&nbsp;защите&nbsp;прав&nbsp;потребителей,&nbsp;чтобы&nbsp;защититься&nbsp;от&nbsp;потребительского&nbsp;экстремизма</li><li>как&nbsp;законно&nbsp;использовать&nbsp;социальные&nbsp;сети&nbsp;для&nbsp;рекламы</li><li>какие&nbsp;документы&nbsp;необходимо&nbsp;составлять&nbsp;и&nbsp;хранить&nbsp;при&nbsp;онлайн-продаже&nbsp;товаров</li></ul>',\n            },\n            eventProgram: {\n              title: 'Программа',\n              content:\n                '<p>Цикл полезен вам, если вы зарабатываете или хотите зарабатывать в интернете. Гринько Татьяна, эксперт в области учета и налогообложения малого бизнеса и ИП, расскажет как избежать ошибок. Ведь онлайн-бизнес - это не просто “магазин на диване”. Здесь есть свои законы и правила.</p>',\n            },\n            vebinars: [\n              {\n                promoImg: promoImg,\n                format: 'В записи',\n                date: currentDate,\n                isPaid: true,\n                cost: 9.99,\n                currency: 'RUB',\n                personalDiscount: 5,\n                promoCode: '',\n                video: false,\n                videoName: '',\n                videoDescription: '',\n                videoDuration: 20,\n                title: '<p>Продаем товары в интернете законно</p>',\n                content:\n                  '<p>Требования к сайтам интернет-магазинов;</p><p>Шаги создания и регистрации интернет-магазина;</p><p>Зачем сайт, если есть соц.сети;</p><p>Обязательные способы приема платежей;</p>',\n              },\n              {\n                promoImg: promoImg,\n                format: 'Онлайн трансляция',\n                date: currentDate,\n                isPaid: false,\n                cost: 0,\n                currency: 'RUB',\n                personalDiscount: 0,\n                promoCode: '',\n                video: false,\n                videoName: '',\n                videoDescription: '',\n                videoDuration: 40,\n                title: '<p>Продаем товары в интернете законно!</p>',\n                content: '<p>asdasdasdasd</p>',\n              },\n              {\n                promoImg: promoImg,\n                format: 'Онлайн трансляция',\n                date: currentDate,\n                isPaid: false,\n                cost: 0,\n                currency: 'RUB',\n                personalDiscount: 15,\n                promoCode: '',\n                video: false,\n                videoName: '',\n                videoDescription: '',\n                videoDuration: 40,\n                title: '<p>Продаем товары в интернете законно!!</p>',\n                content: '<p>asdasdasdasd</p>',\n              },\n            ],\n            fullCoursePayCard: {\n              cost: '99.99',\n              currency: 'RUB',\n              discount: 15,\n              costWithDiscount: 0,\n              promoCode: '',\n              promoCodeDiscount: 0,\n            },\n          },\n      \n          selectors: {\n            youWillLearn: false,\n            eventProgram: false,\n            vebinars: false,\n            fullCoursePayCard: false,\n          },\n        },\n        aboutSpeaker: {\n          data: {\n            fullName: 'Татьяна Гринько',\n            career: 'Бухгалтер-аналитик',\n            description:\n              '<p>Имеет 17-летний опыт работы в качестве главного бухгалтера, руководителя и собственника компаний в разных отраслях.</p><p>За 12 лет работы на общей системе налогообложения освоила и отработала на практике законные способы оптимизации налогов.</p><p>Без потерь прошла несколько налоговых проверок.</p><p>Последние 6 лет изучает нюансы и тонкости УСН и налогов для ИП и микробизнеса. Оказывает методическую помощь в написании программного обеспечения в области учета и налогов для ИП и малого бизнеса.</p><p>Действующий индивидуальный предприниматель и собственник ООО. Все предпринимательские боли знает изнутри. Готова делиться опытом не только как профессионал, но и как коллега.</p>',\n            img: speakerImg,\n            video: 'https://vimeo.com/189301566',\n            videoName: 'Промо-видео',\n          },\n          selectors: { blockEditing: false },\n        },\n      };\n      setCoorse(false)\n      dispatch(setCoorseRedux(initialState))\n    }\n  },[])\n\n  useEffect(()=>{\n    if(coorse){\n        const coorsee = coorse\n        const masVebin = []\n        \n        for(let key of coorsee.vebinars){\n\n          const objVebinars = {\n            title: key.title,\n            content : key.description,\n            date : key.date,\n            promoImg: key.photo,\n            format : key.typeOfContent,\n            isPaid: key.paymentMethod.paymentType == \"Платный контент\"?true:false,\n            cost      : key.price ,\n            currency   : key.currency,\n            promoCode  : key.promocode,\n            personalDiscount : key.promocodeDiscount,\n            video : key.video.video,\n            videoName : key.video.videoName,\n            videoDescription : key.video.videoDescription\n          }\n          masVebin.push(objVebinars)\n        }\n\n        const initialState = {\n          type:+coorse.type,\n          banner: {\n            data: {\n              title: coorse.mainTitle,\n              speakerName: coorse.speakerTitle,\n              speakerShortDescription:\n              coorse.speakerTitleParagraph,\n              backgroundImg: coorse.backgroundTitle,\n            },\n            selectors: {\n              title: false,\n              speakerName: false,\n              speakerShortDescription: false,\n              backgroundImg: false,\n            },\n          },\n          mainContent: {\n            data: {\n              youWillLearn: {\n                title: coorse.aboutCourse.title,\n                content:coorse.aboutCourse.paragraph,\n              },\n              eventProgram: {\n                title: coorse.program.title,\n                content:\n                coorse.program.paragraph,\n              },\n              vebinars: \n                masVebin\n              ,\n              fullCoursePayCard: {\n                cost: coorse.fullCoursePayCard.cost,\n                currency: coorse.fullCoursePayCard.currency,\n                discount: coorse.fullCoursePayCard.discount,\n                costWithDiscount: coorse.fullCoursePayCard.costWithDiscount,\n                promoCode: coorse.fullCoursePayCard.promocode,\n                promoCodeDiscount: coorse.fullCoursePayCard.promoCodeDiscount,\n              },\n            },\n        \n            selectors: {\n              youWillLearn: false,\n              eventProgram: false,\n              vebinars: false,\n              fullCoursePayCard: false,\n            },\n          },\n          aboutSpeaker: {\n            data: {\n              fullName: coorse.speaker.name,\n              career: coorse.speaker.profession,\n              description:\n              coorse.speaker.paragraph,\n              img: coorse.speaker.photo,\n              video: coorse.speaker.promoVideo,\n              videoName: coorse.speaker.promoVideo,\n            },\n            selectors: { blockEditing: false },\n          },\n        };\n        dispatch(setCoorseRedux(initialState))\n    }\n  },[coorse])\n\n  if(typeCoorse === 0||variant != \"redactor\"&&eventRedactor.type === 0||variant != \"redactor\"&&!eventRedactor.type){\n    return (\n      <div className=\"event-page\">\n        <button onClick={()=>setTypeCoorse(\"\")} className=\"knop\">\n          <p>\n            Назад\n          </p>\n        </button>\n        <EventPageParallaxBanner variant={variant} />\n        <EventPageContent variant={variant} />\n        <EventPageAboutSpeaker variant={variant} />\n        {variant === 'redactor' && <DeployCourseBlock props={typeCoorse}/>}\n      </div>\n    );\n  } else if(typeCoorse == 1||variant != \"redactor\"&&eventRedactor.type === 1){\n    return (\n      <div className=\"event-page\">\n        <button onClick={()=>setTypeCoorse(\"\")} className=\"knop\">\n          <p>\n            Назад\n          </p>\n        </button>\n        <EventPageParallaxBanner2 variant={variant} />\n        <EventPageContent2 variant={variant} />\n        <EventPageAboutSpeaker2 variant={variant} />\n        {variant === 'redactor' && <DeployCourseBlock props={typeCoorse}/>}\n      </div>\n    );\n  } else if(typeCoorse == 2||variant != \"redactor\"&&eventRedactor.type === 2){\n    return (\n      <div className=\"event-page\">\n        <button onClick={()=>setTypeCoorse(\"\")} className=\"knop\">\n          <p>\n            Назад\n          </p>\n        </button>\n        <EventPageParallaxBanner3 variant={variant} />\n        <EventPageContent3 variant={variant} />\n        <EventPageAboutSpeaker3 variant={variant} />\n        {variant === 'redactor' && <DeployCourseBlock props={typeCoorse}/>}\n      </div>\n    );\n  } else {\n    return(\n      <div className='blockType'>\n        <div className='blockType__container'>\n          <h1>\n            Выберите тип курса:\n          </h1>\n          <button onClick={()=>setTypeCoorse(0)}>\n            <img src='https://sun9-87.userapi.com/impf/ec2gdJcF-H_Ki1Hnx6APhbHV85hohfSZxk7apg/d4Gp2hRfFwU.jpg?size=445x1080&quality=95&sign=8dfc33e2910f490079ea1d363996b885&type=album'/>\n          </button>\n          <button onClick={()=>setTypeCoorse(1)}>\n            <img src='https://sun9-31.userapi.com/impf/YaWIr45yVIZO_-zZPHm6RdTJbJ6TdqZKIr7egA/e4S-O4d3Tno.jpg?size=445x1080&quality=95&sign=bdc1c9987bde8406a9876af2b8f9032b&type=album'/>\n          </button>\n          <button onClick={()=>setTypeCoorse(2)}>\n            <img src='https://sun9-34.userapi.com/impf/CZsZFk3aA-JZ093k_8mzPBPhUts6RHi_0ZCxkQ/rqhwPuLHgUw.jpg?size=452x1080&quality=95&sign=872be01ddfd2bdd658d32813605f3fd6&type=album'/>\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EventPage;\n","/var/www/netlear/html/clientNetlear/src/views/SpecialistsPage/SpecialistsPage.jsx",["538","539"],"import React, { useState, useEffect } from \"react\";\nimport \"./SpecialistsPage.scss\";\nimport { MenuData } from \"../AskQuestionPage/MenuData\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport SpecialistsSwiper from \"../../components/SpecialistsSwiper/SpecialistsSwiper\";\n\nfunction SpecialistsPage() {\n  const [category, setCategory] = useState(\n    { name: \"Психиатрия\" },\n    { isSet: false }\n  );\n\n  const handleExpClick = (e) => {\n    for (const active of document.querySelectorAll(\n      \".experience__item--active\"\n    )) {\n      active.classList.remove(\"experience__item--active\");\n    }\n    e.target.classList.add(\"experience__item--active\");\n  };\n  const [listItemClass, setListItemClass] = useState({\n    previousItem: null,\n  });\n  const handleNavClick = (e, name, description) => {\n    setCategory({ name: name, description: description, isSet: true });\n    listItemClass.previousItem?.classList.remove(\"nav__link--active\");\n    setListItemClass({ previousItem: e.target });\n    e.target.classList.add(\"nav__link--active\");\n  };\n\n  return (\n    <div className=\"specialists-page\">\n      <div className=\"specialists\">\n        <div className=\"categories__left\">\n          <div className=\"categories__name\">Специализация</div>\n          <div className=\"categories__text\">\n            <nav\n              className={`categories__nav ${\n                category.isSet ? \"categories__nav--active\" : \"hide\"\n              }`}\n            >\n              <ul className=\"nav__list categories__list\">\n                {MenuData.map((item) => (\n                  <li className=\"nav__item categories__item\" key={item.label}>\n                    <Link\n                      // to={item.url}\n                      className=\"nav__link categories__link\"\n                      onClick={(e) =>\n                        handleNavClick(e, item.label, item.description)\n                      }\n                    >\n                      {item.label}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </nav>\n          </div>\n        </div>\n\n        <div className=\"specialists__right\">\n          <div className=\"specialists__experience\">\n            <p className=\"experience__title\">Опыт работы</p>\n            <ul className=\"experience__list\">\n              <li className=\"experience__item\" onClick={handleExpClick}>\n                1-5 лет\n              </li>\n              <li className=\"experience__item\" onClick={handleExpClick}>\n                5-10 лет\n              </li>\n              <li className=\"experience__item\" onClick={handleExpClick}>\n                10-20 лет\n              </li>\n              <li className=\"experience__item\" onClick={handleExpClick}>\n                20+ лет\n              </li>\n            </ul>\n            <div className=\"experience__line\"></div>\n          </div>\n          <div className=\"specialists__slider\">\n            <SpecialistsSwiper></SpecialistsSwiper>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SpecialistsPage;\n","/var/www/netlear/html/clientNetlear/src/views/EventsPage/EventsPage.jsx",["540","541","542","543","544","545","546","547"],"import React, { useState, useEffect } from \"react\";\nimport \"./EventsPage.scss\";\nimport Button from \"../../components/Button/Button\";\nimport { Carousel } from \"antd\";\nimport { useHistory, Link, NavLink } from \"react-router-dom\";\nimport eventsPageImg from \"../../assets/img/slider/events_page.jpg\";\nimport annaImg from \"../../assets/img/slider/events_page_anna.jpg\";\nimport defaultPhoto from \"../../assets/img/eventsPage/sanitar.png\";\nimport { MenuData } from \"../AskQuestionPage/MenuData\";\nimport { EventsData } from \"./EventsData\";\nimport TextEditor from \"../../components/TextEditor/TextEditor\";\nimport { useDispatch } from \"react-redux\";\nimport { setCoorseRedux } from \"../../redux/actions/eventRedactor/eventRedactor\";\nimport { url } from \"../../conf\";\n\nfunction EventsPage() {\n  const [events, setEvents] = useState({ type: \"\", event: \"\", firstEvent: \"\" });\n  const [masCoorse, setCoorse]  = useState([])\n  const dispatch = useDispatch();\n  const [listItemClass, setListItemClass] = useState({\n    previousItem: null,\n  });\n  const handleRadioClick = (e) => {\n    const firstOne = EventsData.find((item) => item.type === e.target.id);\n    setEvents({ type: e.target.id, event: \"\", firstEvent: firstOne });\n  };\n  const handleNavClick = (e, item) => {\n    listItemClass.previousItem?.classList.remove(\"nav__link--active\");\n    setListItemClass({ previousItem: e.target });\n    e.target.classList.add(\"nav__link--active\");\n    setEvents({\n      type: events.type,\n      event: item,\n      firstEvent: events.firstEvent,\n    });\n  };\n\n   useEffect(()=>{\n     fetch(`${url}post/`,{\n         headers: {\n           \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n         },\n     })\n     .then((res)=>res.json())\n     .then((result)=>setCoorse(result))\n   },[])\n\n  return (\n    <div className=\"events-page\">\n      <div className=\"slider\">\n        <Carousel\n          autoplay={false}\n          autoplaySpeed={2000}\n          pauseOnHover={false}\n          dots={false}\n          arrows={false}\n        >\n          <div className=\"slider__slide\">\n            <div\n              className=\"slider__item\"\n              style={{\n                backgroundImage: `url(${eventsPageImg})`,\n              }}\n            >\n          <div className=\"events__page\">\n                <div className=\"events__left\">\n                  <h1>Предстоящие мероприятия:</h1>\n                  {/* <ul className=\"events-type__list\">\n                    <li className=\"events-type__item\">\n                      <div className=\"lr__form_radio\">\n                        <input\n                          type=\"radio\"\n                          id=\"conference\"\n                          name=\"radio-group1\"\n                          onClick={handleRadioClick}\n                        />\n                        <label htmlFor=\"conference\">\n                          <div>Конференция</div>В формате “offline”\n                        </label>\n                      </div>\n                    </li>\n                    <li className=\"events-type__item\">\n                      <div className=\"lr__form_radio\">\n                        <input\n                          type=\"radio\"\n                          id=\"webinar\"\n                          name=\"radio-group1\"\n                          onClick={handleRadioClick}\n                        />\n                        <label htmlFor=\"webinar\">\n                          <div>Вебинар</div>В формате “online”\n                        </label>\n                      </div>\n                    </li>\n                    <li className=\"events-type__item\">\n                      <div className=\"lr__form_radio\">\n                        <input\n                          type=\"radio\"\n                          id=\"course\"\n                          name=\"radio-group1\"\n                          onClick={handleRadioClick}\n                        />\n                        <label htmlFor=\"course\">\n                          <div>Курс</div>В формате “online”\n                        </label>\n                      </div>\n                    </li>\n                  </ul> */}\n                  {events.event ? (\n                    <>\n                      <div className=\"events__title\">\n                        <h2>{events.event.mainTitle}</h2>\n                        <p>{`В курсе ${events.event.vebinars.length}: вебинаров`}</p>\n                      </div>\n                      <div className=\"events__text\">\n                        <div className=\"events__description\">\n                          <TextEditor\n          \n                            value={events.event.aboutCourse.paragraph}>\n\n                          </TextEditor>\n                        </div>\n                      </div>\n                        <NavLink\n                          to={'/pagecoorse/' + events.event._id}\n                        >\n                          {`Участвую ${events.event.fullCoursePayCard.cost}${events.event.fullCoursePayCard.currency}`}\n                        </NavLink>\n                      <p>{`Цена за весь курс: ${events.event.fullCoursePayCard.cost}${events.event.fullCoursePayCard.currency}`}</p>\n                    </>\n                  ) : events.type ? (\n                    <>\n                      <div className=\"events__title\">\n                        <h2>{events.event.mainTitle}</h2>\n                        <p>{`В курсе ${events.event.vebinars.length}: вебинаров`}</p>\n                      </div>\n                      <div className=\"events__text\">\n                        <div className=\"events__description\">\n                        <TextEditor\n                          value={events.event.aboutCourse.paragraph}>\n\n                        </TextEditor>\n                        </div>\n                      </div>\n                        <NavLink\n                          to={'/pagecoorse/' + events.event._id+'_:id'}\n                        >\n                          {`Участвую${events.event.fullCoursePayCard.cost}${events.event.fullCoursePayCard.currency}`}\n                        </NavLink>\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n                <div className=\"events__right\">\n                  <div className=\"events__text\">\n                    <nav className=\"categories__nav\">\n                      <ul className=\"nav__list categories__list\">\n                        {masCoorse.map((value,index) =>{\n                          return(\n                            <li\n                              className=\"nav__item\"\n                              key={index}\n                            >\n                              <div\n                                onClick={(e) => handleNavClick(e, value)}\n                                className=\"nav__link\"\n                              >\n                                {value.mainTitle}\n                              </div>\n                            </li>\n                          )\n                        }\n                          // item.type === events.type ? (\n                          //   <li\n                          //     className=\"nav__item\"\n                          //     key={item.key}\n                          //   >\n                          //     <div\n                          //       onClick={(e) => handleNavClick(e, item)}\n                          //       className=\"nav__link\"\n                          //     >\n                          //       {item.title}\n                          //     </div>\n                          //   </li>\n                          // ) : (\n                          //   \"\"\n                          // )\n                        )}\n                      </ul>\n                    </nav>\n                  </div>\n\n                  <div\n                    className=\"events__specialist--active\"\n                  >\n                    {events.event ? (\n                      <>\n                        <div className=\"events__specialist_info\">\n                          <span>\n                            {events.event?.speaker.name}\n                          </span>\n                          <span>\n                            {events.event?.speaker.profession}\n                          </span>\n                        </div>\n                        <div className=\"events__specialist_img\">\n                          {events.event.speaker.photo?\n                            <img\n                              // src={events.event?.photo}\n                              src={`${url}coorsefiles/${events.event.speaker.photo}`}\n                              alt=\"\"\n                            />           \n                            :\n                            null               \n                          }\n                        </div>\n                      </>\n                    ) : events.type ? (\n                      <>\n                        <div className=\"events__specialist_info\">\n                          <span>{events.firstEvent?.surname}</span>\n                          <span>{events.firstEvent?.name}</span>\n                          <span>{events.firstEvent?.experience}</span>\n                          <span>{events.firstEvent?.city}</span>\n                        </div>\n                        <div className=\"events__specialist_img\">\n                          <img\n                            // src={events.firstEvent?.photo}\n                            src={defaultPhoto}\n                            alt=\"\"\n                          />\n                        </div>\n                      </>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            </div>\n        </Carousel>\n      </div>\n      </div>\n  );\n}\n\nexport default EventsPage;\n","/var/www/netlear/html/clientNetlear/src/views/EditUserProfile/EditUserProfile.jsx",["548","549","550","551"],"import React from 'react';\nimport './EditUserProfile.scss';\n\nimport { Button, Select, message } from 'antd';\n\n// import ruRU from 'antd/lib/locale/ru_RU';\n// import { DeleteTwoTone } from '@ant-design/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setDefaultUserProfileData,\n  fetchNewPassword,\n  fetchNewEmail,\n  fetchNewProfileData,\n  fetchUploadAvatar,\n} from '../../redux/actions/Temp/UserProfile';\n\nimport EditUserProfileData from '../../components/EditUserProfileData/EditUserProfileData';\nimport EditUserProfilePassword from '../../components/EditUserProfilePassword/EditUserProfilePassword';\nimport EditUserProfileEmail from '../../components/EditUserProfileEmail/EditUserProfileEmail';\n\nconst { Option } = Select;\n\nfunction EditUserProfile({ history }) {\n  const userData = useSelector((state) => state.Auth);\n  const tempUserData = useSelector((state) => state.Temp);\n  const [editDataType, setEditDataType] = React.useState('main');\n\n  const ref = React.useRef();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (userData.authorization && !tempUserData.picture) {\n      dispatch(setDefaultUserProfileData(userData));\n    }\n  }, [userData.authorization]);\n\n  const onSelectEditDataType = (e) => {\n    setEditDataType(e);\n  };\n\n  const onViewUserProfile = () => {\n    history.push('/user-profile');\n  };\n\n  const onSaveSettings = () => {\n    const passwordValues = Object.values(tempUserData.userProfilePassword);\n    const emailValues = Object.values(tempUserData.userProfileEmail);\n    const userDataObj = {\n      ...tempUserData.userProfile,\n      avatar: tempUserData.avatar,\n    };\n    console.log(userDataObj);\n    dispatch(fetchNewProfileData(userDataObj));\n\n    if (!passwordValues.includes(null && '')) {\n      const passwordObj = { oldPassword: passwordValues[0], newPassword: passwordValues[1] };\n\n      passwordValues[1] === passwordValues[2]\n        ? dispatch(fetchNewPassword(passwordObj))\n        : message.error('Проверьте совпадение новых паролей');\n    }\n    if (!emailValues.includes(null && '')) {\n      const emailObj = { oldEmail: emailValues[0], newEmail: emailValues[1] };\n      emailValues[1] === emailValues[2]\n        ? dispatch(fetchNewEmail(emailObj))\n        : message.error('Проверьте совпадение новых Email');\n    }\n  };\n\n  return (\n    <div className=\"edit-user-profile\">\n      <div className=\"edit-user-profile__container\">\n        <div className=\"edit-user-profile__header underline\">\n          <div className=\"edit-user-profile__left-block\">\n            <h2 className=\"edit-user-profile__title \">Редактор профиля</h2>\n            <Select\n              className=\"edit-user-profile__header-button-size\"\n              defaultValue={editDataType}\n              onChange={onSelectEditDataType}>\n              <Option value=\"main\">Основные настройки</Option>\n              <Option value=\"password\">Смена пароля</Option>\n              <Option value=\"email\">Смена Email </Option>\n            </Select>\n          </div>\n\n          <div className=\"edit-user-profile__button-block\">\n            <Button\n              type=\"primary\"\n              disabled={tempUserData.isSaveDisabled}\n              size=\"large\"\n              style={{ marginRight: 10 }}\n              className=\"edit-user-profile__header-button-size\"\n              onClick={onSaveSettings}>\n              Сохранить изменения\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              className=\"edit-user-profile__header-button-size\"\n              onClick={onViewUserProfile}>\n              Посмотреть профиль\n            </Button>\n          </div>\n        </div>\n        {editDataType === 'main' ? (\n          <EditUserProfileData  />\n        ) : editDataType === 'password' ? (\n          <EditUserProfilePassword  />\n        ) : (\n          <EditUserProfileEmail />\n        )}\n        <div className=\"edit-user-profile__save-block\">\n          <div className=\"input-block__help-block\">\n            Примечание. Другие учащиеся курса всегда могут видеть ваше имя и фотографию профиля в\n            сообщениях форумов и оценках сокурсников. Изображение вашего профиля в отправленных вами\n            рейтингах и отзывах доступно всем, кто просматривает каталог Edmed. Дополнительные\n            сведения доступны в документе <a href=\"#\">Политика конфиденциальности</a>.\n          </div>\n          <Button\n            type=\"primary\"\n            disabled={tempUserData.isSaveDisabled}\n            size=\"large\"\n            style={{ marginTop: 15 }}\n            onClick={onSaveSettings}>\n            Сохранить изменения\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUserProfile;\n","/var/www/netlear/html/clientNetlear/src/views/UserProfile/UserProfile.jsx",["552"],"import React from 'react';\nimport './UserProfile.scss';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDefaultUserProfileData } from '../../redux/actions/Temp/UserProfile';\n\nimport TextEditor from '../../components/TextEditor/TextEditor';\n\nimport { Button } from 'antd';\nimport {\n  TwitterOutlined,\n  FacebookOutlined,\n  LinkedinOutlined,\n  YoutubeOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\nfunction UserProfile({ history }) {\n  const { userProfile, picture } = useSelector((state) => state.Temp);\n  const userData = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    console.log(userData);\n    if (userData.authorization && !picture) {\n      dispatch(setDefaultUserProfileData(userData));\n    }\n  }, [userData.authorization]);\n\n  const onClickEditUserProfile = () => {\n    history.push('/edit-user-profile');\n  };\n\n  const isValidField = (field) => {\n    if (field !== null) {\n      return field;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <div className=\"user-profile\">\n      <div className=\"user-profile__background\"></div>\n      <div className=\"user-profile__content\">\n        <div className=\"user-profile__edit-ico\" onClick={onClickEditUserProfile}>\n          <EditOutlined />\n        </div>\n        <div className=\"user-profile__basic-info\">\n          <div className=\"user-profile__user-card user-card\">\n            <div\n              className=\"user-card__avatar\"\n              style={{\n                backgroundImage: `url(${picture})`,\n              }}></div>\n            <div className=\"user-card__name\">{`${userProfile.lastName} ${\n              userProfile.firstName\n            } ${isValidField(userProfile.patronymic)}`}</div>\n          </div>\n          {userProfile.profession && (\n            <div className=\"user-profile__profession\">{userProfile.profession}</div>\n          )}\n        </div>\n        <div className=\"user-profile__achievements info-card\">\n          <div className=\"info-card__title\">Достижения/Ученые степени</div>\n          <TextEditor onChange=\"\" isEditing={false} value={userProfile.academicDegrees} />\n        </div>\n        <div className=\"user-profile__personal-info info-card\">\n          <div className=\"info-card__title\">Личная информация</div>\n          {userProfile.dateOfBirth && (\n            <>\n              <div className=\"info-card__content\">\n                <div className=\"info-card__placeholder\">Дата рождения:</div>\n                <div className=\"info-card__data\">{userProfile.dateOfBirth}</div>\n              </div>\n            </>\n          )}\n          {userProfile.city && (\n            <>\n              <div className=\"info-card__content\">\n                <div className=\"info-card__placeholder\">Город:</div>\n                <div className=\"info-card__data\">{userProfile.city}</div>\n              </div>\n            </>\n          )}\n          {userProfile.gender && (\n            <>\n              <div className=\"info-card__content\">\n                <div className=\"info-card__placeholder\">Пол:</div>\n                <div className=\"info-card__data\">{userProfile.gender}</div>\n              </div>\n            </>\n          )}\n          {userProfile.phoneNumber && (\n            <>\n              <div className=\"info-card__content\">\n                <div className=\"info-card__placeholder\">Номер телефона:</div>\n                <div className=\"info-card__data\">{userProfile.phoneNumber}</div>\n              </div>\n            </>\n          )}\n        </div>\n        <div className=\"user-profile__webs info-card\">\n          <div className=\"info-card__title\">Социальные сети/Интернет-ресурсы</div>\n          <div className=\"info-card__content links-block\">\n            <a className=\"links-block__personal\" href={userProfile.url}>\n              {userProfile.url}\n            </a>\n            <div className=\"links-block__social-networks\">\n              <a href={userProfile.urlTwitter}>\n                <TwitterOutlined />\n              </a>\n              <a href={userProfile.urlFacebook}>\n                <FacebookOutlined />\n              </a>\n              <a href={userProfile.urlLinkedin}>\n                <LinkedinOutlined />\n              </a>\n              <a href={userProfile.urlYoutube}>\n                <YoutubeOutlined />\n              </a>\n            </div>\n          </div>\n        </div>\n        <Button type=\"primary\" size=\"large\" onClick={onClickEditUserProfile}>\n          Редактировать профиль\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","/var/www/netlear/html/clientNetlear/src/views/AuthGoogleToken/AuthGoogleToken.jsx",["553","554"],"import React from 'react';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { setUserToken } from '../../redux/actions/Auth/Auth';\n\nimport { setLS } from '../../utils/LocalStorage';\n\nimport { message } from 'antd';\n\nfunction AuthGoogleToken() {\n  const dispatch = useDispatch();\n  const { token } = useParams();\n  let history = useHistory();\n\n  React.useEffect(() => {\n    const fakeToken =\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjM5YjFkOTFlLWM5MzctNDkzNC04Mzc5LWJiNzM2NGE4OTc5OSIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE2Mjc3NTkwMzF9.LIz_bELdXoRLIhV2Lx9knDk0EQP32ODDSY62VO1T6gY';\n    dispatch(setUserToken(token));\n    setLS('EDMED_USER_TOKEN', token);\n    console.log(token);\n    history.push('/');\n    message.success('Google аккаунт авторизован');\n  }, []);\n\n  return <div>{token}</div>;\n}\n\nexport default AuthGoogleToken;\n","/var/www/netlear/html/clientNetlear/src/views/AuthFacebookToken/AuthFacebookToken.jsx",["555","556"],"import React from 'react';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { setUserToken } from '../../redux/actions/Auth/Auth';\n\nimport { setLS } from '../../utils/LocalStorage';\n\nimport { message } from 'antd';\n\nfunction AuthFacebookToken() {\n  const dispatch = useDispatch();\n  const { token } = useParams();\n  let history = useHistory();\n\n  React.useEffect(() => {\n    const fakeToken =\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImI2ODg3YTkwLTc1ZWMtNDNhZS04NmY0LTBjY2Q3ZWY0ODRlYyIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE2Mjc0NzA5MDB9.4Ya4N6oUV0eUJTOxJOHWdAlMSMI49iScbeb4pYr3s9I';\n    dispatch(setUserToken(token));\n    setLS('EDMED_USER_TOKEN', token);\n    console.log(token);\n    history.push('/');\n    message.success('Facebook аккаунт авторизован');\n  }, []);\n\n  return <div>{token}</div>;\n}\n\nexport default AuthFacebookToken;\n","/var/www/netlear/html/clientNetlear/src/views/AuthCheckKey/AuthCheckKey.jsx",["557"],"import React from 'react';\nimport './AuthCheckKey.scss';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAuthorization } from '../../redux/actions/Auth/Auth';\n\nimport Button from '../../components/Button/Button';\nimport Spinner from '../../components/Spinner/Spinner';\n\nfunction AuthCheckKey({ history }) {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { isAuth } = useSelector((state) => state.Auth);\n\n  const onReturnMainPage = () => {\n    history.push('/');\n  };\n  React.useEffect(() => {\n    dispatch(fetchAuthorization(id));\n  }, []);\n\n  return (\n    <div className=\"check-key-page\">\n      {isAuth ? (\n        <>\n          <div className=\"check-key-page__message\">\n            <p>Вы успешно авторизованы!</p>\n            <p>Благодарим за регистрацию на Edmed.online!</p>\n          </div>\n          <Button type=\"primary\" onClick={onReturnMainPage}>\n            Возврат на главную страницу\n          </Button>\n        </>\n      ) : (\n        <div className=\"check-key-page__message\">\n          <Spinner>\n            <p>Идет регистрация пользователя, пожалуйста, подождите...</p>\n          </Spinner>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AuthCheckKey;\n","/var/www/netlear/html/clientNetlear/src/views/TariffsPage/Tariffs.jsx",["558","559"],"import React, { useState, useEffect } from \"react\";\nimport { TariffsCart } from \"../../components/TariffsCart/TariffsCart\";\nimport \"./tariffs.scss\";\n\nfunction Tariffs() {\n\n  const tariffs = [\n    {price:399,more:[\"Описание\",\"Описание\",\"Описание\",\"Описание\",],name:\"Новый эксперт\",link:\"/\",img:\"\",main:false},\n    {price:699,more:[\"Описание\",\"Описание\",\"Описание\",\"Описание\",],name:\"Эксперт\",link:\"/\",img:\"\",main:true},\n    {price:999,more:[\"Описание\",\"Описание\",\"Описание\",\"Описание\",],name:\"Профи\",link:\"/\",img:\"\",main:false}\n  ]\n\n  return (\n    <div className=\"tariffs\">\n      <div className=\"tariffs__container\">\n        <div className=\"tariffs__container__text\">\n          <h1>Тарифы</h1>\n        </div>\n        <div className=\"tariffs__container__tariffs\">\n          {tariffs.map((value)=>{\n            return(\n              <TariffsCart \n                price={value.price}\n                more={value.more}\n                name={value.name}\n                link={value.link}\n                img={value.img}\n                main={value.main}\n              />\n            )\n          })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tariffs;","/var/www/netlear/html/clientNetlear/src/views/AuthForms/LoginPage/LoginPage.jsx",["560","561"],"import React from \"react\";\nimport \"./LoginPage.scss\";\n\n// import { getToken } from '../../../redux/actions/user';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchLogIn } from \"../../../redux/actions/Auth/Auth\";\n\nimport { Form, Input, Button, Checkbox } from \"antd\";\n\nimport Spinner from \"../../../components/Spinner/Spinner\";\nimport AuthHeader from \"../../../components/AuthHeader/AuthHeader\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 22,\n  },\n};\nconst tailLayout = {\n  // wrapperCol: {\n  //   offset: 8,\n  //   span: 16,\n  // },\n};\n\nfunction LoginPage({ history }) {\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector((state) => state.Auth);\n\n  React.useEffect(() => {\n    if (isAuth) {\n      history.push(\"/\");\n    }\n  }, [isAuth]);\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    dispatch(fetchLogIn(values));\n    // dispatch(getToken(values.email, values.password, values.remember));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const onClickRegister = () => {\n    history.push(\"/reg-page\");\n  };\n  return (\n    <div className=\"register\">\n      <AuthHeader title=\"Войти\" />\n      <div className=\"register__form\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Пожалуйста, введите Email!\",\n              },\n            ]}\n          >\n            <Input placeholder=\"\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Пароль\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Пожалуйста, введите пароль!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Запомнить меня</Checkbox>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Войти\n            </Button>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <p>или</p>\n            <Button type=\"primary\" onClick={onClickRegister}>\n              Зарегистрироваться\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","/var/www/netlear/html/clientNetlear/src/views/AuthForms/RegPage/RegPage.jsx",["562","563","564","565","566","567"],"import React from 'react';\nimport './RegPage.scss';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { setLS, getLS } from '../../../utils/LocalStorage';\n\nimport { Form, Input, Button, message } from 'antd';\nimport privacyPDF from '../../../assets/pdf/privacy_projectbox.pdf';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userSignUp } from '../../../redux/actions/user';\nimport { setSpinTrue, setSpinFalse } from '../../../redux/actions/spinner';\nimport { fetchSignUp } from '../../../redux/actions/Auth/Auth';\n\nimport Spinner from '../../../components/Spinner/Spinner';\nimport AuthHeader from '../../../components/AuthHeader/AuthHeader';\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 22,\n  },\n};\nconst tailLayout = {\n  //   wrapperCol: {\n  //     offset: 8,\n  //     span: 16,\n  //   },\n};\n\nfunction RegPage() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { token } = useSelector((state) => state.Auth);\n  // const [userToken, setUserToken] = React.useState(getLS('EDMED_USER_TOKEN') || null);\n  // const { isCompleted, errorMessage } = useSelector((state) => state.user);\n\n  // React.useEffect(() => {\n  //   if (isCompleted) {\n  //     message.success('Письмо о подтверждении отправлено на указанный Email');\n  //     dispatch(setSpinFalse());\n  //   }\n  //   if (errorMessage === 500) {\n  //     message.error('Проверьте правильность электронной почты!');\n  //     dispatch(setSpinFalse());\n  //   }\n  //   if (errorMessage === 401) {\n  //     message.error('Данный Email уже зарегистрирован!');\n  //     dispatch(setSpinFalse());\n  //   }\n  // }, [isCompleted, errorMessage]);\n\n  React.useEffect(() => {\n    if (token) {\n      history.push('/');\n    }\n  }, [token]);\n  \n  const onFinish = async (values) => {\n    dispatch(setSpinTrue());\n    await dispatch(fetchSignUp(values));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className=\"register\">\n      <AuthHeader title=\"Регистрация\" />\n      <div className=\"register__form\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}>\n          <Form.Item\n            label=\"Имя\"\n            name=\"firstName\"\n            rules={[\n              {\n                required: true,\n                message: 'Пожалуйста, введите Ваше имя!',\n              },\n            ]}>\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Фамилия\"\n            name=\"lastName\"\n            rules={[\n              {\n                required: true,\n                message: 'Пожалуйста, введите фамилию!',\n              },\n            ]}>\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: 'Пожалуйста, введите Email!',\n              },\n            ]}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Пароль\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Пожалуйста, введите пароль!',\n              },\n            ]}>\n            <Input.Password />\n          </Form.Item>\n          <p>\n            Регистрируясь, вы соглашаетесь с <a href={privacyPDF}>правилами пользования сайтом</a> и\n            даёте согласие на обработку персональных данных.\n          </p>\n          <Form.Item {...tailLayout}>\n            <Spinner>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Зарегистрироваться\n              </Button>\n            </Spinner>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default RegPage;\n","/var/www/netlear/html/clientNetlear/src/redux/actions/Auth/api.js",["568"],"import apiFetch from '../../../utils/api/apiFetch';\n\nconst api = '/auth';\n\nexport default {\n  logIn: (data) => apiFetch(`${api}/log-in`, { method: 'post', data }),\n  authMe: () => apiFetch(`${api}/auth-me`, { method: 'get' }, true),\n  logout: () => apiFetch(`${api}/logout`, { method: 'delete' }, true),\n  signUp: (data) => apiFetch(`${api}/sign-up`, { method: 'post', data }),\n  authorization: (id) => apiFetch(`${api}/authorization/${id}`, { method: 'put' }),\n};\n","/var/www/netlear/html/clientNetlear/src/redux/actions/spinner.js",[],"/var/www/netlear/html/clientNetlear/src/utils/LocalStorage.js",[],"/var/www/netlear/html/clientNetlear/src/utils/getDate.js",[],"/var/www/netlear/html/clientNetlear/src/utils/calculations/getFullCourseCost.js",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/user.js",[],"/var/www/netlear/html/clientNetlear/src/utils/api/apiFetch.js",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/Temp/UserProfile.js",["569","570","571","572"],"import profileAPI from './api';\nimport { setSpinFalse, setSpinTrue } from '../spinner';\nimport { removeLS, getLS, setLS } from '../../../utils/LocalStorage';\nimport { message } from 'antd';\nimport { fetchAuthMe, setUserAvatar } from '../Auth/Auth';\n\nexport const setDefaultUserProfileData = (userData) => ({\n  type: 'SET_DEFAUILT_USER-PROFILE_DATA',\n  payload: userData,\n});\n\nexport const setTempUserProfileData = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_DATA',\n  selector: selector,\n  value: value,\n});\n\nexport const setTempUserProfileAvatar = (value) => ({\n  type: 'SET_TEMP_USER-PROFILE_AVATAR',\n  value: value,\n});\n\nexport const setTempUserProfilePassword = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_PASSWORD',\n  selector: selector,\n  value: value,\n});\n\nexport const setTempUserProfileEmail = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_EMAIL',\n  selector: selector,\n  value: value,\n});\n\nexport const fetchNewPassword = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newPassword(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные пароля изменены!');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchNewEmail = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newEmail(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные Email изменены!');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchNewProfileData = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newProfileData(data)\n    .then((data) => {\n      console.log(data);\n      // debugger;\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные профиля изменены!');\n      dispatch(setSpinFalse());\n      dispatch(fetchAuthMe());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchUploadAvatar = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .uploadAvatar(data)\n    .then((data) => {\n      console.log(data);\n      dispatch(setSpinFalse());\n      message.success('Фото профиля загружено!');\n      // dispatch(setUserAvatar(data.picture));\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const setIsSaveDisabled = (boolean) => ({\n  type: 'SET_IS_SAVE_DISABLED',\n  boolean: boolean,\n});\n","/var/www/netlear/html/clientNetlear/src/components/AuthHeader/AuthHeader.jsx",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/eventRedactor/eventRedactor.js",[],"/var/www/netlear/html/clientNetlear/src/components/TariffsCart/TariffsCart.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/TextEditor/TextEditor.jsx",["573","574"],"import React from 'react';\nimport './TextEditor.scss';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nconst Quill = ReactQuill.Quill;\nvar Font = Quill.import('formats/font');\nFont.whitelist = ['Montserrat', 'Roboto', 'Raleway', 'Lato', 'Rubik'];\nQuill.register(Font, true);\n\nconst modules = {\n  toolbar: [\n    [{ header: [1, 2, 3, 4, 5, false] }, { font: Font.whitelist }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n    ['link', 'image'],\n    ['clean', { align: [] }],\n    [{ color: [] }, { background: [] }],\n  ],\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'size',\n  'background',\n  'align',\n];\n\nfunction TextEditor({ onChange, isEditing, value }) {\n  const winWidth = window.innerWidth;\n\n  const style = () => {\n    if (winWidth <= 600) {\n      return { width: '100%' };\n    } else {\n      return;\n    }\n  };\n  if(!value){\n    return(\n      <div>\n        \n      </div>\n    )\n  }\n  return (\n    <>\n      <ReactQuill\n        value={value}\n        onChange={onChange}\n        // placeholder=\"Введите текст\"\n        modules={modules}\n        formats={formats}\n        readOnly={isEditing ? false : true}\n        theme={isEditing ? 'snow' : 'bubble'}\n        style={style()}\n      />\n    </>\n  );\n}\n\nexport default TextEditor;\n","/var/www/netlear/html/clientNetlear/src/components/EditUserProfileEmail/EditUserProfileEmail.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/EditUserProfilePassword/EditUserProfilePassword.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/EditUserProfileData/EditUserProfileData.jsx",["575","576"],"import React from 'react';\nimport './EditUserProfileData.scss';\n\nimport { Input, Button, Image, Radio, ConfigProvider, DatePicker, Select } from 'antd';\nimport moment from 'moment';\n\nimport ruRU from 'antd/lib/locale/ru_RU';\nimport { DeleteTwoTone } from '@ant-design/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setTempUserProfileData,\n  setTempUserProfileAvatar,\n  fetchUploadAvatar,\n  setIsSaveDisabled,\n} from '../../redux/actions/Temp/UserProfile';\n\nimport TextEditor from '../../components/TextEditor/TextEditor';\n\nimport { testUploadVimeoVids } from '../../utils/testVimeo';\nimport { getBase64 } from '../../utils/getBase64';\n\nconst dateFormat = 'YYYY/MM/DD';\n\nconst { Option } = Select;\n\nfunction EditUserProfileData() {\n  const { userProfile, picture } = useSelector((state) => state.Temp);\n  const [filesState, setFilesState] = React.useState([]);\n\n  const ref = React.useRef();\n  const avatarRef = React.useRef();\n  const dispatch = useDispatch();\n\n  const onPickUpImage = async (e) => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    // const file2 = avatarRef.current.files[0];\n    const url = await getBase64(file);\n    let bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n\n    dispatch(setTempUserProfileAvatar(url));\n    dispatch(fetchUploadAvatar(bodyFormData));\n    dispatch(setIsSaveDisabled(false));\n    // setIsSaveDisabled(false);\n  };\n\n  const onPickUpFile = (e) => {\n    const file = e.target.files[0];\n    console.log(e);\n    if (file) {\n      const newFilesArray = [file, ...filesState];\n      setFilesState(newFilesArray);\n      dispatch(setIsSaveDisabled(false));\n      // setIsSaveDisabled(false);\n\n      // testUploadVimeoVids(file);\n    }\n  };\n\n  const onChangeDatePicker = (value, dateString) => {\n    const selector = 'dateOfBirth';\n    console.log(value, dateString);\n    dispatch(setTempUserProfileData(selector, dateString));\n    dispatch(setIsSaveDisabled(false));\n    // setIsSaveDisabled(false);\n  };\n\n  const onSelectRadioGender = (e) => {\n    const value = e.target.value;\n    const selector = 'gender';\n    dispatch(setTempUserProfileData(selector, value));\n    dispatch(setIsSaveDisabled(false));\n    // setIsSaveDisabled(false);\n  };\n\n  const onSelectСonfidentiality = (e) => {\n    const selector = 'confidentialityOfPersonalData';\n    const value = e;\n    dispatch(setTempUserProfileData(selector, value));\n    dispatch(setIsSaveDisabled(false));\n    // setIsSaveDisabled(false);\n  };\n\n  const onChangeInput = (e) => {\n    console.log(e);\n    const value = e.target.value;\n    const selector = e.target.attributes[1].nodeValue;\n    dispatch(setTempUserProfileData(selector, value));\n    dispatch(setIsSaveDisabled(false));\n    // setIsSaveDisabled(false);\n  };\n\n  const onChangeAcademicDegrees = (e) => {\n    const selector = 'academicDegrees';\n    const value = e;\n    dispatch(setTempUserProfileData(selector, value));\n    // dispatch(setIsSaveDisabled(false))\n  };\n  console.log(userProfile);\n  return (\n    <>\n      <div className=\"edit-user-profile__basic-info underline\">\n        <span className=\"edit-user-profile__subtitle\">Основные сведения</span>\n        <p className=\"edit-user-profile__subtitle-info\">\n          Расскажите другим пользователям и спикерам о себе\n        </p>\n        <div className=\"edit-user-profile__form-block\">\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Фамилия</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"lastName\"\n                value={userProfile.lastname}\n                onChange={onChangeInput}></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Имя</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"firstName\"\n                value={userProfile.name}\n                onChange={onChangeInput}></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Отчество</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"patronymic\"\n                value={userProfile.patronymic}\n                onChange={onChangeInput}></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block input-block__fs\">\n            <div className=\"input-block__placeholder\">Фото профиля</div>\n            <Image width={200} src={picture} className=\"input-block__avatar\"></Image>\n            <input\n              id={'avatar-input'}\n              ref={avatarRef}\n              style={{ display: 'none' }}\n              type=\"file\"\n              name=\"user[image]\"\n              selector=\"avatar\"\n              multiple={false}\n              onChange={onPickUpImage}\n            />\n            <div className=\"input-block__upload-image\">\n              <label htmlFor={'avatar-input'} className=\"ant-btn ant-btn-primary\">\n                Загрузить фото\n              </label>\n              <div className=\"input-block__help-block\">Выберите фото из своей галереи</div>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Профессия или род занятости</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"profession\"\n                value={userProfile.specialization}\n                onChange={onChangeInput}></Input>\n              <div className=\"input-block__help-block\">Укажите Ваши профессиональные навыки</div>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Ученые степени или иные достижения</div>\n            <div className=\"input-block__with-info\">\n              <TextEditor\n                onChange={onChangeAcademicDegrees}\n                isEditing={true}\n                value={userProfile.academicDegrees}\n              />\n              <div className=\"input-block__with-info\">\n                <div className=\"input-block__help-block\">\n                  Опишите Ваши достижения в профессиональной сфере (в свободной форме).\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Подтверждение квалификации</div>\n            <div className=\"input-block__with-info\">\n              {filesState && (\n                <div>\n                  {filesState.map((el, i) => (\n                    <div key={i}>\n                      <span>{el.name}</span>\n                      <DeleteTwoTone />\n                    </div>\n                  ))}\n                </div>\n              )}\n              <input\n                id={'file-patent-input'}\n                type=\"file\"\n                ref={ref}\n                style={{ display: 'none' }}\n                name=\"user[image]\"\n                multiple={true}\n                className=\"\"\n                onChange={onPickUpFile}\n              />\n              <label htmlFor={'file-patent-input'} className=\"ant-btn ant-btn-primary\">\n                Загрузить документы\n              </label>\n              <div className=\"input-block__help-block\">\n                Вы можете загрузить Ваши сертификаты, дипломы, патенты или иные документы,\n                подтверждающие Вашу квалификацию\n              </div>\n              <div className=\"input-block__help-block\">\n                Другие пользователи смогут удостовериться в Вашей компетенции\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"edit-user-profile__personal-info underline\">\n        <span className=\"edit-user-profile__subtitle\">Дополнительная информация</span>\n        <p className=\"edit-user-profile__subtitle-info\">Ваши личные данные</p>\n        <div className=\"edit-user-profile__form-block\">\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Дата рождения</div>\n            <div className=\"input-block__with-info\">\n              <ConfigProvider locale={ruRU}>\n                <DatePicker\n                  onChange={onChangeDatePicker}\n                  value={\n                    userProfile.dateOfBirth\n                      ? moment(`${userProfile.dateOfBirth}`, dateFormat)\n                      : null\n                  }\n                  format={dateFormat}\n                />\n              </ConfigProvider>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Город</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                value={userProfile.city}\n                selector=\"city\"\n                onChange={onChangeInput}\n                placeholder=\"Наименование города\"></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Пол</div>\n            <div className=\"input-block__with-info\">\n              <Radio.Group\n                defaultValue={userProfile.gender}\n                buttonStyle=\"solid\"\n                onChange={onSelectRadioGender}>\n                <Radio.Button value=\"Мужской\">Мужской</Radio.Button>\n                <Radio.Button value=\"Женский\">Женский</Radio.Button>\n                {/* <Radio.Button value=\"o\">Другое</Radio.Button> */}\n              </Radio.Group>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Номер телефона</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"phoneNumber\"\n                value={userProfile.phoneNumber}\n                onChange={onChangeInput}\n                placeholder=\"Например: +375331112233\"></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Конфиденциальность личных данных</div>\n            <div className=\"input-block__with-info\">\n              <Select\n                defaultValue={userProfile.confidentialityOfPersonalData}\n                onChange={onSelectСonfidentiality}>\n                <Option value=\"all\">Все пользователи</Option>\n                <Option value=\"speakers\">Только Спикеры</Option>\n                <Option value=\"me\">Только я</Option>\n              </Select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"edit-user-profile__webs underline\">\n        <span className=\"edit-user-profile__subtitle\">Ссылки</span>\n        <p className=\"edit-user-profile__subtitle-info\">Ваши социальные сети/порталы</p>\n\n        <div className=\"edit-user-profile__form-block\">\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Личный веб-сайт</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"url\"\n                value={userProfile.url}\n                onChange={onChangeInput}\n                placeholder=\"https://...\"></Input>\n            </div>\n          </div>\n\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Twitter</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"urlTwitter\"\n                value={userProfile.urlTwitter}\n                onChange={onChangeInput}\n                placeholder=\"https://twitter.com/...\"></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">Facebook</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"urlFacebook\"\n                value={userProfile.urlFacebook}\n                onChange={onChangeInput}\n                placeholder=\"https://www.facebook.com/\"></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">LinkedIn</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"urlLinkedin\"\n                value={userProfile.urlLinkedin}\n                onChange={onChangeInput}\n                placeholder=\"https://www.linkedin.com/...\"></Input>\n            </div>\n          </div>\n          <div className=\"edit-user-profile__input-block input-block\">\n            <div className=\"input-block__placeholder\">YouTube</div>\n            <div className=\"input-block__with-info\">\n              <Input\n                className=\"edit-user-profile__base-input\"\n                selector=\"urlYoutube\"\n                value={userProfile.urlYoutube}\n                onChange={onChangeInput}\n                placeholder=\"https://www.youtube.com/...\"></Input>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default EditUserProfileData;\n","/var/www/netlear/html/clientNetlear/src/views/AskQuestionPage/MenuData.jsx",[],"/var/www/netlear/html/clientNetlear/src/views/EventsPage/EventsData.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/SpecialistsSwiper/SpecialistsSwiper.jsx",["577","578"],"import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SpecialistsSwiper.scss\";\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/pagination/pagination.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\n\nimport BlockTitle from \"../BlockTitle/BlockTitle\";\n\nimport { specialists } from \"../../utils/mapArrays/specialists\";\n// import Swiper core and required modules\nimport SwiperCore, { Autoplay, Pagination, Navigation } from \"swiper/core\";\n\n// install Swiper modules\nSwiperCore.use([Autoplay, Pagination, Navigation]);\n\nexport default function SpecialistsSwiper() {\n  const swiperRef = useRef(null);\n  const width = window.innerWidth;\n  React.useEffect(() => {\n    // console.log(swiperRef);\n  }, [swiperRef]);\n\n  return (\n    <Swiper\n      ref={swiperRef}\n      slidesPerView={width >= 1600 ? 4 : width >= 1000 ? 3 :  width >= 600 ? 2 : 1}\n      centeredSlides={width <= 600 && true}\n      spaceBetween={30}\n      pagination={{\n        type: \"custom\",\n      }}\n      loop={true}\n      navigation={true}\n    >\n      {specialists.map((el, i) => (\n        <Link to={el.link} key={i}>\n          <SwiperSlide>\n            <div className=\"specialists-swiper__item\">\n              <div className=\"specialists-swiper__item_img\">\n                <img src={el.img} alt=\"\" />\n              </div>\n              <div className=\"specialists-swiper__item_info\">\n                <p className=\"specialists-swiper__item_info1\">{el.lastName}</p>\n                <p className=\"specialists-swiper__item_info2\">{el.firstName}</p>\n                <p className=\"specialists-swiper__item_info3\">\n                  {el.experience}\n                </p>\n                <p className=\"specialists-swiper__item_info4\">{el.location}</p>\n              </div>\n            </div>\n          </SwiperSlide>\n        </Link>\n      ))}\n    </Swiper>\n  );\n}\n","/var/www/netlear/html/clientNetlear/src/components/DeployCourseBlock/DeployCourseBlock.jsx",["579","580","581","582","583","584"],"import React, { useEffect, useState } from 'react';\nimport './DeployCourseBlock.scss';\nimport { url } from \"../../conf\"\nimport Button from '../Button/Button';\nimport EventDeployPanel from '../EventDeployPanel/EventDeployPanel';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVideosFromRedactor } from '../../redux/actions/UploadingCourse/UploadingCourse';\nimport { Modal } from 'antd';\n\nfunction DeployCourseBlock({props}) {\n  const eventRedactor = useSelector((state) => state.eventRedactor);\n  const [isDeployPanelOpen, setIsDeployPanelOpen] = React.useState(false);\n\n  const onDeployCourseData = () => {\n    const speaker  = eventRedactor.aboutSpeaker.data\n    const banner   = eventRedactor.banner.data\n    const main     = eventRedactor.mainContent.data\n    const vebinars = eventRedactor.mainContent.data.vebinars\n    const masVebin = []\n    let index = 1\n    const form = new FormData()\n    \n    const dataURLtoFile = (dataurl, filename) => {\n      if(dataurl.length > 60){\n  \t    let arr = dataurl.split(','),\n\t        mime = arr[0].match(/:(.*?);/)[1],\n\t        bstr = atob(arr[1]),\n\t        n = bstr.length,\n\t        u8arr = new Uint8Array(n);\n\t      while (n--) {\n\t       u8arr[n] = bstr.charCodeAt(n);\n\t      }\n\t      return new File([u8arr], filename, { type: mime });\n      }\n\t  }\n  \n    const backgroundImg = dataURLtoFile(banner.backgroundImg, \"backgroundImg\")\n\n    for(let key of vebinars){\n      const objVebinars = {\n        title: key.title,\n        description: key.content,\n        date : key.date,\n        photo: key.promoImg,\n        typeOfContent: key.format,\n        paymentMethod: {\n          paymentType: key.isPaid?\"Платный контент\":\"Бесплатный контент\",\n          price      : key.cost ,\n          currency   : key.currency,\n          promocode  : key.promoCode,\n          promocodeDiscount: key.personalDiscount\n        },\n        video: {\n          video : key.video,\n          videoName : key.videoName,\n          videoDescription : key.videoDescription\n        }\n      }\n      let vebinarPhoto = dataURLtoFile(key.promoImg, \"vebinarPhoto\");\n      if(vebinarPhoto){\n        form.append(`vebinarPhoto${index}`,vebinarPhoto)\n      }\n      if(key.video){\n        form.append(`vebinarVideo${index}`,key.video)\n      }\n      masVebin.push(objVebinars)\n      index += 1\n    }\n\n    const course = {\n      backgroundTitle: backgroundImg,\n      mainTitle: banner.title,\n      type: props,\n      speakerTitle: banner.speakerName,\n      speakerTitleParagraph: banner.speakerShortDescription,\n      aboutCourse: {\n        title: main.youWillLearn.title,\n        paragraph:main.youWillLearn.content\n      },\n      program: {\n        title: main.eventProgram.title,\n        paragraph:main.eventProgram.content\n      },\n      vebinars: masVebin,\n      fullCoursePayCard: {\n        cost: main.fullCoursePayCard.cost,\n        currency: main.fullCoursePayCard.currency,\n        discount: main.fullCoursePayCard.discount,\n        costWithDiscount: main.fullCoursePayCard.costWithDiscount,\n        promocode: main.fullCoursePayCard.promoCode,\n        promoCodeDiscount: main.fullCoursePayCard.promoCodeDiscount\n      },\n      speaker: {\n        name: speaker.fullName,\n        profession: speaker.career,\n        paragraph:speaker.description,\n        promoVideoName: speaker.videoName,\n        photo:speaker.img,\n        promoVideo:speaker.video\n      }\n    }\n    const speakerImg = dataURLtoFile(speaker.img, \"speakerImg\");\n    if(speakerImg){\n      form.append(\"speakerPhoto\",speakerImg)\n    }\n    if(speaker.video.size){\n      form.append(\"speakerVideo\",speaker.video)\n    }\n    if(backgroundImg){\n      form.append(\"backgroundTitle\",backgroundImg)\n    }\n    form.append(\"body\",JSON.stringify(course))\n\n    // for(let key of form.entries()){\n    //   console.log(key);\n    // }\n\n    fetch(`${url}post/add`,{\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      method: \"POST\",\n      body: form\n    })\n    .then((res)=>res.json())\n    .then((result)=>console.log(result))\n    setIsDeployPanelOpen(true);\n  };\n  if(isDeployPanelOpen){\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n  return (\n    <div className=\"deploy-course\">\n      <Button type=\"primary\" onClick={onDeployCourseData} text=\"Загрузить данные о курсе на рассмотрение\"/>\n    </div>\n  );\n}\n\nexport default DeployCourseBlock;\n","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse3Page/EventPageAboutSpeaker/EventPageAboutSpeaker.jsx",["585"],"/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse3Page/EventPageContent/EventPageContent.jsx",["586","587","588","589"],"import React from 'react';\nimport './EventPageContent.scss';\n\nimport { Popover } from 'antd';\n\nimport WebinarsList from '../../../../components/WebinarsList/Webinars3List/WebinarsList';\nimport EditButton from '../../../../components/EditButton/EditButton';\nimport DeleteButton from '../../../../components/DeleteButton/DeleteButton';\nimport AddItemButton from '../../../../components/AddItemButton/AddItemButton';\nimport SaveButton from '../../../../components/SaveButton/SaveButton';\nimport TextEditor from '../../../../components/TextEditor/TextEditor';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setMainContentData,\n  setMainContentSelectors,\n  removeMainContentData,\n  addItemMainContentData,\n} from '../../../../redux/actions/eventRedactor/eventRedactor';\n\nfunction EventPageContent3({ variant }) {\n  const dispatch = useDispatch();\n  const { data, selectors } = useSelector((state) => state.eventRedactor.mainContent);\n\n\n  const onSelectInputValue = (e, index) => {\n    const selector = e.target.attributes.selector.nodeValue;\n    const subSelector = e.target.attributes.subSelector.nodeValue;\n    const data = e.target.value;\n    dispatch(setMainContentData(selector, subSelector, data, index));\n  };\n\n  const onSelectTextEditorYouWillLearn = (e) => {\n    const selector = 'youWillLearn';\n    const subSelector = 'content';\n    const value = e;\n    dispatch(setMainContentData(selector, subSelector, value));\n  };\n\n  const onSelectTextEditorEventProgram = (e) => {\n    const selector = 'eventProgram';\n    const subSelector = 'content';\n    const value = e;\n    dispatch(setMainContentData(selector, subSelector, value));\n  };\n\n  return (\n    <div className=\"event-page__wrapper\">\n      <div className=\"event-page__content event-page-content\">\n        <div className=\"event-page-content__points\">\n          {!selectors.youWillLearn ? (\n            <>\n              <div className=\"event-page-content__title\">\n                {variant === 'redactor' ? (\n                  <Popover\n                    placement=\"bottomRight\"\n                    title={'Изменение полей'}\n                    content={\n                      'Вы можете изменять, удалять или добавлять элементы в список, а также - менять заголовок блока'\n                    }\n                    trigger=\"hover\">\n                    {data.youWillLearn.title}\n                    <EditButton selector=\"youWillLearn\" action={setMainContentSelectors} />\n                  </Popover>\n                ) : (\n                  `${data.youWillLearn.title}`\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"event-page-content__title\">\n                <input\n                  className=\"event-page-content__title test-input\"\n                  type=\"text\"\n                  value={data.youWillLearn.title}\n                  selector=\"youWillLearn\"\n                  subSelector=\"title\"\n                  autoFocus\n                  placeholder=\"Введите название блока\"\n                  onChange={(e) => onSelectInputValue(e)}\n                />\n                <SaveButton selector=\"youWillLearn\" action={setMainContentSelectors} />\n              </div>\n            </>\n          )}\n\n          {variant === \"redactor\" ? (\n            <div className=\"event-page-content__points-list\">\n              <TextEditor\n                onChange={onSelectTextEditorYouWillLearn}\n                isEditing={selectors.youWillLearn}\n                value={data.youWillLearn.content}></TextEditor>\n            </div>            \n          )\n          :\n          (\n            <div className=\"event-page-content__points-list\">\n              <TextEditor\n                value={data.youWillLearn.content}></TextEditor>\n           </div>    \n          )\n          }\n        </div>\n        <div className=\"event-page-content__program\">\n          {variant === 'redactor' ? (\n            <>\n              {!selectors.eventProgram ? (\n                <>\n                  <h3 className=\"event-page-content__title\">\n                    <Popover\n                      placement=\"bottomRight\"\n                      title={'Изменение полей'}\n                      content={\n                        'Вы можете изменять, удалять или добавлять элементы в список, а также - менять заголовок блока'\n                      }\n                      trigger=\"hover\">\n                      {data.eventProgram.title}\n\n                      <EditButton selector=\"eventProgram\" action={setMainContentSelectors} />\n                    </Popover>\n                  </h3>\n                  <div className=\"event-page-content__points-list\">\n                    <TextEditor\n                      onChange={onSelectTextEditorEventProgram}\n                      isEditing={selectors.eventProgram}\n                      value={data.eventProgram.content}></TextEditor>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"event-page-content__title\">\n                    <input\n                      className=\"event-page-content__title test-input\"\n                      type=\"text\"\n                      value={data.eventProgram.title}\n                      selector=\"eventProgram\"\n                      subSelector=\"title\"\n                      autoFocus\n                      placeholder=\"Введите название блока\"\n                      onChange={(e) => onSelectInputValue(e)}\n                    />\n                    <SaveButton selector=\"eventProgram\" action={setMainContentSelectors} />\n                  </div>\n                  <div className=\"event-page-content__points-list\">\n                    <TextEditor\n                      onChange={onSelectTextEditorEventProgram}\n                      isEditing={selectors.eventProgram}\n                      value={data.eventProgram.content}></TextEditor>\n                  </div>\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <h3 className=\"event-page-content__title\">{data.eventProgram.title}</h3>\n              <div className=\"event-page-content__points-list\">\n                <TextEditor\n                value={data.eventProgram.content}></TextEditor>\n              </div>\n            </>\n          )}\n        </div>\n        <div className=\"event-page-content__webinars\">\n          {variant === 'redactor' ? (\n            <>\n              <h3 className=\"event-page-content__title\">\n                <Popover\n                  placement=\"topRight\"\n                  title={'Редактирование списка вебинаров'}\n                  content={'Вы можете изменять, удалять или добавлять элементы в список'}\n                  trigger=\"hover\">\n                  Вебинары\n                  {!selectors.vebinars ? (\n                    <EditButton selector=\"vebinars\" action={setMainContentSelectors} />\n                  ) : (\n                    <SaveButton selector=\"vebinars\" action={setMainContentSelectors} />\n                  )}\n                </Popover>\n              </h3>\n            </>\n          ) : (\n            ''  \n          )}\n\n          <div className=\"event-page-content__webinars-list\">\n            <WebinarsList variant={variant} isEditing={selectors.vebinars} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EventPageContent3;\n","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse3Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx",[],"/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse2Page/EventPageAboutSpeaker/EventPageAboutSpeaker.jsx",["590","591","592","593","594"],"import React from 'react';\nimport './EventPageAboutSpeaker.scss';\n\nimport { Popover, Upload } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nimport speakerImg from '../../../../assets/img/lector_1.jpg';\n\nimport VideoPlayer from '../../../../components/VideoPlayer/VideoPlayer';\nimport EditButton from '../../../../components/EditButton/EditButton';\nimport SaveButton from '../../../../components/SaveButton/SaveButton';\nimport TextEditor from '../../../../components/TextEditor/TextEditor';\nimport EventUploadImage from '../../../../components/EventUploadImage/EventUploadImage';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setAboutSpeakerSelectors,\n  setAboutSpeakerData,\n} from '../../../../redux/actions/eventRedactor/eventRedactor';\n\nimport { aboutSpeakerPopoverContent } from '../../../../utils/eventPopoverContent/aboutSpeakerPopoverContent';\nimport CoursePaymentCard from '../../../../components/CoursePaymentCard/CoursePaymentCard';\n\nconst { Dragger } = Upload;\n\nfunction EventPageAboutSpeaker2({ variant }) {\n  const dispatch = useDispatch();\n  const { data, selectors } = useSelector((state) => state.eventRedactor.aboutSpeaker);\n  const isEditing = selectors.blockEditing;\n  const popoverContent = aboutSpeakerPopoverContent;\n  \n  console.log(data);\n\n  const onSelectInputValue = (e) => {\n    const selector = e.target.attributes.selector.nodeValue;\n    const data = e.target.value;\n    console.log(e);\n    dispatch(setAboutSpeakerData(selector, '', data));\n  };\n\n  const onSelectTextEditorAboutSpeaker = (e) => {\n    const value = e;\n    const selector = 'description';\n    dispatch(setAboutSpeakerData(selector, '', value));\n  };\n\n  const draggerProps = {\n    name: 'file',\n    multiple: false,\n    maxCount: 1,\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n    beforeUpload: (file) => {\n      const selector = 'video';\n      dispatch(setAboutSpeakerData(selector, '', file));\n      return false;\n    },\n  };\n\n  return (\n    <div className=\"about-speaker\">\n      <div className=\"about-speaker__wrapper\">\n        <div className=\"about-speaker__info\">\n          <div className=\"about-speaker__photo\">\n            {isEditing && (\n              <EventUploadImage\n                selector=\"img\"\n                action={setAboutSpeakerData}\n                popoverContentType={popoverContent.img}\n                index={1001}\n              />\n            )}\n            <img src={data.img} alt=\"\" />\n          </div>\n\n          <div className=\"about-speaker__description speaker-description\">\n            <span className=\"speaker-description__who\">спикер</span>\n\n            {!isEditing ? (\n              <>\n                {variant === 'redactor' && (\n                  <EditButton action={setAboutSpeakerSelectors} selector=\"blockEditing\" />\n                )}\n                <h2 className=\"speaker-description__name\">{data.fullName}</h2>\n                <h3 className=\"speaker-description__profession\">{data.career}</h3>\n              </>\n            ) : (\n              <>\n                <SaveButton action={setAboutSpeakerSelectors} selector=\"blockEditing\" />\n                <Popover placement=\"topRight\" title={'asdasdd'} content={'asdasd'} trigger=\"focus\">\n                  <input\n                    type=\"text\"\n                    className=\"test-input speaker-description__name_input\"\n                    value={data.fullName}\n                    selector=\"fullName\"\n                    autofocus\n                    onChange={onSelectInputValue}\n                  />\n                </Popover>\n                <Popover placement=\"topRight\" title={'asdasdd'} content={'asdasd'} trigger=\"focus\">\n                  <input\n                    type=\"text\"\n                    className=\"test-input speaker-description__profession_input\"\n                    value={data.career}\n                    selector=\"career\"\n                    autoFocus\n                    onChange={onSelectInputValue}\n                  />\n                </Popover>\n              </>\n            )}\n            <div className=\"event-page-content__points-list\">\n              <TextEditor\n                onChange={onSelectTextEditorAboutSpeaker}\n                isEditing={selectors.blockEditing}\n                value={data.description}></TextEditor>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"pay-full-course\">\n        <CoursePaymentCard type=\"full\" variant={variant} />\n      </div>\n    </div>\n  );\n}\n\nexport default EventPageAboutSpeaker2;\n","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse2Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx",[],"/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse2Page/EventPageContent/EventPageContent.jsx",["595","596","597","598","599","600"],"/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageAboutSpeaker/EventPageAboutSpeaker.jsx",["601","602"],"/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageContent/EventPageContent.jsx",["603","604","605","606"],"import React from 'react';\nimport './EventPageContent.scss';\n\nimport { Popover } from 'antd';\n\nimport WebinarsList from '../../../../components/WebinarsList/Webinars1List/WebinarsList';\nimport EditButton from '../../../../components/EditButton/EditButton';\nimport DeleteButton from '../../../../components/DeleteButton/DeleteButton';\nimport AddItemButton from '../../../../components/AddItemButton/AddItemButton';\nimport SaveButton from '../../../../components/SaveButton/SaveButton';\nimport TextEditor from '../../../../components/TextEditor/TextEditor';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setMainContentData,\n  setMainContentSelectors,\n  removeMainContentData,\n  addItemMainContentData,\n} from '../../../../redux/actions/eventRedactor/eventRedactor';\n\nfunction EventPageContent({ variant }) {\n  const dispatch = useDispatch();\n  const { data, selectors } = useSelector((state) => state.eventRedactor.mainContent);\n\n\n  const onSelectInputValue = (e, index) => {\n    const selector = e.target.attributes.selector.nodeValue;\n    const subSelector = e.target.attributes.subSelector.nodeValue;\n    const data = e.target.value;\n    dispatch(setMainContentData(selector, subSelector, data, index));\n  };\n\n  const onSelectTextEditorYouWillLearn = (e) => {\n    const selector = 'youWillLearn';\n    const subSelector = 'content';\n    const value = e;\n    dispatch(setMainContentData(selector, subSelector, value));\n  };\n\n  const onSelectTextEditorEventProgram = (e) => {\n    const selector = 'eventProgram';\n    const subSelector = 'content';\n    const value = e;\n    dispatch(setMainContentData(selector, subSelector, value));\n  };\n  console.log(variant);\n  return (\n    <div className=\"event-page__wrapper\">\n      <div className=\"event-page__content\">\n        <div className=\"event-page-content__points\">\n          {!selectors.youWillLearn ? (\n            <>\n              <div className=\"event-page-content__title\">\n                {variant === 'redactor' ? (\n                  <Popover\n                    placement=\"bottomRight\"\n                    title={'Изменение полей'}\n                    content={\n                      'Вы можете изменять, удалять или добавлять элементы в список, а также - менять заголовок блока'\n                    }\n                    trigger=\"hover\">\n                    {data.youWillLearn.title}\n                    <EditButton selector=\"youWillLearn\" action={setMainContentSelectors} />\n                  </Popover>\n                ) : (\n                  `${data.youWillLearn.title}`\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"event-page-content__title\">\n                <input\n                  className=\"event-page-content__title test-input\"\n                  type=\"text\"\n                  value={data.youWillLearn.title}\n                  selector=\"youWillLearn\"\n                  subSelector=\"title\"\n                  autoFocus\n                  placeholder=\"Введите название блока\"\n                  onChange={(e) => onSelectInputValue(e)}\n                />\n                <SaveButton selector=\"youWillLearn\" action={setMainContentSelectors} />\n              </div>\n            </>\n          )}\n          {variant === \"redactor\" ? (\n            <div className=\"event-page-content__points-list\">\n              <TextEditor\n                onChange={onSelectTextEditorYouWillLearn}\n                isEditing={selectors.youWillLearn}\n                value={data.youWillLearn.content}></TextEditor>\n            </div>            \n          )\n          :\n          (\n            <div className=\"event-page-content__points-list\">\n              <TextEditor\n                value={data.youWillLearn.content}></TextEditor>\n           </div>    \n          )\n          }\n        </div>\n        <div className=\"event-page-content__program\">\n          {variant === 'redactor' ? (\n            <>\n              {!selectors.eventProgram ? (\n                <>\n                  <h3 className=\"event-page-content__title\">\n                    <Popover\n                      placement=\"bottomRight\"\n                      title={'Изменение полей'}\n                      content={\n                        'Вы можете изменять, удалять или добавлять элементы в список, а также - менять заголовок блока'\n                      }\n                      trigger=\"hover\">\n                      {data.eventProgram.title}\n\n                      <EditButton selector=\"eventProgram\" action={setMainContentSelectors} />\n                    </Popover>\n                  </h3>\n                  <div className=\"event-page-content__points-list\">\n                    <TextEditor\n                      onChange={onSelectTextEditorEventProgram}\n                      isEditing={selectors.eventProgram}\n                      value={data.eventProgram.content}></TextEditor>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"event-page-content__title\">\n                    <input\n                      className=\"event-page-content__title test-input\"\n                      type=\"text\"\n                      value={data.eventProgram.title}\n                      selector=\"eventProgram\"\n                      subSelector=\"title\"\n                      autoFocus\n                      placeholder=\"Введите название блока\"\n                      onChange={(e) => onSelectInputValue(e)}\n                    />\n                    <SaveButton selector=\"eventProgram\" action={setMainContentSelectors} />\n                  </div>\n                  <div className=\"event-page-content__points-list\">\n                    <TextEditor\n                      onChange={onSelectTextEditorEventProgram}\n                      isEditing={selectors.eventProgram}\n                      value={data.eventProgram.content}></TextEditor>\n                  </div>\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <h3 className=\"event-page-content__title\">{data.eventProgram.title}</h3>\n              <div className=\"event-page-content__points-list\">\n                <TextEditor\n                  value={data.eventProgram.content}></TextEditor>\n              </div>\n            </>\n          )}\n        </div>\n        <div className=\"event-page-content__webinars\">\n          {variant === 'redactor' ? (\n            <>\n              <h3 className=\"event-page-content__title\">\n                <Popover\n                  placement=\"topRight\"\n                  title={'Редактирование списка вебинаров'}\n                  content={'Вы можете изменять, удалять или добавлять элементы в список'}\n                  trigger=\"hover\">\n                  Вебинары\n                  {!selectors.vebinars ? (\n                    <EditButton selector=\"vebinars\" action={setMainContentSelectors} />\n                  ) : (\n                    <SaveButton selector=\"vebinars\" action={setMainContentSelectors} />\n                  )}\n                </Popover>\n              </h3>\n            </>\n          ) : (\n            <div>\n\n            </div>\n          )}\n\n          <div className=\"event-page-content__webinars-list\">\n            <WebinarsList variant={variant} isEditing={selectors.vebinars} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EventPageContent;\n","/var/www/netlear/html/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx",["607","608","609","610"],"/var/www/netlear/html/clientNetlear/src/redux/actions/Temp/api.js",["611"],"import apiFetch from '../../../utils/api/apiFetch';\n\nconst api = '/user';\n\nexport default {\n  newPassword: (data) => apiFetch(`${api}/password`, { method: 'put', data }, true),\n  newEmail: (data) => apiFetch(`${api}/email`, { method: 'put', data }, true),\n  newProfileData: (data) => apiFetch(`${api}/profile`, { method: 'put', data }, true),\n  uploadAvatar: (data) => apiFetch(`/file/upload-avatar`, { method: 'post', data }, true),\n};\n","/var/www/netlear/html/clientNetlear/src/views/LatestEvents/LatestEvents.jsx",[],"/var/www/netlear/html/clientNetlear/src/views/LatestArticles/LatestArticles.jsx",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/eventRedactor/api.js",["612","613"],"import apiFetch from '../../../utils/api/apiFetch';\n\nimport { testUploadVimeoVids } from '../../../utils/testVimeo';\n\nconst api = '/course';\n\nexport default {\n  getAllCourses: () => apiFetch(`${api}`, { method: 'get' }),\n};\n","/var/www/netlear/html/clientNetlear/src/utils/getBase64.js",[],"/var/www/netlear/html/clientNetlear/src/utils/testVimeo.js",["614","615","616"],"var Vimeo = require('vimeo').Vimeo;\nvar VimeoUpload = require('vimeo-upload');\n\nconst client_id = 'e99c4ca28841dab2c510911e884bac53e832003a';\nconst client_secret =\n  '4k4i65Y+PPep2arbNBD/pIvf2OfgJDSVO/v5QclBj0OS370WjY3IMseIipW99MNoUpdKvfuEnGfsjltyfbDQOmvW+UXTNsFdwf0+agcEZU1BjXHyhfndczk5rJc7gjLn';\nconst access_token = '0f8cda46bbaa0456bae6475b238e2375';\n\nvar client = new Vimeo(client_id, client_secret, access_token);\n\nvar myVideo = require('../assets/video/IMG_5067.MP4');\n\nexport function testUploadVimeoVids(\n  video,\n  title,\n  description,\n  displayProcessFunc,\n  getVideoURIfunc,\n  elementIndex,\n) {\n  let file_name = video;\n  console.log('file_name', video);\n  return client.upload(\n    file_name,\n    {\n      name: title,\n      description: description,\n    },\n    function (uri) {\n      console.log('Your video URI is: ' + uri);\n      return getVideoURIfunc(uri, elementIndex);\n    },\n    function (bytes_uploaded, bytes_total) {\n      var percentage = ((bytes_uploaded / bytes_total) * 100).toFixed(2);\n      console.log(bytes_uploaded, bytes_total, percentage + '%');\n      return displayProcessFunc(percentage, elementIndex);\n    },\n    function (error) {\n      //   debugger;\n      console.log('Failed because: ' + error);\n      return displayProcessFunc(error, elementIndex);\n    },\n  );\n}\n\nexport const testCheckTranscodingVimeoVids = (uri, setTranscodingStatusFunc, elementIndex) => {\n  return client.request(\n    uri + '?fields=transcode.status',\n    function (error, body, status_code, headers) {\n      if (body.transcode.status === 'complete') {\n        setTranscodingStatusFunc('complete', elementIndex);\n        // console.log('Your video finished transcoding.');\n      } else if (body.transcode.status === 'in_progress') {\n        setTranscodingStatusFunc('in_progress', elementIndex);\n        // console.log('Your video is still transcoding.');\n      } else {\n        setTranscodingStatusFunc('error', elementIndex);\n        // console.log('Your video encountered an error during transcoding.');\n      }\n    },\n  );\n};\n\nexport const testGetVimeoVidsURL = (uri, setVideoURLFunc, elementIndex) => {\n  client.request(uri + '?fields=link', function (error, body, statusCode, headers) {\n    if (error) {\n      console.log('There was an error making the request.');\n      console.log('Server reported: ' + error);\n      return;\n    }\n\n    console.log('Your video link is: ' + body.link);\n    setVideoURLFunc(body.link, elementIndex);\n  });\n};\n\nexport function testEditTitleAndDescriptionVideo() {\n  const uri = '574942695';\n  const url = 'https://ancient-fortress-47643.herokuapp.com/';\n  client.request(\n    {\n      method: 'PATCH',\n      path: uri,\n      query: {\n        name: '{new video title}',\n        description: '{new video description}',\n      },\n      //   headers: {\n      //             Authorization: `Bearer f04070881e9d0374b49e1cc3a11bd11a`,\n      //           },\n    },\n    function (error, body, status_code, headers) {\n      //   debugger;\n      // console.log('The title and description for ' + uri + ' has been edited.');\n      console.log(error);\n      console.log(body);\n      console.log(headers);\n      console.log(status_code);\n    },\n  );\n}\n","/var/www/netlear/html/clientNetlear/src/utils/mapArrays/specialists.js",[],"/var/www/netlear/html/clientNetlear/src/utils/eventPopoverContent/bannerPopoversContent.js",[],"/var/www/netlear/html/clientNetlear/src/components/BlockTitle/BlockTitle.jsx",[],"/var/www/netlear/html/clientNetlear/src/utils/eventPopoverContent/aboutSpeakerPopoverContent.js",["617","618"],"import { setBannerSelectors } from '../../redux/actions/eventRedactor/eventRedactor';\nimport SaveButton from '../../components/SaveButton/SaveButton';\n\nexport const style = {\n  'ant-popover-title': { color: 'blue' },\n  'ant-popover-inner-content': {\n    color: 'red',\n  },\n};\n\nexport const aboutSpeakerPopoverContent = {\n  fullName: {\n    title: 'Введите имя и фамилию спикера',\n    content: () => {\n      return (\n        <div>\n          <p>По умолчанию используются данные вашего аккаунта</p>\n          <p>Полное имя указывать не обязательно</p>\n        </div>\n      );\n    },\n  },\n  career: {\n    title: 'Введите профессию или род занятий спикера',\n    content: () => {\n      return (\n        <div>\n          <p>По умолчанию используются данные вашего аккаунта</p>\n        </div>\n      );\n    },\n  },\n  description: {\n    title: 'Введите описание спикера',\n    content: () => {\n      return (\n        <div>\n          <p>По умолчанию используются данные вашего аккаунта</p>\n          <p>Желательно описать свою профессию (должность) или свои достижения в данной сфере</p>\n          <p>Подробное описание достижений спикера может привлечь большую аудиторию</p>\n        </div>\n      );\n    },\n  },\n  img: {\n    title: 'Выберите фото спикера',\n    content: () => {\n      return (\n        <div>\n          <p>Загрузите фото спикера или картинку по вашему вкусу.</p>\n        </div>\n      );\n    },\n  },\n};\n","/var/www/netlear/html/clientNetlear/src/components/SaveButton/SaveButton.jsx",["619"],"import './SaveButton.scss';\nimport React from 'react';\n\nimport { Button } from 'antd';\nimport { LockFilled } from '@ant-design/icons';\n\nimport { useDispatch } from 'react-redux';\nimport { setBannerSelectors } from '../../redux/actions/eventRedactor/eventRedactor';\n\nfunction SaveButton({ selector, action }) {\n  const dispatch = useDispatch();\n\n  const onSaveElement = (e) => {\n    const selector = e.target.closest('button').attributes.selector.nodeValue;\n    dispatch(action(selector, false));\n    console.log(selector);\n  };\n  return (\n    <Button\n      type=\"primary\"\n      selector={selector}\n      onClick={onSaveElement}\n      style={{ marginLeft: '10px' }}>\n      <LockFilled />\n      <span>Сохранить</span>\n    </Button>\n  );\n}\n\nexport default SaveButton;\n","/var/www/netlear/html/clientNetlear/src/components/EventUploadImage/EventUploadImage.jsx",["620","621"],"import React from 'react';\nimport './EventUploadImage.scss';\n\nimport { Popover } from 'antd';\nimport { FileImageTwoTone } from '@ant-design/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCourseImg } from '../../redux/actions/UploadingCourse/UploadingCourse';\n\nfunction EventUploadImage({ selector, action, popoverContentType, index = 1000 }) {\n  const courseFiles = useSelector((state) => state.Temp.courseFiles);\n  const ref = React.useRef();\n  const dispatch = useDispatch();\n  \n  const onPickUpImage = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    const newAtion = action;\n    const url = reader.readAsDataURL(file);\n\n    setFileImgForUpload(file, selector, index);\n    reader.onloadend = (e) => {\n      dispatch(newAtion(selector, index, e.target.result));\n    };\n  };\n\n  const setFileImgForUpload = (file, selector, index) => {\n    if (selector === 'promoImg') {\n      const webinarsImgSelector = `webinarsImg${index}`;\n      dispatch(setCourseImg(file, webinarsImgSelector, index));\n    } else if (selector === 'img') {\n      const speakerBlockImgSelector = 'imgSpeaker';\n      dispatch(setCourseImg(file, speakerBlockImgSelector));\n    } else {\n      dispatch(setCourseImg(file, selector));\n    }\n  };\n\n  return (\n    <>\n      <input\n        id={index === 1000 ? 'file-input' : index + 'file-input'}\n        ref={ref}\n        style={{ display: 'none' }}\n        type=\"file\"\n        name=\"user[image]\"\n        multiple={false}\n        onChange={onPickUpImage}\n      />\n\n      <label htmlFor={index === 1000 ? 'file-input' : index + 'file-input'}>\n        <Popover\n          placement=\"topRight\"\n          content={popoverContentType.content()}\n          title={popoverContentType.title}\n          trigger=\"hover\">\n          <FileImageTwoTone\n            style={{ fontSize: '32px', cursor: 'pointer', position: 'absolute', right: '0' }}\n          />\n        </Popover>\n      </label>\n    </>\n  );\n}\n\nexport default EventUploadImage;\n","/var/www/netlear/html/clientNetlear/src/components/EditButton/EditButton.jsx",["622"],"import React from 'react';\nimport './EditButton.scss';\n\nimport { Button } from 'antd';\nimport { EditFilled } from '@ant-design/icons';\n\nimport { useDispatch } from 'react-redux';\nimport { setBannerSelectors } from '../../redux/actions/eventRedactor/eventRedactor';\n\nfunction EditButton({ selector, action }) {\n  const dispatch = useDispatch();\n\n  const onEditElement = (e) => {\n    const selector = e.target.closest('button').attributes.selector.nodeValue;\n    dispatch(action(selector, true));\n    console.log(selector);\n  };\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"small\"\n      selector={selector}\n      onClick={onEditElement}\n      style={{ marginLeft: '10px' }}>\n      <EditFilled />\n    </Button>\n  );\n}\n\nexport default EditButton;\n","/var/www/netlear/html/clientNetlear/src/components/CoursePaymentCard/CoursePaymentCard.jsx",["623","624"],"import React from 'react';\n\nimport './CoursePaymentCard.scss';\n\nimport { Button, Input } from 'antd';\nimport { PlaySquareTwoTone, InteractionTwoTone, TrophyTwoTone } from '@ant-design/icons';\n\nimport { setPaidVideo } from '../../redux/actions/dev';\nimport { setSideMenuTrue } from '../../redux/actions/sideMenu';\nimport { setFullCourseCost } from '../../redux/actions/eventRedactor/eventRedactor';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport SettingsButton from '../SettingsButton/SettingsButton';\nimport SideMenu from '../SideMenu/SideMenu';\nimport CoursePaymentCardSettings from '../CoursePaymentCardSettings/CoursePaymentCardSettings';\n\nfunction CoursePaymentCard({ type = 'segment', dataIndex = 0, variant }) {\n  const data = useSelector((state) => state.eventRedactor.mainContent.data.vebinars[dataIndex]);\n  const fullCourseData = useSelector(\n    (state) => state.eventRedactor.mainContent.data.fullCoursePayCard,\n  );\n  const dispatch = useDispatch();\n  let currencySymbol\n\n  if(variant == \"redactor\"){\n\n    currencySymbol =\n    data.currency === 'RUB'\n      ? '₽'\n      : data.currency === 'EUR'\n      ? '€'\n      : data.currency === 'USD'\n      ? '$'\n      : '';\n  } else {\n\n    currencySymbol =\n    fullCourseData.currency === 'RUB'\n      ? '₽'\n      : fullCourseData.currency === 'EUR'\n      ? '€'\n      : fullCourseData.currency === 'USD'\n      ? '$'\n      : '';\n  }\n\n\n  const onOpenFullPayCardSettings = () => {\n    const selector = 'fullCoursePayCard';\n    dispatch(setSideMenuTrue(selector));\n  };\n\n  React.useEffect(() => {\n    if (type === 'full') {\n      dispatch(setFullCourseCost());\n    }\n  }, [type]);\n\n  const onChangeCouponInput = () => {};\n\n  const onSubmitCoupon = () => {};\n\n  const onClickPayNow = () => {\n    dispatch(setPaidVideo(true));\n  };\n  console.log(fullCourseData);\n  return (\n    <div className=\"payment-card\">\n      {variant === 'redactor' && (\n        <>\n          {' '}\n          <SettingsButton onClick={onOpenFullPayCardSettings} />{' '}\n          <SideMenu\n            selector=\"fullCoursePayCard\"\n            title=\"Основные настройки карты покупки полного курса\">\n            <CoursePaymentCardSettings />\n          </SideMenu>\n        </>\n      )}\n      {type === 'full' && <h2>Приобрести полный курс по сниженной цене</h2>}\n      <div className=\"payment-card__cost-block\">\n        <h2 className=\"payment-card__cost\">\n          {type === 'full' ? fullCourseData.cost : data.cost} {currencySymbol}\n        </h2>\n        {type === 'full' && (\n          <>\n            <span className=\"payment-card__full-cost\">\n              {`${fullCourseData.cost} ${currencySymbol}`}\n            </span>\n            <span className=\"payment-card__sale\">{`Скидка ${fullCourseData.discount}%`}</span>\n          </>\n        )}\n      </div>\n      <Button\n        className=\"payment-card__pay-now-button\"\n        size=\"large\"\n        type=\"primary\"\n        onClick={onClickPayNow}>\n        Купить сейчас\n      </Button>\n      <div className=\"payment-card__course-includes-block course-includes-block\">\n        <h3 className=\"course-includes-block__title\">\n          {type === 'segment' ? 'Этот блок включает:' : 'Этот курс включает:'}\n        </h3>\n        <div className=\"course-includes-block__content\">\n          <div className=\"course-includes-block__item\">\n            <PlaySquareTwoTone /> <p>1 видео</p>\n          </div>\n          <div className=\"course-includes-block__item\">\n            <InteractionTwoTone /> <p>Пожизненный доступ</p>\n          </div>\n          <div className=\"course-includes-block__item\">\n            <TrophyTwoTone /> <p>Сертификат об окончании</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"payment-card__coupon-block\">\n        <Input placeholder=\"Введите купон\" onChange={onChangeCouponInput} />\n        <Button type=\"primary\" onClick={onSubmitCoupon}>\n          Применить\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default CoursePaymentCard;\n","/var/www/netlear/html/clientNetlear/src/components/AddItemButton/AddItemButton.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/DeleteButton/DeleteButton.jsx",[],"/var/www/netlear/html/clientNetlear/src/components/WebinarsList/Webinars1List/WebinarsList.jsx",["625","626","627","628","629","630","631","632","633","634"],"import React,{useState} from 'react';\nimport './WebinarsList.scss';\n\nimport { Collapse, Timeline } from 'antd';\nimport { LeftCircleTwoTone, ClockCircleOutlined } from '@ant-design/icons';\n\nimport testImg from '../../../assets/img/medicineSections/cardiovascular-surgery.jpg';\nimport testImg2 from '../../../assets/img/medicineSections/otolaringology.jpg';\n\nimport VideoPlayer from '../../VideoPlayer/VideoPlayer';\nimport CoursePaymentCard from '../../CoursePaymentCard/CoursePaymentCard.jsx';\nimport TextEditor from '../../TextEditor/TextEditor';\nimport DeleteButton from '../../DeleteButton/DeleteButton';\nimport SettingsButton from '../../SettingsButton/SettingsButton';\nimport ModalWindow from '../../Modal/ModalWindow/ModalWindow';\nimport SideMenu from '../../SideMenu/SideMenu';\nimport WebinarsItemSettings from '../../WebinarsItemSettings/WebinarsItemSettings';\nimport EventUploadImage from '../../EventUploadImage/EventUploadImage';\nimport AddItemButton from '../../AddItemButton/AddItemButton';\n\nimport { mainContentPopoversContent } from '../../../utils/eventPopoverContent/mainContentPopoverContent';\n\nimport { setPaidVideo } from '../../../redux/actions/dev';\nimport {\n  removeMainContentVebinarsItem,\n  setMainContentVebinarsData,\n  addItemMainContentVebinarsData,\n} from '../../../redux/actions/eventRedactor/eventRedactor';\nimport { setSideMenuTrue } from '../../../redux/actions/sideMenu';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { url } from '../../../conf';\n\nconst { Panel } = Collapse;\n\nfunction WebinarsList({ variant, isEditing, type }) {\n  const dispatch = useDispatch();\n  const { isPaidVideo } = useSelector((state) => state.dev);\n  const { data, selectors } = useSelector((state) => state.eventRedactor.mainContent);\n  const sideMenu = useSelector((state) => state.sideMenu);\n  const { backgroundImg } = mainContentPopoversContent;\n  const [videoPreviyred , setVideoPreviured] = useState(\"\")\n\n  React.useEffect(() => {\n    console.log(data.vebinars.length);\n  }, [data.vebinars.length]);\n\n  const onOpenVebinarsItemSettings = (i) => {\n    const selector = 'eventRedactor';\n    dispatch(setSideMenuTrue(selector, i));\n  };\n\n  const onSelectTextEditorVebinars = (e, selector, index) => {\n    const value = e;\n    dispatch(setMainContentVebinarsData(selector, index, value));\n  };\n\n  const panelHeader = (obj, index, isEditing) => {\n    return (\n      <div className=\"webinars-item__header\">\n        <div className=\"webinars-item__left-block\">\n\n          {obj.promoImg && variant != \"redactor\" &&(\n            <img src={`${url}coorsefiles/${obj.promoImg}`} alt=\"img\" />\n          )}\n          {obj.promoImg&& variant == \"redactor\" &&(\n            <img src={obj.promoImg} alt=\"img\" />\n          )}\n          \n          {isEditing && (\n            <EventUploadImage\n              index={index}\n              selector={'promoImg'}\n              action={setMainContentVebinarsData}\n              popoverContentType={backgroundImg}\n            />\n          )}\n        </div>\n        <div className=\"webinars-item__right-block\">\n          <div className=\"webinars-item__right-block-header\">\n            <span className=\"webinars-item__right-block_strong\">{index + 1}</span>\n            <span className=\"webinars-item__right-block_type\">\n              {obj.format === 'recording' ? 'В записи' : obj.format === \"В записи\" || obj.format === 'Прямая трансляция'? obj.format : 'Прямая трансляция'}\n            </span>\n            <span\n              className=\"webinars-item__right-block_filled-paid\"\n              style={{ backgroundColor: !data.vebinars[index].isPaid && 'green' }}>\n              {obj.isPaid ? 'Платно' : 'Бесплатно'}\n            </span>\n            <span className=\"webinars-item__right-blockk_type\">\n              {data.vebinars[index].videoDuration} минут\n            </span>\n          </div>\n          <div>\n            {variant === 'redactor'?(\n              <TextEditor\n                onChange={(e) => onSelectTextEditorVebinars(e, 'title', index)}\n                isEditing={selectors.vebinars}\n                value={data.vebinars[index].title}\n              />            \n            )\n            :\n            (\n              <div>\n                <TextEditor\n                  value={data.vebinars[index].title}>\n\n                </TextEditor>               \n                {/* <p>\n                {data.vebinars[index].title}\n                </p> */}\n              </div>\n            )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      <Timeline>\n        {data.vebinars.length &&\n          data.vebinars.map((el, i) => {\n            const reader = new FileReader()\n\n            if(el.video && variant == \"redactor\"){\n              \n              reader.onload = e =>{\n                setVideoPreviured(e.target.result)\n              }\n          \n              reader.readAsDataURL(el.video) \n            }\n\n            return(\n            <Timeline.Item\n              key={i}\n              dot={\n                el.isPaid ? (\n                  <ClockCircleOutlined style={{ fontSize: '24px' }} />\n                ) : (\n                  <ClockCircleOutlined style={{ fontSize: '24px', color: 'green' }} />\n                )\n              }\n              style={{ fontSize: '18px',width:\"100%\" }}>\n              <span className=\"time-line-date\">{data.vebinars[i].date}</span>\n\n              {isEditing && (\n                <>\n                  <SettingsButton onClick={() => onOpenVebinarsItemSettings(i)} />\n                  <DeleteButton index={i} action={removeMainContentVebinarsItem} />\n                </>\n              )}\n              <Collapse\n                bordered={false}\n                defaultActiveKey={['0']}\n                expandIcon={({ isActive }) => (\n                  <LeftCircleTwoTone style={{ fontSize: '32px' }} rotate={isActive ? -90 : 0} />\n                )}\n                className=\"site-collapse-custom-collapse\">\n                <Panel\n                  header={panelHeader(el, i, isEditing)}\n                  key={i}\n                  className=\"site-collapse-custom-panel\">\n                  {variant === 'redactor'?(\n                      <TextEditor\n                        onChange={(e) => onSelectTextEditorVebinars(e, 'content', i)}\n                        isEditing={selectors.vebinars}\n                        value={data.vebinars[i].content}\n                        // selector={'vebinars'}\n                        // subSelector={'content'}\n                        // action={setMainContentVebinarsData}\n                        // vebinarIndex={`${i}`}\n                    />\n                  )\n                  :\n                  (\n                    <div>\n                        <TextEditor\n                          value={data.vebinars[i].content}>\n\n                        </TextEditor>\n                        {/* <p>\n                        {data.vebinars[i].content}\n                        </p> */}\n                    </div>\n                  )\n                  }              \n                  {variant != 'redactor'? (\n                    <div>\n                      <VideoPlayer className={'webinars-player'} videoURL={`${url}coorsefiles/${el.video}`}/>\n                    </div>\n                  ) : el.isPaid ? (\n                    <div>\n                      <p>Вебинар будет доступен после покупки курса!</p>\n                      <CoursePaymentCard type=\"segment\" dataIndex={i} />                      \n                    </div>\n                  ) : (\n                    <div>\n                      <VideoPlayer className={'webinars-player'} videoURL={videoPreviyred}/>\n                    </div>\n                  )}\n                </Panel>\n              </Collapse>\n            </Timeline.Item>\n          )})}\n      </Timeline>\n      {isEditing && (\n        <div className=\"webinars-list__add-item\">\n          <AddItemButton action={addItemMainContentVebinarsData} selector=\"vebinars\" />\n        </div>\n      )}\n\n      {data.vebinars.length && type != 2 &&(\n        <div className=\"pay-full-course\">\n          <CoursePaymentCard type=\"full\" variant={variant} />\n        </div>\n      )}\n      {sideMenu.eventRedactor && data.vebinars.length && variant===\"redactor\"&&(\n        <SideMenu selector=\"eventRedactor\" title=\"Основные настройки элемента\">\n          <WebinarsItemSettings />\n        </SideMenu>\n      )}\n    </>\n  );\n}\n\nexport default WebinarsList;\n","/var/www/netlear/html/clientNetlear/src/components/EventsSwiper/EventsSwiper.jsx",["635"],"import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./EventsSwiper.scss\";\nimport { latestEvents } from \"../../utils/mapArrays/latestEvents\";\n\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/pagination/pagination.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, Pagination, Navigation } from \"swiper/core\";\nimport Button from \"../Button/Button\";\nSwiperCore.use([Autoplay, Pagination, Navigation]);\n\nexport default function EventsSwiper(children) {\n  const swiperRef = useRef(null);\n  const width = window.innerWidth;\n  React.useEffect(() => {\n    // console.log(swiperRef);\n  }, [swiperRef]);\n\n  return (\n    <Swiper\n      ref={swiperRef}\n      slidesPerView={\n        width >= 1600 ? 4 : width >= 1000 ? 3 : width >= 600 ? 2 : 1\n      }\n      centeredSlides={width <= 600 && true}\n      spaceBetween={30}\n      pagination={{\n        type: \"custom\",\n      }}\n      loop={true}\n      navigation={true}\n    >\n\n      {latestEvents.map((el) => (\n        <Link to={el.link} key={el.experience}>\n          <SwiperSlide>\n            <div className=\"events-swiper\">\n              <div className=\"events-swiper__img\">\n                <img src={el.cardImg} alt=\"\" />\n              </div>\n              <div className=\"events-swiper__info\">\n                <p>{el.section}</p>\n                <p>{el.title}</p>\n                <p>{el.cost}</p>\n                <div className=\"events-swiper__specialist\">\n                  <div className=\"events-swiper__specialist_img\">\n                    <img src={el.specialistImg} alt=\"\" />\n                  </div>\n                  <p>{el.name}</p>\n                </div>\n                <Button text=\"Подробнее\" />\n              </div>\n            </div>\n          </SwiperSlide>\n        </Link>\n      ))}\n    </Swiper>\n  );\n}\n","/var/www/netlear/html/clientNetlear/src/redux/actions/UploadingCourse/UploadingCourse.js",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/sideMenu.js",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/dev.js",[],"/var/www/netlear/html/clientNetlear/src/utils/mapArrays/latestEvents.js",[],"/var/www/netlear/html/clientNetlear/src/utils/eventPopoverContent/mainContentPopoverContent.js",[],"/var/www/netlear/html/clientNetlear/src/components/SideMenu/SideMenu.jsx",["636"],"import React from 'react';\nimport './SideMenu.scss';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSideMenuFalse, setSideMenuTrue } from '../../redux/actions/sideMenu';\n\nimport { Drawer } from 'antd';\n\nfunction SideMenu({ children, selector, title }) {\n  const dispatch = useDispatch();\n  const sideMenuState = useSelector((state) => state.sideMenu);\n\n  const showDrawer = () => {\n    dispatch(setSideMenuTrue(selector));\n  };\n\n  const onClose = () => {\n    dispatch(setSideMenuFalse(selector));\n  };\n\n  return (\n    <Drawer\n      title={title}\n      contentWrapperStyle={{ width: '375px' }}\n      placement=\"left\"\n      closable={false}\n      onClose={onClose}\n      visible={sideMenuState[selector]}\n      key=\"left\">\n      {children}\n    </Drawer>\n  );\n}\n\nexport default SideMenu;\n","/var/www/netlear/html/clientNetlear/src/components/CoursePaymentCardSettings/CoursePaymentCardSettings.jsx",["637","638","639","640","641","642","643","644"],"import React from 'react';\nimport './CoursePaymentCardSettings.scss';\n\nimport {\n  Button,\n  Input,\n  Group,\n  Radio,\n  Upload,\n  Popconfirm,\n  DatePicker,\n  ConfigProvider,\n  Select,\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport ruRU from 'antd/lib/locale/ru_RU';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFullCourseSettings, setFullCourseCost } from '../../redux/actions/eventRedactor/eventRedactor';\nimport { setSideMenuFalse } from '../../redux/actions/sideMenu';\n\nfunction CoursePaymentCardSettings() {\n  const dispatch = useDispatch();\n  const { index, eventRedactor } = useSelector((state) => state.sideMenu);\n  const data = useSelector((state) => state.eventRedactor.mainContent.data.fullCoursePayCard);\n\n  const [currency, setCurrency] = React.useState(data.currency);\n  const [promoCode, setPromoCode] = React.useState(data.promocode);\n  const [discount, setDiscount] = React.useState(data.discount);\n  const [promoCodeDiscount, setPromoCodeDiscount] = React.useState(data.promoCodeDiscount);\n\n  const onChangeSelectCurrency = (value) => {\n    console.log(`selected ${value}`);\n    setCurrency(value);\n  };\n\n  const onChangePromoCode = (e) => {\n    setPromoCode(e.target.value);\n  };\n\n  const onChangeSell = (e) => {\n    setDiscount(e.target.value);\n  };\n\n  const onChangePromoCodeSell = (e) => {\n    setPromoCodeDiscount(e.target.value);\n  };\n\n  React.useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  const onSaveItemSettings = () => {\n    const dataObj = {\n      currency,\n      promoCode,\n      discount,\n      promoCodeDiscount,\n    };\n    dispatch(setFullCourseSettings(dataObj));\n    dispatch(setFullCourseCost());\n    dispatch(setSideMenuFalse());\n  };\n\n  React.useEffect(() => {\n    console.log(currency, promoCode, discount, promoCodeDiscount);\n  }, [currency, promoCode, discount, promoCodeDiscount]);\n\n  return (\n    <div className=\"webinars-item-settings-block settings-block\">\n      <ConfigProvider locale={ruRU}>\n        <div className=\"settings-block-type-1\">\n          <h4>Введите скидку за приобретение полного курса</h4>\n          <p>Скидка указывается в процентах</p>\n          <Input\n            type=\"number\"\n            style={{ width: 'auto' }}\n            value={discount}\n            placeholder=\"Скидка по промокоду\"\n            onChange={onChangeSell}\n          />\n        </div>\n        <div className=\"settings-block-type-1\">\n          <h4>Выберите валюту</h4>\n          <p>\n            Выбранная валюта будет использоваться как для покупки единичных видео, так и полного\n            курса\n          </p>\n          <Select defaultValue={currency} onChange={onChangeSelectCurrency}>\n            <Select.Option value=\"RUB\">RUB</Select.Option>\n            <Select.Option value=\"USD\">USD</Select.Option>\n            <Select.Option value=\"EUR\">EUR</Select.Option>\n          </Select>\n        </div>\n        <div className=\"settings-block-type-1\">\n          <h4>Введите промокод</h4>\n          <p>\n            Это необязательный пункт, вы можете написать собственный промокод, по которому будет\n            предоставляться скидка на данный продукт\n          </p>\n          <Input\n            type=\"text\"\n            style={{ width: 'auto' }}\n            placeholder=\"Промокод\"\n            value={promoCode}\n            onChange={onChangePromoCode}\n          />\n          <h4>Введите дополнительную скидку, предоставляемую по промокоду</h4>\n          <p>Скидка указывается в процентах</p>\n          <Input\n            type=\"number\"\n            style={{ width: 'auto' }}\n            value={promoCodeDiscount}\n            placeholder=\"Скидка по промокоду\"\n            onChange={onChangePromoCodeSell}\n          />\n        </div>\n\n        <Button type=\"primary\" onClick={onSaveItemSettings}>\n          Сохранить\n        </Button>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default CoursePaymentCardSettings;\n","/var/www/netlear/html/clientNetlear/src/components/SettingsButton/SettingsButton.jsx",["645"],"import React from 'react';\nimport './SettingsButton';\n\nimport { useDispatch } from 'react-redux';\n\nimport { SettingTwoTone } from '@ant-design/icons';\nimport { Popover } from 'antd';\n\nfunction SettingsButton({ onClick }) {\n  return (\n    <Popover\n      placement=\"topRight\"\n      title={'Изменить настройки '}\n      content={'Основные настройки элемента'}\n      trigger=\"hover\">\n      <SettingTwoTone\n        className=\"delete-button\"\n        onClick={onClick}\n        style={{ fontSize: '24px', marginLeft: '5px' }}\n      />\n    </Popover>\n  );\n}\n\nexport default SettingsButton;\n","/var/www/netlear/html/clientNetlear/src/components/WebinarsItemSettings/WebinarsItemSettings.jsx",["646","647","648","649","650"],"import React, { useEffect, useState } from 'react';\nimport './WebinarsItemSettings.scss';\n\nimport {\n  Button,\n  Input,\n  Group,\n  Radio,\n  Upload,\n  Popconfirm,\n  DatePicker,\n  ConfigProvider,\n  Select,\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport ruRU from 'antd/lib/locale/ru_RU';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setMaunContentVebinarsSettings,\n  setFullCourseCost,\n} from '../../redux/actions/eventRedactor/eventRedactor';\nimport { setSideMenuFalse } from '../../redux/actions/sideMenu';\n\nimport { testUploadVimeoVids } from '../../utils/testVimeo';\n\nfunction WebinarsItemSettings() {\n  const dispatch = useDispatch();\n  const { index, eventRedactor } = useSelector((state) => state.sideMenu);\n  const data = useSelector(\n    (state) => state.eventRedactor.mainContent.data.vebinars[index ? index : 0],\n  );\n  const [isPaid, seIsPaid] = React.useState(data.isPaid || false); \n  const [format, setFormat] = React.useState(data.format || 'recording');\n  const [date, setDate] = React.useState(data.date || null);\n  const [cost, setCost] = React.useState(data.cost || 0);\n  const [currency, setCurrency] = React.useState(data.currency || 'RUB');\n  const [promoCode, setPromoCode] = React.useState(data.promocode || '');\n  const [personalDiscount, setPersonalDiscount] = React.useState(data.personalDiscount || 0);\n  const [videoPreviured, setVideoPreviured] = useState(data.video || null);\n  const [video, setVideo] = useState(data.video || null);\n  const [videoName, setVideoName] = React.useState(data.videoName || null);\n  const [videoDescription, setVideoDescription] = React.useState(data.videoDescription || null);\n\n  React.useEffect(() => {\n    console.log('data:', data);\n  }, [data]);\n\n  const onChangeDatePicker = (value, dateString) => {\n    // console.log('Selected Time: ', value);\n    // console.log('Formatted Selected Time: ', dateString);\n    setDate(dateString);\n  };\n\n  const onChangeSelectFormat = (value) => {\n    // console.log(`selected ${value}`);\n    setFormat(value);\n  };\n\n  const onOkDatePicker = (value) => {\n    // console.log('onOk: ', value);\n  };\n\n  const onChangeRadioIdPaid = (e) => {\n    // console.log('radio checked', e.target.value);\n    seIsPaid(e.target.value);\n  };\n\n  const onChangeSelectCost = (e) => {\n    // console.log('select cost:', e.target.value);\n    setCost(e.target.value);\n  };\n\n  const onChangeSelectCurrency = (value) => {\n    // console.log(`selected ${value}`);\n    setCurrency(value);\n  };\n\n  const onChangePromoCode = (e) => {\n    setPromoCode(e.target.value);\n  };\n\n  const onChangePromoCodeSell = (e) => {\n    setPersonalDiscount(e.target.value);\n  };\n\n  const onUploadVideo = async(e) => {\n\n    setVideo(e)\n\n    if(!e||!e.type.match(\"video\")){\n      return\n    }\n    const reader = new FileReader()\n\n    reader.onload = e =>{\n      setVideoPreviured(e.target.result)\n    }\n\n    reader.readAsDataURL(e) \n  };\n\n  const onChangeVideoName = (e) => {\n    const value = e.target.value;\n    setVideoName(value);\n  };\n\n  const onChangeVideoDescription = (e) => {\n    const value = e.target.value;\n    setVideoDescription(value);\n  };\n\n  const setAllSettingsDefault = () => {\n    seIsPaid(true);\n    setFormat(data.format || 'В записи');\n    setDate(data.date || null);\n    setCost(data.cost || 0);\n    setCurrency(data.currency || 'RUB');\n    setPromoCode(data.promocode || '');\n    setPersonalDiscount(data.personalDiscount || 0);\n    setVideo(null);\n    setVideoName(data.videoName || '');\n    setVideoDescription(data.videoDescription || '');\n  };\n\n  const onSaveItemSettings = () => {\n    if (isPaid) {\n      const dataObj = {\n        isPaid,\n        format,\n        date,\n        cost,\n        currency,\n        promoCode,\n        personalDiscount,\n        video,\n        videoName,\n        videoDescription,\n      };\n      dispatch(setMaunContentVebinarsSettings(dataObj, index));\n      dispatch(setFullCourseCost());\n    } else {\n      const dataObj = {\n        isPaid,\n        format,\n        date,\n        cost: 0,\n        currency: 'RUB',\n        promoCode: '',\n        personalDiscount: 0,\n        video,\n        videoName,\n        videoDescription,\n      };\n      dispatch(setMaunContentVebinarsSettings(dataObj, index));\n      dispatch(setFullCourseCost());\n    }\n    setAllSettingsDefault();\n    dispatch(setSideMenuFalse());\n  };\n\n  // React.useEffect(() => {\n  //   console.log(isPaid, format, date, cost, currency, promoCode, personalDiscount);\n  // }, [isPaid, format, date, cost, currency, promoCode, personalDiscount]);\n\n  return (\n    <div className=\"webinars-item-settings-block settings-block\">\n      {format === \"recording\" && (\n        <video src={videoPreviured} width=\"300px\" controls></video>\n      )}\n\n      <ConfigProvider locale={ruRU}>\n        <div className=\"settings-block-type-1\">\n          <h4>Выберите тип предоставляемого контента</h4>\n          <Select defaultValue={format} onChange={onChangeSelectFormat}>\n            <Select.Option value=\"В записи\">В записи</Select.Option>\n            <Select.Option value=\"Онлайн трансляция\">Онлайн трансляция</Select.Option>\n          </Select>\n          {format === 'В записи' && (\n            <>\n              <Upload action={onUploadVideo} listType=\"video\" maxCount={1} onRemove={()=>setVideo(\"\")}>\n                <Button>\n                  <UploadOutlined /> Загрузить видео\n                </Button>\n              </Upload>\n            </>\n          )}\n        </div>\n        {format === 'В записи' && (\n          <div className=\"settings-block-type-1\">\n            <h4>Введите название и краткое описание видео</h4>\n            <p>Это обязательный пункт</p>\n            <Input\n              type=\"string\"\n              value={videoName}\n              style={{ width: 'auto' }}\n              placeholder=\"Название видео\"\n              onChange={onChangeVideoName}\n            />\n            <Input\n              type=\"string\"\n              value={videoDescription}\n              style={{ width: 'auto' }}\n              placeholder=\"Краткое описание\"\n              onChange={onChangeVideoDescription}\n            />\n          </div>\n        )}\n        <div className=\"settings-block-type-1\">\n          {format === 'В записи' ? (\n            <>\n              <h4>Выберите дату появления видео в доступе</h4>\n              <p>Это необязательный пункт, если дата не выбрана, то видео будет доступно сразу</p>\n              <DatePicker onChange={onChangeDatePicker} onOk={onOkDatePicker} />\n            </>\n          ) : (\n            <>\n              <h4>Выберите дату и время проведения мероприятия</h4>\n              <DatePicker showTime onChange={onChangeDatePicker} onOk={onOkDatePicker} />\n            </>\n          )}\n        </div>\n        <div className=\"settings-block-type-1\">\n          <h4>Выберите тип предоставляемого контента</h4>\n          <Radio.Group onChange={onChangeRadioIdPaid} value={isPaid}>\n            <Radio value={false}>Бесплатно</Radio>\n            <Radio value={true}>Платный контент</Radio>\n          </Radio.Group>\n        </div>\n\n        {isPaid && (\n          <>\n            <div className=\"settings-block-type-1\">\n              <h4>Введите стоимость предоставляемого контента</h4>\n              <Input\n                type=\"number\"\n                value={cost}\n                style={{ width: 'auto' }}\n                placeholder=\"Стоимость\"\n                onChange={onChangeSelectCost}\n              />\n              <Select defaultValue={currency} onChange={onChangeSelectCurrency}>\n                <Select.Option value=\"RUB\">RUB</Select.Option>\n                <Select.Option value=\"USD\">USD</Select.Option>\n                <Select.Option value=\"EUR\">EUR</Select.Option>\n              </Select>\n            </div>\n            <div className=\"settings-block-type-1\">\n              <h4>Введите промокод</h4>\n              <p>\n                Это необязательный пункт, вы можете написать собственный промокод, по которому будет\n                предоставляться скидка на данный продукт\n              </p>\n              <Input\n                type=\"text\"\n                style={{ width: 'auto' }}\n                placeholder=\"Промокод\"\n                value={promoCode}\n                onChange={onChangePromoCode}\n              />\n              <h4>Введите скидку, предоставляемую по промокоду</h4>\n              <p>Скидка указывается в процентах</p>\n              <Input\n                type=\"number\"\n                style={{ width: 'auto' }}\n                value={personalDiscount}\n                placeholder=\"Скидка по промокоду\"\n                onChange={onChangePromoCodeSell}\n              />\n            </div>\n          </>\n        )}\n\n        <Button type=\"primary\" onClick={onSaveItemSettings}>\n          Сохранить\n        </Button>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default WebinarsItemSettings;\n","/var/www/netlear/html/clientNetlear/src/components/VideoPlayer/VideoPlayer.jsx",[],"/var/www/netlear/html/clientNetlear/src/redux/actions/UploadingCourse/api.js",["651","652"],"import apiFetch from '../../../utils/api/apiFetch';\n\nimport { testUploadVimeoVids } from '../../../utils/testVimeo';\n\nconst api = '/course';\n\nexport default {\n  postEventData: (data) => apiFetch(`${api}`, { method: 'post', data }, true),\n  putEventImages: (eventId, data) =>\n    apiFetch(`${api}/upload/${eventId}`, { method: 'put', data }, true),\n};\n","/var/www/netlear/html/clientNetlear/src/components/WebinarsList/Webinars2List/WebinarsList.jsx",["653","654","655","656","657","658","659","660","661","662"],"import React,{useState} from 'react';\nimport './WebinarsList.scss';\n\nimport { Collapse, Timeline } from 'antd';\nimport { LeftCircleTwoTone, ClockCircleOutlined } from '@ant-design/icons';\n\nimport testImg from '../../../assets/img/medicineSections/cardiovascular-surgery.jpg';\nimport testImg2 from '../../../assets/img/medicineSections/otolaringology.jpg';\n\nimport VideoPlayer from '../../VideoPlayer/VideoPlayer';\nimport CoursePaymentCard from '../../CoursePaymentCard/CoursePaymentCard.jsx';\nimport TextEditor from '../../TextEditor/TextEditor';\nimport DeleteButton from '../../DeleteButton/DeleteButton';\nimport SettingsButton from '../../SettingsButton/SettingsButton';\nimport ModalWindow from '../../Modal/ModalWindow/ModalWindow';\nimport SideMenu from '../../SideMenu/SideMenu';\nimport WebinarsItemSettings from '../../WebinarsItemSettings/WebinarsItemSettings';\nimport EventUploadImage from '../../EventUploadImage/EventUploadImage';\nimport AddItemButton from '../../AddItemButton/AddItemButton';\n\nimport { mainContentPopoversContent } from '../../../utils/eventPopoverContent/mainContentPopoverContent';\n\nimport { setPaidVideo } from '../../../redux/actions/dev';\nimport {\n  removeMainContentVebinarsItem,\n  setMainContentVebinarsData,\n  addItemMainContentVebinarsData,\n} from '../../../redux/actions/eventRedactor/eventRedactor';\nimport { setSideMenuTrue } from '../../../redux/actions/sideMenu';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { url } from '../../../conf';\n\nconst { Panel } = Collapse;\n\nfunction WebinarsList({ variant, isEditing, type }) {\n  const dispatch = useDispatch();\n  const { isPaidVideo } = useSelector((state) => state.dev);\n  const { data, selectors } = useSelector((state) => state.eventRedactor.mainContent);\n  const sideMenu = useSelector((state) => state.sideMenu);\n  const { backgroundImg } = mainContentPopoversContent;\n  const [videoPreviyred , setVideoPreviured] = useState(\"\")\n\n  React.useEffect(() => {\n    console.log(data.vebinars.length);\n  }, [data.vebinars.length]);\n\n  const onOpenVebinarsItemSettings = (i) => {\n    const selector = 'eventRedactor';\n    dispatch(setSideMenuTrue(selector, i));\n  };\n\n  const onSelectTextEditorVebinars = (e, selector, index) => {\n    const value = e;\n    dispatch(setMainContentVebinarsData(selector, index, value));\n  };\n\n  const panelHeader = (obj, index, isEditing) => {\n    return (\n      <div className=\"webinars-item__header\">\n        <div className=\"webinars-item__left-block\">\n\n          {obj.promoImg && variant != \"redactor\" &&(\n            <img src={`${url}coorsefiles/${obj.promoImg}`} alt=\"img\" />\n          )}\n          {obj.promoImg&& variant == \"redactor\" &&(\n            <img src={obj.promoImg} alt=\"img\" />\n          )}\n          \n          {isEditing && (\n            <EventUploadImage\n              index={index}\n              selector={'promoImg'}\n              action={setMainContentVebinarsData}\n              popoverContentType={backgroundImg}\n            />\n          )}\n        </div>\n        <div className=\"webinars-item__right-block\">\n          <div className=\"webinars-item__right-block-header\">\n            <span className=\"webinars-item__right-block_strong\">{index + 1}</span>\n            <span className=\"webinars-item__right-block_type\">\n              {obj.format === 'recording' ? 'В записи' : obj.format === \"В записи\" || obj.format === 'Прямая трансляция'? obj.format : 'Прямая трансляция'}\n            </span>\n            <span\n              className=\"webinars-item__right-block_filled-paid\"\n              style={{ backgroundColor: !data.vebinars[index].isPaid && 'green' }}>\n              {obj.isPaid ? 'Платно' : 'Бесплатно'}\n            </span>\n            <span className=\"webinars-item__right-blockk_type\">\n              {data.vebinars[index].videoDuration} минут\n            </span>\n          </div>\n          <div>\n            {variant === 'redactor'?(\n              <TextEditor\n                onChange={(e) => onSelectTextEditorVebinars(e, 'title', index)}\n                isEditing={selectors.vebinars}\n                value={data.vebinars[index].title}\n              />            \n            )\n            :\n            (\n              <div>\n                <TextEditor\n                  value={data.vebinars[index].title}>\n\n                </TextEditor>               \n                {/* <p>\n                {data.vebinars[index].title}\n                </p> */}\n              </div>\n            )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      <Timeline>\n        {data.vebinars.length &&\n          data.vebinars.map((el, i) => {\n            const reader = new FileReader()\n\n            if(el.video && variant == \"redactor\"){\n\n              reader.onload = e =>{\n                setVideoPreviured(e.target.result)\n              }\n          \n              reader.readAsDataURL(el.video) \n            }\n\n            return(\n            <Timeline.Item\n              key={i}\n              dot={\n                el.isPaid ? (\n                  <ClockCircleOutlined style={{ fontSize: '24px' }} />\n                ) : (\n                  <ClockCircleOutlined style={{ fontSize: '24px', color: 'green' }} />\n                )\n              }\n              style={{ fontSize: '18px',width:\"100%\" }}>\n              <span className=\"time-line-date\">{data.vebinars[i].date}</span>\n\n              {isEditing && (\n                <>\n                  <SettingsButton onClick={() => onOpenVebinarsItemSettings(i)} />\n                  <DeleteButton index={i} action={removeMainContentVebinarsItem} />\n                </>\n              )}\n              <Collapse\n                bordered={false}\n                defaultActiveKey={['0']}\n                expandIcon={({ isActive }) => (\n                  <LeftCircleTwoTone style={{ fontSize: '32px' }} rotate={isActive ? -90 : 0} />\n                )}\n                className=\"site-collapse-custom-collapse\">\n                <Panel\n                  header={panelHeader(el, i, isEditing)}\n                  key={i}\n                  className=\"site-collapse-custom-panel\">\n                  {variant === 'redactor'?(\n                      <TextEditor\n                        onChange={(e) => onSelectTextEditorVebinars(e, 'content', i)}\n                        isEditing={selectors.vebinars}\n                        value={data.vebinars[i].content}\n                        // selector={'vebinars'}\n                        // subSelector={'content'}\n                        // action={setMainContentVebinarsData}\n                        // vebinarIndex={`${i}`}\n                    />\n                  )\n                  :\n                  (\n                    <div>\n                        <TextEditor\n                          value={data.vebinars[i].content}>\n\n                        </TextEditor>\n                        {/* <p>\n                        {data.vebinars[i].content}\n                        </p> */}\n                    </div>\n                  )\n                  }              \n                  {variant != 'redactor'? (\n                    <div>\n                      <VideoPlayer className={'webinars-player'} videoURL={`${url}coorsefiles/${el.video}`}/>\n                    </div>\n                  ) : el.isPaid ? (\n                    <div>\n                      <p>Вебинар будет доступен после покупки курса!</p>\n                      <CoursePaymentCard type=\"segment\" dataIndex={i} />                      \n                    </div>\n                  ) : (\n                    <div>\n                      <VideoPlayer className={'webinars-player'} videoURL={videoPreviyred}/>\n                    </div>\n                  )}\n                </Panel>\n              </Collapse>\n            </Timeline.Item>\n          )})}\n      </Timeline>\n      {isEditing && (\n        <div className=\"webinars-list__add-item\">\n          <AddItemButton action={addItemMainContentVebinarsData} selector=\"vebinars\" />\n        </div>\n      )}\n\n      {data.vebinars.length && type != 2 &&(\n        <div className=\"pay-full-course\">\n          <CoursePaymentCard type=\"full\" variant={variant} />\n        </div>\n      )}\n      {sideMenu.eventRedactor && data.vebinars.length && variant===\"redactor\"&&(\n        <SideMenu selector=\"eventRedactor\" title=\"Основные настройки элемента\">\n          <WebinarsItemSettings />\n        </SideMenu>\n      )}\n    </>\n  );\n}\n\nexport default WebinarsList;\n","/var/www/netlear/html/clientNetlear/src/components/WebinarsList/Webinars3List/WebinarsList.jsx",["663","664","665","666","667","668","669","670","671","672"],"import React,{useState} from 'react';\nimport './WebinarsList.scss';\n\nimport { Collapse, Timeline } from 'antd';\nimport { LeftCircleTwoTone, ClockCircleOutlined } from '@ant-design/icons';\n\nimport testImg from '../../../assets/img/medicineSections/cardiovascular-surgery.jpg';\nimport testImg2 from '../../../assets/img/medicineSections/otolaringology.jpg';\n\nimport VideoPlayer from '../../VideoPlayer/VideoPlayer';\nimport CoursePaymentCard from '../../CoursePaymentCard/CoursePaymentCard.jsx';\nimport TextEditor from '../../TextEditor/TextEditor';\nimport DeleteButton from '../../DeleteButton/DeleteButton';\nimport SettingsButton from '../../SettingsButton/SettingsButton';\nimport ModalWindow from '../../Modal/ModalWindow/ModalWindow';\nimport SideMenu from '../../SideMenu/SideMenu';\nimport WebinarsItemSettings from '../../WebinarsItemSettings/WebinarsItemSettings';\nimport EventUploadImage from '../../EventUploadImage/EventUploadImage';\nimport AddItemButton from '../../AddItemButton/AddItemButton';\n\nimport { mainContentPopoversContent } from '../../../utils/eventPopoverContent/mainContentPopoverContent';\n\nimport { setPaidVideo } from '../../../redux/actions/dev';\nimport {\n  removeMainContentVebinarsItem,\n  setMainContentVebinarsData,\n  addItemMainContentVebinarsData,\n} from '../../../redux/actions/eventRedactor/eventRedactor';\nimport { setSideMenuTrue } from '../../../redux/actions/sideMenu';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { url } from '../../../conf';\n\nconst { Panel } = Collapse;\n\nfunction WebinarsList({ variant, isEditing, type }) {\n  const dispatch = useDispatch();\n  const { data, selectors } = useSelector((state) => state.eventRedactor.mainContent);\n  const sideMenu = useSelector((state) => state.sideMenu);\n  const { backgroundImg } = mainContentPopoversContent;\n  const [videoPreviyred , setVideoPreviured] = useState(\"\")\n\n  React.useEffect(() => {\n    console.log(data.vebinars.length);\n  }, [data.vebinars.length]);\n\n  const onOpenVebinarsItemSettings = (i) => {\n    const selector = 'eventRedactor';\n    dispatch(setSideMenuTrue(selector, i));\n  };\n\n  const onSelectTextEditorVebinars = (e, selector, index) => {\n    const value = e;\n    dispatch(setMainContentVebinarsData(selector, index, value));\n  };\n\n  const panelHeader = (obj, index, isEditing) => {\n    return (\n      <div className=\"webinars-item__header\">\n        <div className=\"webinars-item__left-block\">\n\n          {obj.promoImg && variant != \"redactor\" &&(\n            <img src={`${url}coorsefiles/${obj.promoImg}`} alt=\"img\" />\n          )}\n          {obj.promoImg&& variant == \"redactor\" &&(\n            <img src={obj.promoImg} alt=\"img\" />\n          )}\n\n          {isEditing && (\n            <EventUploadImage\n              index={index}\n              selector={'promoImg'}\n              action={setMainContentVebinarsData}\n              popoverContentType={backgroundImg}\n            />\n          )}\n        </div>\n        <div className=\"webinars-item__right-block\">\n          <div className=\"webinars-item__right-block-header\">\n            <p>\n            {obj.format === 'recording' ? 'В записи' : obj.format === \"В записи\" || obj.format === 'Прямая трансляция'? obj.format : 'Прямая трансляция'}\n            </p>\n            <span\n              className=\"webinars-item__right-block_filled-paid\"\n              style={{ backgroundColor: !data.vebinars[index].isPaid && 'green' }}>\n              {obj.isPaid ? 'Платно' : 'Бесплатно'}\n            </span>\n            <span className=\"webinars-item__right-blockk_type\">\n              {data.vebinars[index].videoDuration} минут\n            </span>\n          </div>\n          <div>\n            {variant === 'redactor'?(\n              <TextEditor\n                onChange={(e) => onSelectTextEditorVebinars(e, 'title', index)}\n                isEditing={selectors.vebinars}\n                value={data.vebinars[index].title}\n              />            \n            )\n            :\n            (\n              <div>\n                <TextEditor\n                  value={data.vebinars[index].title}>\n\n                </TextEditor>               \n                {/* <p>\n                {data.vebinars[index].title}\n                </p> */}\n              </div>\n            )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      <div className='block'>\n        {data.vebinars.length &&\n          data.vebinars.map((el, i) =>{\n            const reader = new FileReader()\n\n            if(el.video && variant == \"redactor\"){\n\n              reader.onload = e =>{\n                setVideoPreviured(e.target.result)\n              }\n          \n              reader.readAsDataURL(el.video) \n            }\n\n          return(\n\n            <div\n              className='block__item'\n              style={{ fontSize: '18px' }}\n            >\n              {\n                el.isPaid ? (\n                  <ClockCircleOutlined style={{ fontSize: '24px' }} />\n                ) : (\n                  <ClockCircleOutlined style={{ fontSize: '24px', color: 'green' }} />         \n                )         \n              }\n              <span className=\"time-line-date\">{data.vebinars[i].date}</span>\n\n              {isEditing && (\n                <>\n                  <SettingsButton onClick={() => onOpenVebinarsItemSettings(i)} />\n                  <DeleteButton index={i} action={removeMainContentVebinarsItem} />\n                </>\n              )}\n              <Collapse\n                bordered={false}\n                defaultActiveKey={['0']}\n                expandIcon={({ isActive }) => (\n                  <LeftCircleTwoTone style={{ fontSize: '32px' }} rotate={isActive ? -90 : 0} />\n                )}\n                className=\"site-collapse-custom-collapse\">\n                <Panel\n                  header={panelHeader(el, i, isEditing)}\n                  key={i}\n                  className=\"site-collapse-custom-panel\">\n                  {variant === 'redactor'?(\n                      <TextEditor\n                        onChange={(e) => onSelectTextEditorVebinars(e, 'content', i)}\n                        isEditing={selectors.vebinars}\n                        value={data.vebinars[i].content}\n                        // selector={'vebinars'}\n                        // subSelector={'content'}\n                        // action={setMainContentVebinarsData}\n                        // vebinarIndex={`${i}`}\n                    />\n                  )\n                  :\n                  (\n                    <div>\n                        <TextEditor\n                          value={data.vebinars[i].content}>\n\n                        </TextEditor>\n                        {/* <p>\n                        {data.vebinars[i].content}\n                        </p> */}\n                    </div>\n                  )\n                  }              \n                  { variant != 'redactor'? (\n                    <div>\n                      <VideoPlayer className={'webinars-player'} videoURL={`${url}coorsefiles/${el.video}`}/>\n                    </div>\n                  ) : el.isPaid ? (\n                    <div>\n                      <p>Вебинар будет доступен после покупки курса!</p>\n                      <CoursePaymentCard type=\"segment\" dataIndex={i} />                      \n                    </div>\n                  ) : (\n                    <div>\n                      <VideoPlayer className={'webinars-player'} videoURL={videoPreviyred}/>\n                    </div>\n                  )}\n                </Panel>\n              </Collapse>\n            </div>\n          )})}\n      </div>\n      {isEditing && (\n        <div className=\"webinars-list__add-item\">\n          <AddItemButton action={addItemMainContentVebinarsData} selector=\"vebinars\" />\n        </div>\n      )}\n\n      {data.vebinars.length && type != 2 &&(\n        <div className=\"pay-full-course\">\n          <CoursePaymentCard type=\"full\" variant={variant} />\n        </div>\n      )}\n      {sideMenu.eventRedactor && data.vebinars.length && (\n        <SideMenu selector=\"eventRedactor\" title=\"Основные настройки элемента\">\n          <WebinarsItemSettings />\n        </SideMenu>\n      )}\n    </>\n  );\n}\n\nexport default WebinarsList;\n","/var/www/netlear/html/clientNetlear/src/components/EventDeployPanel/EventDeployPanel.jsx",["673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688"],"import React from 'react';\nimport './EventDeployPanel.scss';\n\nimport { Progress, Upload } from 'antd';\nimport { CheckCircleFilled, ClockCircleFilled } from '@ant-design/icons';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setMaunContentVebinarsSettings } from '../../redux/actions/eventRedactor/eventRedactor';\nimport {\n  setVideosFromRedactor,\n  setVideoUploadingProcess,\n  setVideoURI,\n  setVideoTranscodingStatus,\n  setVideoURL,\n  fetchPostEventData,\n  fetchPostEventPictures,\n} from '../../redux/actions/UploadingCourse/UploadingCourse';\n\nimport {\n  testUploadVimeoVids,\n  testCheckTranscodingVimeoVids,\n  testGetVimeoVidsURL,\n} from '../../utils/testVimeo';\n\nfunction EventDeployPanel() {\n  const eventData = useSelector((state) => state.eventRedactor);\n  const vebinarsData = useSelector((state) => state.eventRedactor.mainContent.data.vebinars);\n  const uploadingData = useSelector((state) => state.UploadingCourse);\n  const [videoURLFlag, setVideoURLFlag] = React.useState(true);\n  // const [checkTranscodingFlag, setCheckTranscodingFlag] = React.useState(true);\n\n  const dispatch = useDispatch();\n\n  const dispatchUploadingVideoProcess = (percent, index) => {\n    dispatch(setVideoUploadingProcess(percent, index));\n  };\n  // const dispatchVideoURI = (uri, index) => {\n  //   dispatch(setVideoURI(uri, index));\n  // };\n\n  // const dispatchVideoTranscodingStatus = (status, index) => {\n  //   dispatch(setVideoTranscodingStatus(status, index));\n  // };\n\n  // const dispatchVideoURL = (url, index) => {\n  //   dispatch(setVideoURL(url, index));\n  // };\n\n  // React.useEffect(() => {\n  //   testOnLoad();\n  // }, []);\n\n  // React.useEffect(() => {\n  //   uploadingData.videoList.forEach((el, i) => {\n  //     if (el.videoURI && !el.videoURL && videoURLFlag) {\n  //       setVideoURLFlag(false);\n  //       testGetVimeoVidsURL(el.videoURI, dispatchVideoURL, i);\n  //     }\n  //   });\n  // }, [uploadingData.videoList, videoURLFlag]);\n\n  // React.useEffect(() => {\n  //   if (uploadingData.videoList.find((el) => !el.videoURL)) {\n  //     setTimeout(() => {\n  //       setVideoURLFlag(true);\n  //     }, 3000);\n  //   } else if (uploadingData.videoList.every((el) => el.videoURL)) {\n  //     uploadFullCourseData();\n  //   }\n  // }, [!videoURLFlag]);\n\n  // React.useEffect(() => {\n  //   if (uploadingData.postedCourseId) {\n  //     uploadFullCourseImgs();\n  //   }\n  // }, [uploadingData.postedCourseId]);\n\n  // React.useEffect(() => {\n  //   if (uploadingData.videoList.find((el) => el.transcodingStatus !== 'complete')) {\n  //     setTimeout(() => {\n  //       // console.log('flag:', checkTranscodingFlag);\n  //       setCheckTranscodingFlag(true);\n  //     }, 5000);\n  //   }\n  // }, [!checkTranscodingFlag]);\n\n  // const testOnLoad = () => {\n  //   uploadVideoFiles(uploadingData.videoList);\n  // };\n\n  // const uploadVideoFiles = async (videoArray) => {\n  //   await videoArray.forEach(async (el, i) => {\n  //     testUploadVimeoVids(\n  //       el.video,\n  //       `${el.videoName}`,\n  //       `${el.videoDescription}`,\n  //       dispatchUploadingVideoProcess,\n  //       dispatchVideoURI,\n  //       i,\n  //     );\n  //   });\n  // };\n\n  // const checkTranscodingVideoStatus = (videoURI) => {\n  //   testCheckTranscodingVimeoVids(videoURI, setVideoTranscodingStatus);\n  // };\n\n  const testAppendVideo = async (e) => {\n    const video = e;\n    console.log(video.type, video.name);\n    const dataObj = {\n      isPaid: true,\n      format: 'recording',\n      date: '',\n      cost: 0,\n      currency: 'RUB',\n      promoCode: '',\n      personalDiscount: 0,\n      video: video,\n      videoName: video.name,\n      videoDescription: video.type,\n    };\n    await vebinarsData.forEach((el, i) => dispatch(setMaunContentVebinarsSettings(dataObj, i)));\n  };\n\n  const uploadFullCourseData = async () => {\n    //Замена всех картинок в курсе на пустую строку (для их дальнейшей загрузки через формдату)\n    //замена всех полей video на уже сформированную ссылку из UploadingCourse.videoList\n    const videoList = uploadingData.videoList;\n    const fullCourseData = {\n      banner: { ...eventData.banner.data, backgroundImg: '' },\n      mainContent: {\n        ...eventData.mainContent.data,\n        vebinars: eventData.mainContent.data.vebinars.map((el, i) => {\n          return {\n            ...el,\n            promoImg: '',\n            video: videoList[i] ? videoList[i].videoURL : false,\n          };\n        }),\n      },\n      aboutSpeaker: {\n        ...eventData.aboutSpeaker.data,\n        img: '',\n        video: videoList[videoList.length - 1].videoURL,\n      },\n    };\n    await dispatch(fetchPostEventData(fullCourseData));\n  };\n\n  const uploadFullCourseImgs = async () => {\n    const imgKeys = Object.keys(uploadingData.courseFiles);\n    const imgValues = Object.values(uploadingData.courseFiles);\n    console.log(imgKeys, imgValues);\n    await imgKeys.map(async (el, i) => {\n      if (el === 'webinarsImg') {\n        await imgValues[i].map(async (el2, i) => {\n          let bodyFormData = new FormData();\n          bodyFormData.append('webinarImg', el2.file, el2.index);\n          for (var value of bodyFormData.values()) {\n            await dispatch(fetchPostEventPictures(uploadingData.postedCourseId, bodyFormData));\n          }\n          return;\n        });\n      } else {\n        let bodyFormData = new FormData();\n        bodyFormData.append(`${el}`, imgValues[i]);\n        for (var value of bodyFormData.values()) {\n          await dispatch(fetchPostEventPictures(uploadingData.postedCourseId, bodyFormData));\n        }\n        return;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"deploy-panel\">\n        <div className=\"deploy-panel__title\">\n          <h2>Эта панель отображает процесс загрузки Вашего курса, поэтапно</h2>\n          <h3>\n            Пожалуйста, не выключайте компьютер и не закрывайте страницу до полного завершения всех\n            процессов\n          </h3>\n          {/* <button onClick={uploadVideoFiles}>test upload videos</button> */}\n          {/* <button onClick={checkTranscodingVideoStatus}>check transcoding video status</button> */}\n          {/* <button onClick={getVideoURL}> get video URL</button> */}\n          {/* <Upload action={testAppendVideo} listType=\"video\" maxCount={1}>\n            Видео\n          </Upload> */}\n          {/* <button\n            onClick={() =>\n              dispatch(setVideosFromRedactor(vebinarsData, eventData.aboutSpeaker.data))\n            }>\n            {' '}\n            pull vids\n          </button> */}\n          {/* <button onClick={testOnLoad}>test on load</button> */}\n          {/* <button onClick={uploadFullCourseData}> upload full course data</button> */}\n          {/* <button onClick={uploadFullCourseImgs}> upload full course imgs</button> */}\n        </div>\n        <div className=\"deploy-panel__content\">\n          <p>Начинаю получение ключей доступа и процесс загрузки данных...</p>\n          {uploadingData.videoList.length && (\n            <div className=\"deploy-content\">\n              <h4 className=\"deploy-content__title\">Загружаю видео-файлы на хостинг</h4>\n              {uploadingData.videoList.map((el, i) => {\n                return (\n                  <div className=\"deploy-content__item\" key={i}>\n                    <p>{el.videoName}</p>\n                    <Progress percent={el.uploadingProcess} />\n                    {el.videoURI ? (\n                      <div className=\"deploy-content__item_block\">\n                        <p>Ключ доступа получен</p>\n                        <CheckCircleFilled style={{ color: '#52c41a' }} />\n                      </div>\n                    ) : el.uploadingProcess === 100 ? (\n                      <div className=\"deploy-content__item_block\">\n                        <p>Получаю ключ доступа</p>\n                        <ClockCircleFilled style={{ color: '#0080ff' }} />\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                    {el.videoURL ? (\n                      <div className=\"deploy-content__item_block\">\n                        <p>Ссылка на видео получена</p>\n                        <CheckCircleFilled style={{ color: '#52c41a' }} />\n                      </div>\n                    ) : el.uploadingProcess === 100 ? (\n                      <div className=\"deploy-content__item_block\">\n                        <span>Получаю ссылку на перекодирование</span>\n                        <ClockCircleFilled style={{ color: '#0080ff' }} />\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"deploy-panel__content\">\n          {uploadingData.videoList.every((el) => el.videoURL) && (\n            <h4 className=\"deploy-content__title\">Загружаю данные о курсе на сервер</h4>\n          )}\n          <div className=\"deploy-content\">\n            <div className=\"deploy-content__item\">\n              {uploadingData.postedCourseId ? (\n                <div className=\"deploy-content__item_block\">\n                  <p>JSON данные загружены</p>\n                  <CheckCircleFilled style={{ color: '#52c41a' }} />\n                </div>\n              ) : uploadingData.videoList.every((el) => el.videoURL) ? (\n                <div className=\"deploy-content__item_block\">\n                  <p>Загружаю JSON данные</p>\n                  <ClockCircleFilled style={{ color: '#0080ff' }} />\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n            <div className=\"deploy-content__item\">\n              {uploadingData.isImagesUploaded ? (\n                <div className=\"deploy-content__item_block\">\n                  <p>Фото материалы загружены</p>\n                  <CheckCircleFilled style={{ color: '#52c41a' }} />\n                </div>\n              ) : uploadingData.postedCourseId ? (\n                <div className=\"deploy-content__item_block\">\n                  <p>Загружаю фото материалы</p>\n                  <ClockCircleFilled style={{ color: '#0080ff' }} />\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"deploy-overlay\"></div>\n    </>\n  );\n}\n\nexport default EventDeployPanel;\n",{"ruleId":"689","severity":1,"message":"690","line":1,"column":17,"nodeType":"691","messageId":"692","endLine":1,"endColumn":30},{"ruleId":"689","severity":1,"message":"693","line":29,"column":36,"nodeType":"691","messageId":"692","endLine":29,"endColumn":43},{"ruleId":"689","severity":1,"message":"694","line":36,"column":9,"nodeType":"691","messageId":"692","endLine":36,"endColumn":17},{"ruleId":"689","severity":1,"message":"695","line":37,"column":10,"nodeType":"691","messageId":"692","endLine":37,"endColumn":12},{"ruleId":"696","severity":1,"message":"697","line":150,"column":5,"nodeType":"698","endLine":150,"endColumn":14,"suggestions":"699"},{"ruleId":"689","severity":1,"message":"700","line":14,"column":56,"nodeType":"691","messageId":"692","endLine":14,"endColumn":62},{"ruleId":"689","severity":1,"message":"701","line":17,"column":3,"nodeType":"691","messageId":"692","endLine":17,"endColumn":15},{"ruleId":"689","severity":1,"message":"702","line":23,"column":8,"nodeType":"691","messageId":"692","endLine":23,"endColumn":13},{"ruleId":"703","severity":1,"message":"704","line":44,"column":32,"nodeType":"705","messageId":"706","endLine":44,"endColumn":34},{"ruleId":"703","severity":1,"message":"704","line":50,"column":32,"nodeType":"705","messageId":"706","endLine":50,"endColumn":34},{"ruleId":"703","severity":1,"message":"704","line":53,"column":32,"nodeType":"705","messageId":"706","endLine":53,"endColumn":34},{"ruleId":"703","severity":1,"message":"704","line":56,"column":32,"nodeType":"705","messageId":"706","endLine":56,"endColumn":34},{"ruleId":"689","severity":1,"message":"707","line":67,"column":9,"nodeType":"691","messageId":"692","endLine":67,"endColumn":27},{"ruleId":"689","severity":1,"message":"708","line":91,"column":9,"nodeType":"691","messageId":"692","endLine":91,"endColumn":21},{"ruleId":"689","severity":1,"message":"709","line":1,"column":17,"nodeType":"691","messageId":"692","endLine":1,"endColumn":27},{"ruleId":"689","severity":1,"message":"710","line":1,"column":29,"nodeType":"691","messageId":"692","endLine":1,"endColumn":38},{"ruleId":"696","severity":1,"message":"711","line":22,"column":6,"nodeType":"698","endLine":22,"endColumn":14,"suggestions":"712"},{"ruleId":"689","severity":1,"message":"713","line":127,"column":9,"nodeType":"691","messageId":"692","endLine":127,"endColumn":33},{"ruleId":"689","severity":1,"message":"709","line":1,"column":17,"nodeType":"691","messageId":"692","endLine":1,"endColumn":27},{"ruleId":"689","severity":1,"message":"714","line":7,"column":10,"nodeType":"691","messageId":"692","endLine":7,"endColumn":12},{"ruleId":"703","severity":1,"message":"704","line":74,"column":15,"nodeType":"705","messageId":"706","endLine":74,"endColumn":17},{"ruleId":"703","severity":1,"message":"704","line":74,"column":108,"nodeType":"705","messageId":"706","endLine":74,"endColumn":110},{"ruleId":"703","severity":1,"message":"704","line":97,"column":16,"nodeType":"705","messageId":"706","endLine":97,"endColumn":18},{"ruleId":"696","severity":1,"message":"715","line":106,"column":5,"nodeType":"698","endLine":106,"endColumn":17,"suggestions":"716"},{"ruleId":"703","severity":1,"message":"704","line":139,"column":17,"nodeType":"705","messageId":"706","endLine":139,"endColumn":19},{"ruleId":"717","severity":1,"message":"718","line":364,"column":11,"nodeType":"719","endLine":364,"endColumn":67},{"ruleId":"703","severity":1,"message":"704","line":378,"column":38,"nodeType":"705","messageId":"706","endLine":378,"endColumn":40},{"ruleId":"703","severity":1,"message":"704","line":379,"column":33,"nodeType":"705","messageId":"706","endLine":379,"endColumn":35},{"ruleId":"703","severity":1,"message":"704","line":405,"column":42,"nodeType":"705","messageId":"706","endLine":405,"endColumn":44},{"ruleId":"689","severity":1,"message":"720","line":4,"column":8,"nodeType":"691","messageId":"692","endLine":4,"endColumn":15},{"ruleId":"689","severity":1,"message":"721","line":5,"column":8,"nodeType":"691","messageId":"692","endLine":5,"endColumn":18},{"ruleId":"689","severity":1,"message":"722","line":12,"column":3,"nodeType":"691","messageId":"692","endLine":12,"endColumn":16},{"ruleId":"689","severity":1,"message":"723","line":13,"column":3,"nodeType":"691","messageId":"692","endLine":13,"endColumn":11},{"ruleId":"689","severity":1,"message":"724","line":17,"column":10,"nodeType":"691","messageId":"692","endLine":17,"endColumn":23},{"ruleId":"689","severity":1,"message":"725","line":18,"column":10,"nodeType":"691","messageId":"692","endLine":18,"endColumn":15},{"ruleId":"689","severity":1,"message":"726","line":18,"column":17,"nodeType":"691","messageId":"692","endLine":18,"endColumn":23},{"ruleId":"689","severity":1,"message":"727","line":20,"column":10,"nodeType":"691","messageId":"692","endLine":20,"endColumn":16},{"ruleId":"689","severity":1,"message":"728","line":20,"column":18,"nodeType":"691","messageId":"692","endLine":20,"endColumn":29},{"ruleId":"689","severity":1,"message":"729","line":35,"column":7,"nodeType":"691","messageId":"692","endLine":35,"endColumn":13},{"ruleId":"689","severity":1,"message":"730","line":43,"column":7,"nodeType":"691","messageId":"692","endLine":43,"endColumn":17},{"ruleId":"689","severity":1,"message":"731","line":52,"column":9,"nodeType":"691","messageId":"692","endLine":52,"endColumn":31},{"ruleId":"689","severity":1,"message":"732","line":57,"column":9,"nodeType":"691","messageId":"692","endLine":57,"endColumn":30},{"ruleId":"689","severity":1,"message":"733","line":66,"column":9,"nodeType":"691","messageId":"692","endLine":66,"endColumn":18},{"ruleId":"734","severity":1,"message":"735","line":12,"column":41,"nodeType":"736","messageId":"737","endLine":12,"endColumn":43},{"ruleId":"703","severity":1,"message":"704","line":21,"column":13,"nodeType":"705","messageId":"706","endLine":21,"endColumn":15},{"ruleId":"738","severity":1,"message":"739","line":35,"column":7,"nodeType":"740","messageId":"741","endLine":35,"endColumn":28},{"ruleId":"738","severity":1,"message":"739","line":51,"column":7,"nodeType":"740","messageId":"741","endLine":51,"endColumn":28},{"ruleId":"703","severity":1,"message":"704","line":197,"column":13,"nodeType":"705","messageId":"706","endLine":197,"endColumn":15},{"ruleId":"703","severity":1,"message":"704","line":229,"column":13,"nodeType":"705","messageId":"706","endLine":229,"endColumn":15},{"ruleId":"734","severity":1,"message":"742","line":13,"column":14,"nodeType":"743","messageId":"744","endLine":13,"endColumn":21},{"ruleId":"689","severity":1,"message":"745","line":23,"column":10,"nodeType":"691","messageId":"692","endLine":23,"endColumn":20},{"ruleId":"689","severity":1,"message":"710","line":1,"column":27,"nodeType":"691","messageId":"692","endLine":1,"endColumn":36},{"ruleId":"689","severity":1,"message":"746","line":2,"column":10,"nodeType":"691","messageId":"692","endLine":2,"endColumn":20},{"ruleId":"689","severity":1,"message":"747","line":19,"column":3,"nodeType":"691","messageId":"692","endLine":19,"endColumn":21},{"ruleId":"703","severity":1,"message":"704","line":43,"column":14,"nodeType":"705","messageId":"706","endLine":43,"endColumn":16},{"ruleId":"703","severity":1,"message":"748","line":43,"column":26,"nodeType":"705","messageId":"706","endLine":43,"endColumn":28},{"ruleId":"703","severity":1,"message":"704","line":55,"column":16,"nodeType":"705","messageId":"706","endLine":55,"endColumn":18},{"ruleId":"703","severity":1,"message":"704","line":69,"column":20,"nodeType":"705","messageId":"706","endLine":69,"endColumn":22},{"ruleId":"696","severity":1,"message":"749","line":187,"column":5,"nodeType":"698","endLine":187,"endColumn":7,"suggestions":"750"},{"ruleId":"703","severity":1,"message":"704","line":202,"column":51,"nodeType":"705","messageId":"706","endLine":202,"endColumn":53},{"ruleId":"696","severity":1,"message":"751","line":277,"column":5,"nodeType":"698","endLine":277,"endColumn":13,"suggestions":"752"},{"ruleId":"753","severity":1,"message":"754","line":279,"column":22,"nodeType":"755","messageId":"756","endLine":279,"endColumn":24},{"ruleId":"703","severity":1,"message":"748","line":279,"column":32,"nodeType":"705","messageId":"706","endLine":279,"endColumn":34},{"ruleId":"753","severity":1,"message":"754","line":279,"column":45,"nodeType":"755","messageId":"756","endLine":279,"endColumn":47},{"ruleId":"753","severity":1,"message":"754","line":279,"column":71,"nodeType":"755","messageId":"756","endLine":279,"endColumn":73},{"ruleId":"703","severity":1,"message":"748","line":279,"column":81,"nodeType":"705","messageId":"706","endLine":279,"endColumn":83},{"ruleId":"753","severity":1,"message":"754","line":279,"column":94,"nodeType":"755","messageId":"756","endLine":279,"endColumn":96},{"ruleId":"703","severity":1,"message":"704","line":293,"column":24,"nodeType":"705","messageId":"706","endLine":293,"endColumn":26},{"ruleId":"753","severity":1,"message":"754","line":293,"column":28,"nodeType":"755","messageId":"756","endLine":293,"endColumn":30},{"ruleId":"703","severity":1,"message":"748","line":293,"column":38,"nodeType":"705","messageId":"706","endLine":293,"endColumn":40},{"ruleId":"753","severity":1,"message":"754","line":293,"column":51,"nodeType":"755","messageId":"756","endLine":293,"endColumn":53},{"ruleId":"703","severity":1,"message":"704","line":307,"column":24,"nodeType":"705","messageId":"706","endLine":307,"endColumn":26},{"ruleId":"753","severity":1,"message":"754","line":307,"column":28,"nodeType":"755","messageId":"756","endLine":307,"endColumn":30},{"ruleId":"703","severity":1,"message":"748","line":307,"column":38,"nodeType":"705","messageId":"706","endLine":307,"endColumn":40},{"ruleId":"753","severity":1,"message":"754","line":307,"column":51,"nodeType":"755","messageId":"756","endLine":307,"endColumn":53},{"ruleId":"717","severity":1,"message":"718","line":329,"column":13,"nodeType":"719","endLine":329,"endColumn":187},{"ruleId":"717","severity":1,"message":"718","line":332,"column":13,"nodeType":"719","endLine":332,"endColumn":187},{"ruleId":"717","severity":1,"message":"718","line":335,"column":13,"nodeType":"719","endLine":335,"endColumn":187},{"ruleId":"689","severity":1,"message":"710","line":1,"column":27,"nodeType":"691","messageId":"692","endLine":1,"endColumn":36},{"ruleId":"689","severity":1,"message":"746","line":4,"column":10,"nodeType":"691","messageId":"692","endLine":4,"endColumn":20},{"ruleId":"689","severity":1,"message":"726","line":3,"column":8,"nodeType":"691","messageId":"692","endLine":3,"endColumn":14},{"ruleId":"689","severity":1,"message":"746","line":5,"column":10,"nodeType":"691","messageId":"692","endLine":5,"endColumn":20},{"ruleId":"689","severity":1,"message":"757","line":5,"column":22,"nodeType":"691","messageId":"692","endLine":5,"endColumn":26},{"ruleId":"689","severity":1,"message":"758","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":15},{"ruleId":"689","severity":1,"message":"759","line":9,"column":10,"nodeType":"691","messageId":"692","endLine":9,"endColumn":18},{"ruleId":"689","severity":1,"message":"760","line":13,"column":10,"nodeType":"691","messageId":"692","endLine":13,"endColumn":24},{"ruleId":"689","severity":1,"message":"694","line":19,"column":9,"nodeType":"691","messageId":"692","endLine":19,"endColumn":17},{"ruleId":"689","severity":1,"message":"761","line":23,"column":9,"nodeType":"691","messageId":"692","endLine":23,"endColumn":25},{"ruleId":"689","severity":1,"message":"762","line":15,"column":3,"nodeType":"691","messageId":"692","endLine":15,"endColumn":20},{"ruleId":"689","severity":1,"message":"763","line":29,"column":9,"nodeType":"691","messageId":"692","endLine":29,"endColumn":12},{"ruleId":"696","severity":1,"message":"764","line":36,"column":6,"nodeType":"698","endLine":36,"endColumn":30,"suggestions":"765"},{"ruleId":"766","severity":1,"message":"767","line":118,"column":43,"nodeType":"719","endLine":118,"endColumn":55},{"ruleId":"696","severity":1,"message":"768","line":28,"column":6,"nodeType":"698","endLine":28,"endColumn":30,"suggestions":"769"},{"ruleId":"689","severity":1,"message":"770","line":18,"column":11,"nodeType":"691","messageId":"692","endLine":18,"endColumn":20},{"ruleId":"696","severity":1,"message":"771","line":25,"column":6,"nodeType":"698","endLine":25,"endColumn":8,"suggestions":"772"},{"ruleId":"689","severity":1,"message":"770","line":18,"column":11,"nodeType":"691","messageId":"692","endLine":18,"endColumn":20},{"ruleId":"696","severity":1,"message":"771","line":25,"column":6,"nodeType":"698","endLine":25,"endColumn":8,"suggestions":"773"},{"ruleId":"696","severity":1,"message":"774","line":22,"column":6,"nodeType":"698","endLine":22,"endColumn":8,"suggestions":"775"},{"ruleId":"689","severity":1,"message":"776","line":1,"column":17,"nodeType":"691","messageId":"692","endLine":1,"endColumn":25},{"ruleId":"689","severity":1,"message":"710","line":1,"column":27,"nodeType":"691","messageId":"692","endLine":1,"endColumn":36},{"ruleId":"689","severity":1,"message":"777","line":10,"column":8,"nodeType":"691","messageId":"692","endLine":10,"endColumn":15},{"ruleId":"696","severity":1,"message":"711","line":36,"column":6,"nodeType":"698","endLine":36,"endColumn":14,"suggestions":"778"},{"ruleId":"689","severity":1,"message":"779","line":6,"column":10,"nodeType":"691","messageId":"692","endLine":6,"endColumn":15},{"ruleId":"689","severity":1,"message":"780","line":6,"column":17,"nodeType":"691","messageId":"692","endLine":6,"endColumn":22},{"ruleId":"689","severity":1,"message":"781","line":8,"column":31,"nodeType":"691","messageId":"692","endLine":8,"endColumn":38},{"ruleId":"689","severity":1,"message":"782","line":12,"column":10,"nodeType":"691","messageId":"692","endLine":12,"endColumn":20},{"ruleId":"689","severity":1,"message":"783","line":13,"column":23,"nodeType":"691","messageId":"692","endLine":13,"endColumn":35},{"ruleId":"696","severity":1,"message":"711","line":60,"column":6,"nodeType":"698","endLine":60,"endColumn":13,"suggestions":"784"},{"ruleId":"785","severity":1,"message":"786","line":5,"column":1,"nodeType":"787","endLine":11,"endColumn":3},{"ruleId":"689","severity":1,"message":"788","line":3,"column":10,"nodeType":"691","messageId":"692","endLine":3,"endColumn":18},{"ruleId":"689","severity":1,"message":"780","line":3,"column":20,"nodeType":"691","messageId":"692","endLine":3,"endColumn":25},{"ruleId":"689","severity":1,"message":"779","line":3,"column":27,"nodeType":"691","messageId":"692","endLine":3,"endColumn":32},{"ruleId":"689","severity":1,"message":"789","line":5,"column":23,"nodeType":"691","messageId":"692","endLine":5,"endColumn":36},{"ruleId":"689","severity":1,"message":"790","line":3,"column":10,"nodeType":"691","messageId":"692","endLine":3,"endColumn":21},{"ruleId":"689","severity":1,"message":"791","line":3,"column":23,"nodeType":"691","messageId":"692","endLine":3,"endColumn":34},{"ruleId":"689","severity":1,"message":"726","line":4,"column":17,"nodeType":"691","messageId":"692","endLine":4,"endColumn":23},{"ruleId":"689","severity":1,"message":"792","line":20,"column":10,"nodeType":"691","messageId":"692","endLine":20,"endColumn":29},{"ruleId":"689","severity":1,"message":"776","line":1,"column":25,"nodeType":"691","messageId":"692","endLine":1,"endColumn":33},{"ruleId":"689","severity":1,"message":"793","line":12,"column":8,"nodeType":"691","messageId":"692","endLine":12,"endColumn":18},{"ruleId":"689","severity":1,"message":"710","line":1,"column":17,"nodeType":"691","messageId":"692","endLine":1,"endColumn":26},{"ruleId":"689","severity":1,"message":"776","line":1,"column":28,"nodeType":"691","messageId":"692","endLine":1,"endColumn":36},{"ruleId":"689","severity":1,"message":"794","line":5,"column":8,"nodeType":"691","messageId":"692","endLine":5,"endColumn":24},{"ruleId":"689","severity":1,"message":"790","line":7,"column":10,"nodeType":"691","messageId":"692","endLine":7,"endColumn":21},{"ruleId":"689","severity":1,"message":"795","line":8,"column":10,"nodeType":"691","messageId":"692","endLine":8,"endColumn":31},{"ruleId":"689","severity":1,"message":"796","line":9,"column":10,"nodeType":"691","messageId":"692","endLine":9,"endColumn":15},{"ruleId":"689","severity":1,"message":"797","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":18},{"ruleId":"689","severity":1,"message":"798","line":8,"column":8,"nodeType":"691","messageId":"692","endLine":8,"endColumn":20},{"ruleId":"689","severity":1,"message":"799","line":9,"column":8,"nodeType":"691","messageId":"692","endLine":9,"endColumn":21},{"ruleId":"689","severity":1,"message":"800","line":17,"column":3,"nodeType":"691","messageId":"692","endLine":17,"endColumn":24},{"ruleId":"689","severity":1,"message":"801","line":18,"column":3,"nodeType":"691","messageId":"692","endLine":18,"endColumn":25},{"ruleId":"689","severity":1,"message":"802","line":5,"column":10,"nodeType":"691","messageId":"692","endLine":5,"endColumn":23},{"ruleId":"689","severity":1,"message":"797","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":18},{"ruleId":"689","severity":1,"message":"803","line":9,"column":8,"nodeType":"691","messageId":"692","endLine":9,"endColumn":19},{"ruleId":"689","severity":1,"message":"804","line":24,"column":9,"nodeType":"691","messageId":"692","endLine":24,"endColumn":16},{"ruleId":"689","severity":1,"message":"805","line":47,"column":9,"nodeType":"691","messageId":"692","endLine":47,"endColumn":21},{"ruleId":"689","severity":1,"message":"798","line":9,"column":8,"nodeType":"691","messageId":"692","endLine":9,"endColumn":20},{"ruleId":"689","severity":1,"message":"799","line":10,"column":8,"nodeType":"691","messageId":"692","endLine":10,"endColumn":21},{"ruleId":"689","severity":1,"message":"800","line":18,"column":3,"nodeType":"691","messageId":"692","endLine":18,"endColumn":24},{"ruleId":"689","severity":1,"message":"801","line":19,"column":3,"nodeType":"691","messageId":"692","endLine":19,"endColumn":25},{"ruleId":"689","severity":1,"message":"806","line":22,"column":8,"nodeType":"691","messageId":"692","endLine":22,"endColumn":25},{"ruleId":"696","severity":1,"message":"807","line":85,"column":5,"nodeType":"698","endLine":85,"endColumn":7,"suggestions":"808"},{"ruleId":"689","severity":1,"message":"797","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":18},{"ruleId":"703","severity":1,"message":"704","line":74,"column":22,"nodeType":"705","messageId":"706","endLine":74,"endColumn":24},{"ruleId":"689","severity":1,"message":"798","line":8,"column":8,"nodeType":"691","messageId":"692","endLine":8,"endColumn":20},{"ruleId":"689","severity":1,"message":"799","line":9,"column":8,"nodeType":"691","messageId":"692","endLine":9,"endColumn":21},{"ruleId":"689","severity":1,"message":"800","line":17,"column":3,"nodeType":"691","messageId":"692","endLine":17,"endColumn":24},{"ruleId":"689","severity":1,"message":"801","line":18,"column":3,"nodeType":"691","messageId":"692","endLine":18,"endColumn":25},{"ruleId":"703","severity":1,"message":"704","line":30,"column":14,"nodeType":"705","messageId":"706","endLine":30,"endColumn":16},{"ruleId":"703","severity":1,"message":"704","line":68,"column":22,"nodeType":"705","messageId":"706","endLine":68,"endColumn":24},{"ruleId":"703","severity":1,"message":"704","line":94,"column":24,"nodeType":"705","messageId":"706","endLine":94,"endColumn":26},{"ruleId":"703","severity":1,"message":"704","line":117,"column":24,"nodeType":"705","messageId":"706","endLine":117,"endColumn":26},{"ruleId":"785","severity":1,"message":"786","line":5,"column":1,"nodeType":"787","endLine":10,"endColumn":3},{"ruleId":"689","severity":1,"message":"792","line":3,"column":10,"nodeType":"691","messageId":"692","endLine":3,"endColumn":29},{"ruleId":"785","severity":1,"message":"786","line":7,"column":1,"nodeType":"787","endLine":9,"endColumn":3},{"ruleId":"689","severity":1,"message":"809","line":2,"column":5,"nodeType":"691","messageId":"692","endLine":2,"endColumn":16},{"ruleId":"689","severity":1,"message":"810","line":11,"column":5,"nodeType":"691","messageId":"692","endLine":11,"endColumn":12},{"ruleId":"689","severity":1,"message":"811","line":79,"column":9,"nodeType":"691","messageId":"692","endLine":79,"endColumn":12},{"ruleId":"689","severity":1,"message":"812","line":1,"column":10,"nodeType":"691","messageId":"692","endLine":1,"endColumn":28},{"ruleId":"689","severity":1,"message":"813","line":2,"column":8,"nodeType":"691","messageId":"692","endLine":2,"endColumn":18},{"ruleId":"689","severity":1,"message":"812","line":8,"column":10,"nodeType":"691","messageId":"692","endLine":8,"endColumn":28},{"ruleId":"689","severity":1,"message":"814","line":11,"column":9,"nodeType":"691","messageId":"692","endLine":11,"endColumn":20},{"ruleId":"689","severity":1,"message":"811","line":19,"column":11,"nodeType":"691","messageId":"692","endLine":19,"endColumn":14},{"ruleId":"689","severity":1,"message":"812","line":8,"column":10,"nodeType":"691","messageId":"692","endLine":8,"endColumn":28},{"ruleId":"703","severity":1,"message":"704","line":25,"column":14,"nodeType":"705","messageId":"706","endLine":25,"endColumn":16},{"ruleId":"696","severity":1,"message":"815","line":57,"column":6,"nodeType":"698","endLine":57,"endColumn":12,"suggestions":"816"},{"ruleId":"689","severity":1,"message":"817","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":15},{"ruleId":"689","severity":1,"message":"818","line":8,"column":8,"nodeType":"691","messageId":"692","endLine":8,"endColumn":16},{"ruleId":"689","severity":1,"message":"819","line":15,"column":8,"nodeType":"691","messageId":"692","endLine":15,"endColumn":19},{"ruleId":"689","severity":1,"message":"820","line":23,"column":10,"nodeType":"691","messageId":"692","endLine":23,"endColumn":22},{"ruleId":"689","severity":1,"message":"821","line":37,"column":11,"nodeType":"691","messageId":"692","endLine":37,"endColumn":22},{"ruleId":"703","severity":1,"message":"748","line":62,"column":36,"nodeType":"705","messageId":"706","endLine":62,"endColumn":38},{"ruleId":"703","severity":1,"message":"704","line":65,"column":35,"nodeType":"705","messageId":"706","endLine":65,"endColumn":37},{"ruleId":"703","severity":1,"message":"704","line":126,"column":36,"nodeType":"705","messageId":"706","endLine":126,"endColumn":38},{"ruleId":"703","severity":1,"message":"748","line":189,"column":28,"nodeType":"705","messageId":"706","endLine":189,"endColumn":30},{"ruleId":"703","severity":1,"message":"748","line":214,"column":37,"nodeType":"705","messageId":"706","endLine":214,"endColumn":39},{"ruleId":"689","severity":1,"message":"776","line":1,"column":25,"nodeType":"691","messageId":"692","endLine":1,"endColumn":33},{"ruleId":"689","severity":1,"message":"822","line":13,"column":9,"nodeType":"691","messageId":"692","endLine":13,"endColumn":19},{"ruleId":"689","severity":1,"message":"823","line":7,"column":3,"nodeType":"691","messageId":"692","endLine":7,"endColumn":8},{"ruleId":"689","severity":1,"message":"824","line":8,"column":3,"nodeType":"691","messageId":"692","endLine":8,"endColumn":8},{"ruleId":"689","severity":1,"message":"825","line":9,"column":3,"nodeType":"691","messageId":"692","endLine":9,"endColumn":9},{"ruleId":"689","severity":1,"message":"826","line":10,"column":3,"nodeType":"691","messageId":"692","endLine":10,"endColumn":13},{"ruleId":"689","severity":1,"message":"827","line":11,"column":3,"nodeType":"691","messageId":"692","endLine":11,"endColumn":13},{"ruleId":"689","severity":1,"message":"828","line":15,"column":10,"nodeType":"691","messageId":"692","endLine":15,"endColumn":24},{"ruleId":"689","severity":1,"message":"829","line":24,"column":11,"nodeType":"691","messageId":"692","endLine":24,"endColumn":16},{"ruleId":"689","severity":1,"message":"830","line":24,"column":18,"nodeType":"691","messageId":"692","endLine":24,"endColumn":31},{"ruleId":"689","severity":1,"message":"790","line":4,"column":10,"nodeType":"691","messageId":"692","endLine":4,"endColumn":21},{"ruleId":"689","severity":1,"message":"710","line":1,"column":17,"nodeType":"691","messageId":"692","endLine":1,"endColumn":26},{"ruleId":"689","severity":1,"message":"823","line":7,"column":3,"nodeType":"691","messageId":"692","endLine":7,"endColumn":8},{"ruleId":"689","severity":1,"message":"826","line":10,"column":3,"nodeType":"691","messageId":"692","endLine":10,"endColumn":13},{"ruleId":"689","severity":1,"message":"792","line":25,"column":10,"nodeType":"691","messageId":"692","endLine":25,"endColumn":29},{"ruleId":"689","severity":1,"message":"830","line":29,"column":18,"nodeType":"691","messageId":"692","endLine":29,"endColumn":31},{"ruleId":"689","severity":1,"message":"792","line":3,"column":10,"nodeType":"691","messageId":"692","endLine":3,"endColumn":29},{"ruleId":"785","severity":1,"message":"786","line":7,"column":1,"nodeType":"787","endLine":11,"endColumn":3},{"ruleId":"689","severity":1,"message":"817","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":15},{"ruleId":"689","severity":1,"message":"818","line":8,"column":8,"nodeType":"691","messageId":"692","endLine":8,"endColumn":16},{"ruleId":"689","severity":1,"message":"819","line":15,"column":8,"nodeType":"691","messageId":"692","endLine":15,"endColumn":19},{"ruleId":"689","severity":1,"message":"820","line":23,"column":10,"nodeType":"691","messageId":"692","endLine":23,"endColumn":22},{"ruleId":"689","severity":1,"message":"821","line":37,"column":11,"nodeType":"691","messageId":"692","endLine":37,"endColumn":22},{"ruleId":"703","severity":1,"message":"748","line":62,"column":36,"nodeType":"705","messageId":"706","endLine":62,"endColumn":38},{"ruleId":"703","severity":1,"message":"704","line":65,"column":35,"nodeType":"705","messageId":"706","endLine":65,"endColumn":37},{"ruleId":"703","severity":1,"message":"704","line":126,"column":36,"nodeType":"705","messageId":"706","endLine":126,"endColumn":38},{"ruleId":"703","severity":1,"message":"748","line":189,"column":28,"nodeType":"705","messageId":"706","endLine":189,"endColumn":30},{"ruleId":"703","severity":1,"message":"748","line":214,"column":37,"nodeType":"705","messageId":"706","endLine":214,"endColumn":39},{"ruleId":"689","severity":1,"message":"831","line":4,"column":20,"nodeType":"691","messageId":"692","endLine":4,"endColumn":28},{"ruleId":"689","severity":1,"message":"817","line":7,"column":8,"nodeType":"691","messageId":"692","endLine":7,"endColumn":15},{"ruleId":"689","severity":1,"message":"818","line":8,"column":8,"nodeType":"691","messageId":"692","endLine":8,"endColumn":16},{"ruleId":"689","severity":1,"message":"819","line":15,"column":8,"nodeType":"691","messageId":"692","endLine":15,"endColumn":19},{"ruleId":"689","severity":1,"message":"820","line":23,"column":10,"nodeType":"691","messageId":"692","endLine":23,"endColumn":22},{"ruleId":"703","severity":1,"message":"748","line":61,"column":36,"nodeType":"705","messageId":"706","endLine":61,"endColumn":38},{"ruleId":"703","severity":1,"message":"704","line":64,"column":35,"nodeType":"705","messageId":"706","endLine":64,"endColumn":37},{"ruleId":"703","severity":1,"message":"704","line":124,"column":36,"nodeType":"705","messageId":"706","endLine":124,"endColumn":38},{"ruleId":"703","severity":1,"message":"748","line":189,"column":29,"nodeType":"705","messageId":"706","endLine":189,"endColumn":31},{"ruleId":"703","severity":1,"message":"748","line":214,"column":37,"nodeType":"705","messageId":"706","endLine":214,"endColumn":39},{"ruleId":"689","severity":1,"message":"825","line":4,"column":20,"nodeType":"691","messageId":"692","endLine":4,"endColumn":26},{"ruleId":"689","severity":1,"message":"795","line":10,"column":3,"nodeType":"691","messageId":"692","endLine":10,"endColumn":24},{"ruleId":"689","severity":1,"message":"832","line":12,"column":3,"nodeType":"691","messageId":"692","endLine":12,"endColumn":14},{"ruleId":"689","severity":1,"message":"833","line":13,"column":3,"nodeType":"691","messageId":"692","endLine":13,"endColumn":28},{"ruleId":"689","severity":1,"message":"834","line":14,"column":3,"nodeType":"691","messageId":"692","endLine":14,"endColumn":14},{"ruleId":"689","severity":1,"message":"792","line":20,"column":3,"nodeType":"691","messageId":"692","endLine":20,"endColumn":22},{"ruleId":"689","severity":1,"message":"835","line":21,"column":3,"nodeType":"691","messageId":"692","endLine":21,"endColumn":32},{"ruleId":"689","severity":1,"message":"836","line":22,"column":3,"nodeType":"691","messageId":"692","endLine":22,"endColumn":22},{"ruleId":"689","severity":1,"message":"837","line":29,"column":10,"nodeType":"691","messageId":"692","endLine":29,"endColumn":22},{"ruleId":"689","severity":1,"message":"838","line":29,"column":24,"nodeType":"691","messageId":"692","endLine":29,"endColumn":39},{"ruleId":"689","severity":1,"message":"839","line":34,"column":9,"nodeType":"691","messageId":"692","endLine":34,"endColumn":38},{"ruleId":"689","severity":1,"message":"840","line":108,"column":9,"nodeType":"691","messageId":"692","endLine":108,"endColumn":24},{"ruleId":"689","severity":1,"message":"841","line":126,"column":9,"nodeType":"691","messageId":"692","endLine":126,"endColumn":29},{"ruleId":"689","severity":1,"message":"842","line":151,"column":9,"nodeType":"691","messageId":"692","endLine":151,"endColumn":29},{"ruleId":"689","severity":1,"message":"843","line":160,"column":20,"nodeType":"691","messageId":"692","endLine":160,"endColumn":25},{"ruleId":"689","severity":1,"message":"843","line":168,"column":18,"nodeType":"691","messageId":"692","endLine":168,"endColumn":23},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'dispatch' is assigned a value but never used.","'sd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'abortController', 'token', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["844"],"'Select' is defined but never used.","'DownOutlined' is defined but never used.","'store' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleLikeBtnClick' is assigned a value but never used.","'onClickLogIn' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["845"],"'handleSubmitFacebookForm' is assigned a value but never used.","'se' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataErr'. Either include it or remove the dependency array.",["846"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mailImg' is defined but never used.","'paymentImg' is defined but never used.","'navigationArr' is defined but never used.","'networks' is defined but never used.","'RightOutlined' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'onChangeSubscribeInput' is assigned a value but never used.","'onSubmitSubscribeForm' is assigned a value but never used.","'userToken' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'background' is assigned a value but never used.","'useHistory' is defined but never used.","'fetchGetAllCourses' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'currentDate' and 'dispatch'. Either include them or remove the dependency array.",["847"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["848"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","'annaImg' is defined but never used.","'MenuData' is defined but never used.","'setCoorseRedux' is defined but never used.","'handleRadioClick' is assigned a value but never used.","'fetchUploadAvatar' is defined but never used.","'ref' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'tempUserData.picture', and 'userData'. Either include them or remove the dependency array.",["849"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook React.useEffect has missing dependencies: 'dispatch', 'picture', and 'userData'. Either include them or remove the dependency array.",["850"],"'fakeToken' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'history', and 'token'. Either include them or remove the dependency array.",["851"],["852"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["853"],"'useState' is defined but never used.","'Spinner' is defined but never used.",["854"],"'setLS' is defined but never used.","'getLS' is defined but never used.","'message' is defined but never used.","'userSignUp' is defined but never used.","'setSpinFalse' is defined but never used.",["855"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'removeLS' is defined but never used.","'setUserAvatar' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'testUploadVimeoVids' is defined but never used.","'BlockTitle' is defined but never used.","'EventDeployPanel' is defined but never used.","'setVideosFromRedactor' is defined but never used.","'Modal' is defined but never used.","'speakerImg' is defined but never used.","'DeleteButton' is defined but never used.","'AddItemButton' is defined but never used.","'removeMainContentData' is defined but never used.","'addItemMainContentData' is defined but never used.","'InboxOutlined' is defined but never used.","'VideoPlayer' is defined but never used.","'Dragger' is assigned a value but never used.","'draggerProps' is assigned a value but never used.","'CoursePaymentCard' is defined but never used.","React Hook useEffect has a missing dependency: 'eventRedactor.aboutSpeaker.data.video'. Either include it or remove the dependency array.",["856"],"'VimeoUpload' is assigned a value but never used.","'myVideo' is assigned a value but never used.","'url' is assigned a value but never used.","'setBannerSelectors' is defined but never used.","'SaveButton' is defined but never used.","'courseFiles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["857"],"'testImg' is defined but never used.","'testImg2' is defined but never used.","'ModalWindow' is defined but never used.","'setPaidVideo' is defined but never used.","'isPaidVideo' is assigned a value but never used.","'showDrawer' is assigned a value but never used.","'Group' is defined but never used.","'Radio' is defined but never used.","'Upload' is defined but never used.","'Popconfirm' is defined but never used.","'DatePicker' is defined but never used.","'UploadOutlined' is defined but never used.","'index' is assigned a value but never used.","'eventRedactor' is assigned a value but never used.","'Timeline' is defined but never used.","'setVideoURI' is defined but never used.","'setVideoTranscodingStatus' is defined but never used.","'setVideoURL' is defined but never used.","'testCheckTranscodingVimeoVids' is defined but never used.","'testGetVimeoVidsURL' is defined but never used.","'videoURLFlag' is assigned a value but never used.","'setVideoURLFlag' is assigned a value but never used.","'dispatchUploadingVideoProcess' is assigned a value but never used.","'testAppendVideo' is assigned a value but never used.","'uploadFullCourseData' is assigned a value but never used.","'uploadFullCourseImgs' is assigned a value but never used.","'value' is assigned a value but never used.",{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},{"desc":"862","fix":"863"},{"desc":"864","fix":"865"},{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"872","fix":"874"},{"desc":"875","fix":"876"},{"desc":"860","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},"Update the dependencies array to be: [abortController, setList, token, user]",{"range":"884","text":"885"},"Update the dependencies array to be: [history, isAuth]",{"range":"886","text":"887"},"Update the dependencies array to be: [dataErr, messageErr]",{"range":"888","text":"889"},"Update the dependencies array to be: [currentDate, dispatch]",{"range":"890","text":"891"},"Update the dependencies array to be: [coorse, dispatch]",{"range":"892","text":"893"},"Update the dependencies array to be: [dispatch, tempUserData.picture, userData, userData.authorization]",{"range":"894","text":"895"},"Update the dependencies array to be: [dispatch, picture, userData, userData.authorization]",{"range":"896","text":"897"},"Update the dependencies array to be: [dispatch, history, token]",{"range":"898","text":"899"},{"range":"900","text":"899"},"Update the dependencies array to be: [dispatch, id]",{"range":"901","text":"902"},{"range":"903","text":"887"},"Update the dependencies array to be: [history, token]",{"range":"904","text":"905"},"Update the dependencies array to be: [eventRedactor.aboutSpeaker.data.video]",{"range":"906","text":"907"},"Update the dependencies array to be: [dispatch, type]",{"range":"908","text":"909"},[4587,4596],"[abortController, setList, token, user]",[758,766],"[history, isAuth]",[2604,2616],"[dataErr, messageErr]",[7959,7961],"[currentDate, dispatch]",[10875,10883],"[coorse, dispatch]",[1188,1212],"[dispatch, tempUserData.picture, userData, userData.authorization]",[785,809],"[dispatch, picture, userData, userData.authorization]",[823,825],"[dispatch, history, token]",[827,829],[631,633],"[dispatch, id]",[797,805],[1750,1757],"[history, token]",[2837,2839],"[eventRedactor.aboutSpeaker.data.video]",[1636,1642],"[dispatch, type]"]