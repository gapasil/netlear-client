{"ast":null,"code":"const initialState = {\n  videoList: [],\n  postedCourseId: null,\n  courseFiles: {\n    webinarsImg: []\n  },\n  isImagesUploaded: false\n};\n\nconst uploadingCourse = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'SET_VIDEOS_FROM_REDACTOR') {\n    const vebinarsArray = action.vebinarsArray.filter((el, i) => {\n      if (el.video) {\n        return el;\n      } else return;\n    });\n    const aboutSpeakerVideo = typeof action.aboutSpeaker.video !== 'string' ? [action.aboutSpeaker] : [];\n    const concatArray = [...vebinarsArray, ...aboutSpeakerVideo];\n    console.log('c', concatArray);\n    const videoList = concatArray.map((el, i) => {\n      return {\n        video: el === null || el === void 0 ? void 0 : el.video,\n        videoName: el === null || el === void 0 ? void 0 : el.videoName,\n        videoDescription: el.videoDescription || '',\n        uploadingProcess: 0,\n        transcodingStatus: null,\n        videoURI: null,\n        videoURL: null\n      };\n    });\n    return { ...state,\n      videoList: videoList\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_UPLOADING_PROCESS') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el,\n          uploadingProcess: action.percent\n        };\n      } else return el;\n    });\n    return { ...state,\n      videoList: newVideoArray\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_URI') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el,\n          videoURI: action.uri\n        };\n      } else return el;\n    });\n    return { ...state,\n      videoList: newVideoArray\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_TRANSCODING_STATUS') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el,\n          transcodingStatus: action.status\n        };\n      } else return el;\n    });\n    return { ...state,\n      videoList: newVideoArray\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_URL') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el,\n          videoURL: action.url\n        };\n      } else return el;\n    });\n    return { ...state,\n      videoList: newVideoArray\n    };\n  }\n\n  if (action.type === 'SET_POSTED_COURSE_ID') {\n    const id = action.payload;\n    return { ...state,\n      postedCourseId: id\n    };\n  }\n\n  if (action.type === 'SET_COURSE_IMG') {\n    const file = action.file;\n    const name = action.name;\n    const index = action.index; // console.log('reducer:', name, file);\n\n    if (typeof index !== 'boolean') {\n      // const webinarsImgArray = state.courseFiles.webinarsImg.slice();\n      // const newWebinarsImgArray = webinarsImgArray.push(file);\n      // console.log('check:', webinarsImgArray);\n      return { ...state,\n        courseFiles: { ...state.courseFiles,\n          webinarsImg: [...state.courseFiles.webinarsImg, {\n            file: file,\n            index: index\n          }]\n        }\n      };\n    } else {\n      return { ...state,\n        courseFiles: { ...state.courseFiles,\n          [name]: file\n        }\n      };\n    }\n  }\n\n  if (action.type === 'SET_IMAGES_UPLOADED') {\n    const boolean = action.boolean;\n    return { ...state,\n      isImagesUploaded: boolean\n    };\n  } //   if (action.type === 'SET_SPIN_FALSE') {\n  //     return {\n  //         isSpinning: action.payload,\n  //     };\n  //   }\n\n\n  return state;\n};\n\nexport default uploadingCourse;","map":{"version":3,"names":["initialState","videoList","postedCourseId","courseFiles","webinarsImg","isImagesUploaded","uploadingCourse","state","action","type","vebinarsArray","filter","el","i","video","aboutSpeakerVideo","aboutSpeaker","concatArray","console","log","map","videoName","videoDescription","uploadingProcess","transcodingStatus","videoURI","videoURL","newVideoArray","slice","index","percent","uri","status","url","id","payload","file","name","boolean"],"sources":["/home/gapasil/Рабочий стол/Загрузки/дз/javascript/netlear/clientNetlear/src/redux/reducers/UploadingCourse.js"],"sourcesContent":["const initialState = {\n  videoList: [],\n  postedCourseId: null,\n  courseFiles: { webinarsImg: [] },\n  isImagesUploaded : false\n};\n\nconst uploadingCourse = (state = initialState, action) => {\n  if (action.type === 'SET_VIDEOS_FROM_REDACTOR') {\n    const vebinarsArray = action.vebinarsArray.filter((el, i) => {\n      if (el.video) {\n        return el;\n      } else return;\n    });\n    const aboutSpeakerVideo =\n      typeof action.aboutSpeaker.video !== 'string' ? [action.aboutSpeaker] : [];\n    const concatArray = [...vebinarsArray, ...aboutSpeakerVideo];\n    console.log('c', concatArray);\n    const videoList = concatArray.map((el, i) => {\n      return {\n        video: el?.video,\n        videoName: el?.videoName,\n        videoDescription: el.videoDescription || '',\n        uploadingProcess: 0,\n        transcodingStatus: null,\n        videoURI: null,\n        videoURL: null,\n      };\n    });\n    return {\n      ...state,\n      videoList: videoList,\n    };\n  }\n  if (action.type === 'SET_VIDEO_UPLOADING_PROCESS') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, uploadingProcess: action.percent };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_URI') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, videoURI: action.uri };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_TRANSCODING_STATUS') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, transcodingStatus: action.status };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n\n  if (action.type === 'SET_VIDEO_URL') {\n    const newVideoArray = state.videoList.slice().map((el, i) => {\n      if (i === action.index) {\n        return { ...el, videoURL: action.url };\n      } else return el;\n    });\n    return {\n      ...state,\n      videoList: newVideoArray,\n    };\n  }\n  if (action.type === 'SET_POSTED_COURSE_ID') {\n    const id = action.payload;\n    return {\n      ...state,\n      postedCourseId: id,\n    };\n  }\n  if (action.type === 'SET_COURSE_IMG') {\n    const file = action.file;\n    const name = action.name;\n    const index = action.index;\n    // console.log('reducer:', name, file);\n    if (typeof index !== 'boolean') {\n      // const webinarsImgArray = state.courseFiles.webinarsImg.slice();\n      // const newWebinarsImgArray = webinarsImgArray.push(file);\n      // console.log('check:', webinarsImgArray);\n      return {\n        ...state,\n        courseFiles: {\n          ...state.courseFiles,\n          webinarsImg: [...state.courseFiles.webinarsImg, { file: file, index: index }],\n        },\n      };\n    } else {\n      return {\n        ...state,\n        courseFiles: {\n          ...state.courseFiles,\n          [name]: file,\n        },\n      };\n    }\n  }\n  if (action.type === 'SET_IMAGES_UPLOADED') {\n    const boolean = action.boolean;\n    return {\n      ...state,\n      isImagesUploaded: boolean,\n    };\n  }\n  //   if (action.type === 'SET_SPIN_FALSE') {\n  //     return {\n  //         isSpinning: action.payload,\n  //     };\n  //   }\n\n  return state;\n};\n\nexport default uploadingCourse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}