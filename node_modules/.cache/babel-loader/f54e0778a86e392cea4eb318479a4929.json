{"ast":null,"code":"import profileAPI from './api';\nimport { setSpinFalse, setSpinTrue } from '../spinner';\nimport { removeLS, getLS, setLS } from '../../../utils/LocalStorage';\nimport { message } from 'antd';\nimport { fetchAuthMe, setUserAvatar } from '../Auth/Auth';\nexport const setDefaultUserProfileData = userData => ({\n  type: 'SET_DEFAUILT_USER-PROFILE_DATA',\n  payload: userData\n});\nexport const setTempUserProfileData = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_DATA',\n  selector: selector,\n  value: value\n});\nexport const setTempUserProfileAvatar = value => ({\n  type: 'SET_TEMP_USER-PROFILE_AVATAR',\n  value: value\n});\nexport const setTempUserProfilePassword = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_PASSWORD',\n  selector: selector,\n  value: value\n});\nexport const setTempUserProfileEmail = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_EMAIL',\n  selector: selector,\n  value: value\n});\nexport const fetchNewPassword = data => dispatch => {\n  dispatch(setSpinTrue());\n  profileAPI.newPassword(data).then(data => {\n    console.log(data); // dispatch(setUserData(data));\n    // dispatch(setUserToken(data.token));\n    // setLS('EDMED_USER_TOKEN', data.token);\n\n    message.success('Данные пароля изменены!');\n    dispatch(setSpinFalse());\n  }).catch(error => {\n    debugger;\n    console.log(error);\n    dispatch(setSpinFalse());\n  });\n};\nexport const fetchNewEmail = data => dispatch => {\n  dispatch(setSpinTrue());\n  profileAPI.newEmail(data).then(data => {\n    console.log(data); // dispatch(setUserData(data));\n    // dispatch(setUserToken(data.token));\n    // setLS('EDMED_USER_TOKEN', data.token);\n\n    message.success('Данные Email изменены!');\n    dispatch(setSpinFalse());\n  }).catch(error => {\n    debugger;\n    console.log(error);\n    dispatch(setSpinFalse());\n  });\n};\nexport const fetchNewProfileData = data => dispatch => {\n  dispatch(setSpinTrue());\n  profileAPI.newProfileData(data).then(data => {\n    console.log(data); // debugger;\n    // dispatch(setUserData(data));\n    // dispatch(setUserToken(data.token));\n    // setLS('EDMED_USER_TOKEN', data.token);\n\n    message.success('Данные профиля изменены!');\n    dispatch(setSpinFalse());\n    dispatch(fetchAuthMe());\n  }).catch(error => {\n    debugger;\n    console.log(error);\n    dispatch(setSpinFalse());\n  });\n};\nexport const fetchUploadAvatar = data => dispatch => {\n  dispatch(setSpinTrue());\n  profileAPI.uploadAvatar(data).then(data => {\n    console.log(data);\n    dispatch(setSpinFalse());\n    message.success('Фото профиля загружено!'); // dispatch(setUserAvatar(data.picture));\n  }).catch(error => {\n    debugger;\n    console.log(error);\n    dispatch(setSpinFalse());\n  });\n};\nexport const setIsSaveDisabled = boolean => ({\n  type: 'SET_IS_SAVE_DISABLED',\n  boolean: boolean\n});","map":{"version":3,"names":["profileAPI","setSpinFalse","setSpinTrue","removeLS","getLS","setLS","message","fetchAuthMe","setUserAvatar","setDefaultUserProfileData","userData","type","payload","setTempUserProfileData","selector","value","setTempUserProfileAvatar","setTempUserProfilePassword","setTempUserProfileEmail","fetchNewPassword","data","dispatch","newPassword","then","console","log","success","catch","error","fetchNewEmail","newEmail","fetchNewProfileData","newProfileData","fetchUploadAvatar","uploadAvatar","setIsSaveDisabled","boolean"],"sources":["/home/gapasil/Рабочий стол/Загрузки/дз/javascript/netlear/clientNetlear/src/redux/actions/Temp/UserProfile.js"],"sourcesContent":["import profileAPI from './api';\nimport { setSpinFalse, setSpinTrue } from '../spinner';\nimport { removeLS, getLS, setLS } from '../../../utils/LocalStorage';\nimport { message } from 'antd';\nimport { fetchAuthMe, setUserAvatar } from '../Auth/Auth';\n\nexport const setDefaultUserProfileData = (userData) => ({\n  type: 'SET_DEFAUILT_USER-PROFILE_DATA',\n  payload: userData,\n});\n\nexport const setTempUserProfileData = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_DATA',\n  selector: selector,\n  value: value,\n});\n\nexport const setTempUserProfileAvatar = (value) => ({\n  type: 'SET_TEMP_USER-PROFILE_AVATAR',\n  value: value,\n});\n\nexport const setTempUserProfilePassword = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_PASSWORD',\n  selector: selector,\n  value: value,\n});\n\nexport const setTempUserProfileEmail = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_EMAIL',\n  selector: selector,\n  value: value,\n});\n\nexport const fetchNewPassword = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newPassword(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные пароля изменены!');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchNewEmail = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newEmail(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные Email изменены!');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchNewProfileData = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newProfileData(data)\n    .then((data) => {\n      console.log(data);\n      // debugger;\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные профиля изменены!');\n      dispatch(setSpinFalse());\n      dispatch(fetchAuthMe());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchUploadAvatar = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .uploadAvatar(data)\n    .then((data) => {\n      console.log(data);\n      dispatch(setSpinFalse());\n      message.success('Фото профиля загружено!');\n      // dispatch(setUserAvatar(data.picture));\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const setIsSaveDisabled = (boolean) => ({\n  type: 'SET_IS_SAVE_DISABLED',\n  boolean: boolean,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}