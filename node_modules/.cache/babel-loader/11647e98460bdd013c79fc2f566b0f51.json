{"ast":null,"code":"var Vimeo = require('vimeo').Vimeo;\n\nvar VimeoUpload = require('vimeo-upload');\n\nconst client_id = 'e99c4ca28841dab2c510911e884bac53e832003a';\nconst client_secret = '4k4i65Y+PPep2arbNBD/pIvf2OfgJDSVO/v5QclBj0OS370WjY3IMseIipW99MNoUpdKvfuEnGfsjltyfbDQOmvW+UXTNsFdwf0+agcEZU1BjXHyhfndczk5rJc7gjLn';\nconst access_token = '0f8cda46bbaa0456bae6475b238e2375';\nvar client = new Vimeo(client_id, client_secret, access_token);\n\nvar myVideo = require('../assets/video/IMG_5067.MP4');\n\nexport function testUploadVimeoVids(video, title, description, displayProcessFunc, getVideoURIfunc, elementIndex) {\n  let file_name = video;\n  console.log('file_name', video);\n  return client.upload(file_name, {\n    name: title,\n    description: description\n  }, function (uri) {\n    console.log('Your video URI is: ' + uri);\n    return getVideoURIfunc(uri, elementIndex);\n  }, function (bytes_uploaded, bytes_total) {\n    var percentage = (bytes_uploaded / bytes_total * 100).toFixed(2);\n    console.log(bytes_uploaded, bytes_total, percentage + '%');\n    return displayProcessFunc(percentage, elementIndex);\n  }, function (error) {\n    //   debugger;\n    console.log('Failed because: ' + error);\n    return displayProcessFunc(error, elementIndex);\n  });\n}\nexport const testCheckTranscodingVimeoVids = (uri, setTranscodingStatusFunc, elementIndex) => {\n  return client.request(uri + '?fields=transcode.status', function (error, body, status_code, headers) {\n    if (body.transcode.status === 'complete') {\n      setTranscodingStatusFunc('complete', elementIndex); // console.log('Your video finished transcoding.');\n    } else if (body.transcode.status === 'in_progress') {\n      setTranscodingStatusFunc('in_progress', elementIndex); // console.log('Your video is still transcoding.');\n    } else {\n      setTranscodingStatusFunc('error', elementIndex); // console.log('Your video encountered an error during transcoding.');\n    }\n  });\n};\nexport const testGetVimeoVidsURL = (uri, setVideoURLFunc, elementIndex) => {\n  client.request(uri + '?fields=link', function (error, body, statusCode, headers) {\n    if (error) {\n      console.log('There was an error making the request.');\n      console.log('Server reported: ' + error);\n      return;\n    }\n\n    console.log('Your video link is: ' + body.link);\n    setVideoURLFunc(body.link, elementIndex);\n  });\n};\nexport function testEditTitleAndDescriptionVideo() {\n  const uri = '574942695';\n  const url = 'https://ancient-fortress-47643.herokuapp.com/';\n  client.request({\n    method: 'PATCH',\n    path: uri,\n    query: {\n      name: '{new video title}',\n      description: '{new video description}'\n    } //   headers: {\n    //             Authorization: `Bearer f04070881e9d0374b49e1cc3a11bd11a`,\n    //           },\n\n  }, function (error, body, status_code, headers) {\n    //   debugger;\n    // console.log('The title and description for ' + uri + ' has been edited.');\n    console.log(error);\n    console.log(body);\n    console.log(headers);\n    console.log(status_code);\n  });\n}","map":{"version":3,"names":["Vimeo","require","VimeoUpload","client_id","client_secret","access_token","client","myVideo","testUploadVimeoVids","video","title","description","displayProcessFunc","getVideoURIfunc","elementIndex","file_name","console","log","upload","name","uri","bytes_uploaded","bytes_total","percentage","toFixed","error","testCheckTranscodingVimeoVids","setTranscodingStatusFunc","request","body","status_code","headers","transcode","status","testGetVimeoVidsURL","setVideoURLFunc","statusCode","link","testEditTitleAndDescriptionVideo","url","method","path","query"],"sources":["/home/gapasil/Рабочий стол/Загрузки/дз/javascript/netlear/clientNetlear/src/utils/testVimeo.js"],"sourcesContent":["var Vimeo = require('vimeo').Vimeo;\nvar VimeoUpload = require('vimeo-upload');\n\nconst client_id = 'e99c4ca28841dab2c510911e884bac53e832003a';\nconst client_secret =\n  '4k4i65Y+PPep2arbNBD/pIvf2OfgJDSVO/v5QclBj0OS370WjY3IMseIipW99MNoUpdKvfuEnGfsjltyfbDQOmvW+UXTNsFdwf0+agcEZU1BjXHyhfndczk5rJc7gjLn';\nconst access_token = '0f8cda46bbaa0456bae6475b238e2375';\n\nvar client = new Vimeo(client_id, client_secret, access_token);\n\nvar myVideo = require('../assets/video/IMG_5067.MP4');\n\nexport function testUploadVimeoVids(\n  video,\n  title,\n  description,\n  displayProcessFunc,\n  getVideoURIfunc,\n  elementIndex,\n) {\n  let file_name = video;\n  console.log('file_name', video);\n  return client.upload(\n    file_name,\n    {\n      name: title,\n      description: description,\n    },\n    function (uri) {\n      console.log('Your video URI is: ' + uri);\n      return getVideoURIfunc(uri, elementIndex);\n    },\n    function (bytes_uploaded, bytes_total) {\n      var percentage = ((bytes_uploaded / bytes_total) * 100).toFixed(2);\n      console.log(bytes_uploaded, bytes_total, percentage + '%');\n      return displayProcessFunc(percentage, elementIndex);\n    },\n    function (error) {\n      //   debugger;\n      console.log('Failed because: ' + error);\n      return displayProcessFunc(error, elementIndex);\n    },\n  );\n}\n\nexport const testCheckTranscodingVimeoVids = (uri, setTranscodingStatusFunc, elementIndex) => {\n  return client.request(\n    uri + '?fields=transcode.status',\n    function (error, body, status_code, headers) {\n      if (body.transcode.status === 'complete') {\n        setTranscodingStatusFunc('complete', elementIndex);\n        // console.log('Your video finished transcoding.');\n      } else if (body.transcode.status === 'in_progress') {\n        setTranscodingStatusFunc('in_progress', elementIndex);\n        // console.log('Your video is still transcoding.');\n      } else {\n        setTranscodingStatusFunc('error', elementIndex);\n        // console.log('Your video encountered an error during transcoding.');\n      }\n    },\n  );\n};\n\nexport const testGetVimeoVidsURL = (uri, setVideoURLFunc, elementIndex) => {\n  client.request(uri + '?fields=link', function (error, body, statusCode, headers) {\n    if (error) {\n      console.log('There was an error making the request.');\n      console.log('Server reported: ' + error);\n      return;\n    }\n\n    console.log('Your video link is: ' + body.link);\n    setVideoURLFunc(body.link, elementIndex);\n  });\n};\n\nexport function testEditTitleAndDescriptionVideo() {\n  const uri = '574942695';\n  const url = 'https://ancient-fortress-47643.herokuapp.com/';\n  client.request(\n    {\n      method: 'PATCH',\n      path: uri,\n      query: {\n        name: '{new video title}',\n        description: '{new video description}',\n      },\n      //   headers: {\n      //             Authorization: `Bearer f04070881e9d0374b49e1cc3a11bd11a`,\n      //           },\n    },\n    function (error, body, status_code, headers) {\n      //   debugger;\n      // console.log('The title and description for ' + uri + ' has been edited.');\n      console.log(error);\n      console.log(body);\n      console.log(headers);\n      console.log(status_code);\n    },\n  );\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBD,KAA7B;;AACA,IAAIE,WAAW,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AAEA,MAAME,SAAS,GAAG,0CAAlB;AACA,MAAMC,aAAa,GACjB,kIADF;AAEA,MAAMC,YAAY,GAAG,kCAArB;AAEA,IAAIC,MAAM,GAAG,IAAIN,KAAJ,CAAUG,SAAV,EAAqBC,aAArB,EAAoCC,YAApC,CAAb;;AAEA,IAAIE,OAAO,GAAGN,OAAO,CAAC,8BAAD,CAArB;;AAEA,OAAO,SAASO,mBAAT,CACLC,KADK,EAELC,KAFK,EAGLC,WAHK,EAILC,kBAJK,EAKLC,eALK,EAMLC,YANK,EAOL;EACA,IAAIC,SAAS,GAAGN,KAAhB;EACAO,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,KAAzB;EACA,OAAOH,MAAM,CAACY,MAAP,CACLH,SADK,EAEL;IACEI,IAAI,EAAET,KADR;IAEEC,WAAW,EAAEA;EAFf,CAFK,EAML,UAAUS,GAAV,EAAe;IACbJ,OAAO,CAACC,GAAR,CAAY,wBAAwBG,GAApC;IACA,OAAOP,eAAe,CAACO,GAAD,EAAMN,YAAN,CAAtB;EACD,CATI,EAUL,UAAUO,cAAV,EAA0BC,WAA1B,EAAuC;IACrC,IAAIC,UAAU,GAAG,CAAEF,cAAc,GAAGC,WAAlB,GAAiC,GAAlC,EAAuCE,OAAvC,CAA+C,CAA/C,CAAjB;IACAR,OAAO,CAACC,GAAR,CAAYI,cAAZ,EAA4BC,WAA5B,EAAyCC,UAAU,GAAG,GAAtD;IACA,OAAOX,kBAAkB,CAACW,UAAD,EAAaT,YAAb,CAAzB;EACD,CAdI,EAeL,UAAUW,KAAV,EAAiB;IACf;IACAT,OAAO,CAACC,GAAR,CAAY,qBAAqBQ,KAAjC;IACA,OAAOb,kBAAkB,CAACa,KAAD,EAAQX,YAAR,CAAzB;EACD,CAnBI,CAAP;AAqBD;AAED,OAAO,MAAMY,6BAA6B,GAAG,CAACN,GAAD,EAAMO,wBAAN,EAAgCb,YAAhC,KAAiD;EAC5F,OAAOR,MAAM,CAACsB,OAAP,CACLR,GAAG,GAAG,0BADD,EAEL,UAAUK,KAAV,EAAiBI,IAAjB,EAAuBC,WAAvB,EAAoCC,OAApC,EAA6C;IAC3C,IAAIF,IAAI,CAACG,SAAL,CAAeC,MAAf,KAA0B,UAA9B,EAA0C;MACxCN,wBAAwB,CAAC,UAAD,EAAab,YAAb,CAAxB,CADwC,CAExC;IACD,CAHD,MAGO,IAAIe,IAAI,CAACG,SAAL,CAAeC,MAAf,KAA0B,aAA9B,EAA6C;MAClDN,wBAAwB,CAAC,aAAD,EAAgBb,YAAhB,CAAxB,CADkD,CAElD;IACD,CAHM,MAGA;MACLa,wBAAwB,CAAC,OAAD,EAAUb,YAAV,CAAxB,CADK,CAEL;IACD;EACF,CAbI,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMoB,mBAAmB,GAAG,CAACd,GAAD,EAAMe,eAAN,EAAuBrB,YAAvB,KAAwC;EACzER,MAAM,CAACsB,OAAP,CAAeR,GAAG,GAAG,cAArB,EAAqC,UAAUK,KAAV,EAAiBI,IAAjB,EAAuBO,UAAvB,EAAmCL,OAAnC,EAA4C;IAC/E,IAAIN,KAAJ,EAAW;MACTT,OAAO,CAACC,GAAR,CAAY,wCAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,sBAAsBQ,KAAlC;MACA;IACD;;IAEDT,OAAO,CAACC,GAAR,CAAY,yBAAyBY,IAAI,CAACQ,IAA1C;IACAF,eAAe,CAACN,IAAI,CAACQ,IAAN,EAAYvB,YAAZ,CAAf;EACD,CATD;AAUD,CAXM;AAaP,OAAO,SAASwB,gCAAT,GAA4C;EACjD,MAAMlB,GAAG,GAAG,WAAZ;EACA,MAAMmB,GAAG,GAAG,+CAAZ;EACAjC,MAAM,CAACsB,OAAP,CACE;IACEY,MAAM,EAAE,OADV;IAEEC,IAAI,EAAErB,GAFR;IAGEsB,KAAK,EAAE;MACLvB,IAAI,EAAE,mBADD;MAELR,WAAW,EAAE;IAFR,CAHT,CAOE;IACA;IACA;;EATF,CADF,EAYE,UAAUc,KAAV,EAAiBI,IAAjB,EAAuBC,WAAvB,EAAoCC,OAApC,EAA6C;IAC3C;IACA;IACAf,OAAO,CAACC,GAAR,CAAYQ,KAAZ;IACAT,OAAO,CAACC,GAAR,CAAYY,IAAZ;IACAb,OAAO,CAACC,GAAR,CAAYc,OAAZ;IACAf,OAAO,CAACC,GAAR,CAAYa,WAAZ;EACD,CAnBH;AAqBD"},"metadata":{},"sourceType":"module"}