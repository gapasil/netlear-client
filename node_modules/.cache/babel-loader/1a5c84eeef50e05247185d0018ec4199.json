{"ast":null,"code":"var _jsxFileName = \"/var/www/netlear/html/clientNetlear/src/components/TextEditor/TextEditor.jsx\";\nimport React from 'react';\nimport './TextEditor.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quill = ReactQuill.Quill;\nvar Font = Quill.import('formats/font');\nFont.whitelist = ['Montserrat', 'Roboto', 'Raleway', 'Lato', 'Rubik'];\nQuill.register(Font, true);\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, 3, 4, 5, false]\n  }, {\n    font: Font.whitelist\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image'], ['clean', {\n    align: []\n  }], [{\n    color: []\n  }, {\n    background: []\n  }]]\n};\nconst formats = ['header', 'font', 'color', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'size', 'background', 'align'];\n\nfunction TextEditor(_ref) {\n  let {\n    onChange,\n    isEditing,\n    value\n  } = _ref;\n  const winWidth = window.innerWidth;\n\n  const style = () => {\n    if (winWidth <= 600) {\n      return {\n        width: '100%'\n      };\n    } else {\n      return;\n    }\n  };\n\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: value,\n      onChange: onChange // placeholder=\"Введите текст\"\n      ,\n      modules: modules,\n      formats: formats,\n      readOnly: isEditing ? false : true,\n      theme: isEditing ? 'snow' : 'bubble',\n      style: style()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useDispatch","useSelector","ReactQuill","Quill","Font","import","whitelist","register","modules","toolbar","header","font","list","indent","align","color","background","formats","TextEditor","onChange","isEditing","value","winWidth","window","innerWidth","style","width"],"sources":["/var/www/netlear/html/clientNetlear/src/components/TextEditor/TextEditor.jsx"],"sourcesContent":["import React from 'react';\nimport './TextEditor.scss';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nconst Quill = ReactQuill.Quill;\nvar Font = Quill.import('formats/font');\nFont.whitelist = ['Montserrat', 'Roboto', 'Raleway', 'Lato', 'Rubik'];\nQuill.register(Font, true);\n\nconst modules = {\n  toolbar: [\n    [{ header: [1, 2, 3, 4, 5, false] }, { font: Font.whitelist }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n    ['link', 'image'],\n    ['clean', { align: [] }],\n    [{ color: [] }, { background: [] }],\n  ],\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'size',\n  'background',\n  'align',\n];\n\nfunction TextEditor({ onChange, isEditing, value }) {\n  const winWidth = window.innerWidth;\n\n  const style = () => {\n    if (winWidth <= 600) {\n      return { width: '100%' };\n    } else {\n      return;\n    }\n  };\n  if(!value){\n    return(\n      <div>\n        \n      </div>\n    )\n  }\n  return (\n    <>\n      <ReactQuill\n        value={value}\n        onChange={onChange}\n        // placeholder=\"Введите текст\"\n        modules={modules}\n        formats={formats}\n        readOnly={isEditing ? false : true}\n        theme={isEditing ? 'snow' : 'bubble'}\n        style={style()}\n      />\n    </>\n  );\n}\n\nexport default TextEditor;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;;;AACA,MAAMC,KAAK,GAAGD,UAAU,CAACC,KAAzB;AACA,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa,cAAb,CAAX;AACAD,IAAI,CAACE,SAAL,GAAiB,CAAC,YAAD,EAAe,QAAf,EAAyB,SAAzB,EAAoC,MAApC,EAA4C,OAA5C,CAAjB;AACAH,KAAK,CAACI,QAAN,CAAeH,IAAf,EAAqB,IAArB;AAEA,MAAMI,OAAO,GAAG;EACdC,OAAO,EAAE,CACP,CAAC;IAAEC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,KAAhB;EAAV,CAAD,EAAqC;IAAEC,IAAI,EAAEP,IAAI,CAACE;EAAb,CAArC,CADO,EAEP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAFO,EAGP,CAAC;IAAEM,IAAI,EAAE;EAAR,CAAD,EAAsB;IAAEA,IAAI,EAAE;EAAR,CAAtB,EAA0C;IAAEC,MAAM,EAAE;EAAV,CAA1C,EAA4D;IAAEA,MAAM,EAAE;EAAV,CAA5D,CAHO,EAIP,CAAC,MAAD,EAAS,OAAT,CAJO,EAKP,CAAC,OAAD,EAAU;IAAEC,KAAK,EAAE;EAAT,CAAV,CALO,EAMP,CAAC;IAAEC,KAAK,EAAE;EAAT,CAAD,EAAgB;IAAEC,UAAU,EAAE;EAAd,CAAhB,CANO;AADK,CAAhB;AAUA,MAAMC,OAAO,GAAG,CACd,QADc,EAEd,MAFc,EAGd,OAHc,EAId,MAJc,EAKd,QALc,EAMd,WANc,EAOd,QAPc,EAQd,YARc,EASd,MATc,EAUd,QAVc,EAWd,QAXc,EAYd,MAZc,EAad,OAbc,EAcd,MAdc,EAed,YAfc,EAgBd,OAhBc,CAAhB;;AAmBA,SAASC,UAAT,OAAoD;EAAA,IAAhC;IAAEC,QAAF;IAAYC,SAAZ;IAAuBC;EAAvB,CAAgC;EAClD,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAxB;;EAEA,MAAMC,KAAK,GAAG,MAAM;IAClB,IAAIH,QAAQ,IAAI,GAAhB,EAAqB;MACnB,OAAO;QAAEI,KAAK,EAAE;MAAT,CAAP;IACD,CAFD,MAEO;MACL;IACD;EACF,CAND;;EAOA,IAAG,CAACL,KAAJ,EAAU;IACR,oBACE;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,oBACE;IAAA,uBACE,QAAC,UAAD;MACE,KAAK,EAAEA,KADT;MAEE,QAAQ,EAAEF,QAFZ,CAGE;MAHF;MAIE,OAAO,EAAEX,OAJX;MAKE,OAAO,EAAES,OALX;MAME,QAAQ,EAAEG,SAAS,GAAG,KAAH,GAAW,IANhC;MAOE,KAAK,EAAEA,SAAS,GAAG,MAAH,GAAY,QAP9B;MAQE,KAAK,EAAEK,KAAK;IARd;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAcD;;KA/BQP,U;AAiCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}