{"ast":null,"code":"var _jsxFileName = \"/home/gapasil/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/\\u0434\\u0437/javascript/netlear/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx\",\n    _s = $RefreshSig$();\n\nimport './EventPageParallaxBanner.scss';\nimport React from 'react';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { Popover } from 'antd';\nimport { url } from \"../../../../conf\";\nimport promoImg from '../../../../assets/img/medicineSections/dentistry.jpg';\nimport EditButton from '../../../../components/EditButton/EditButton';\nimport EventUploadImage from '../../../../components/EventUploadImage/EventUploadImage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setBannerData, setBannerSelectors } from '../../../../redux/actions/eventRedactor/eventRedactor';\nimport { bannerPopoversContent } from '../../../../utils/eventPopoverContent/bannerPopoversContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventPageParallaxBanner(_ref) {\n  _s();\n\n  let {\n    variant\n  } = _ref;\n  const dispatch = useDispatch();\n  const eventRedactor = useSelector(state => state.eventRedactor);\n  const dataBanner = eventRedactor.banner.data;\n  const {\n    title,\n    speakerName,\n    speakerShortDescription,\n    backgroundImg\n  } = bannerPopoversContent;\n  let objBanner;\n\n  const onSelectInputValue = e => {\n    const selector = e.target.attributes.selector.nodeValue;\n    const dataBanner = e.target.value;\n    dispatch(setBannerData(selector, '', dataBanner));\n  };\n\n  if (variant == \"redactor\") {\n    objBanner = {\n      image: dataBanner.backgroundImg || promoImg,\n      amount: 1,\n      children: ''\n    };\n  } else {\n    objBanner = {\n      image: `${url}coorsefiles${dataBanner.backgroundImg}`,\n      amount: 1,\n      children: ''\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parallax-banner\",\n    children: /*#__PURE__*/_jsxDEV(ParallaxBanner, {\n      className: \"\",\n      layers: [objBanner],\n      style: {\n        minHeight: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parallax-banner-content\",\n        children: [variant === 'redactor' && /*#__PURE__*/_jsxDEV(EventUploadImage, {\n          selector: 'backgroundImg',\n          action: setBannerData,\n          popoverContentType: backgroundImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parallax-banner-content__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parallax-banner-content__quantity\",\n            children: [\"\\u043A\\u0443\\u0440\\u0441 \\u0438\\u0437 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-styled__bright text-styled__bright_large\",\n              children: eventRedactor.mainContent.data.vebinars.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this), ' ', \"\\u0432\\u0435\\u0431\\u0438\\u043D\\u0430\\u0440\\u043E\\u0432 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-styled__bright\",\n              children: \"\\u0432 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), variant == \"redactor\" ? /*#__PURE__*/_jsxDEV(Popover, {\n            placement: \"topRight\",\n            title: title.title,\n            content: title.content,\n            trigger: \"focus\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              className: \"test-input parallax-banner-content__title\",\n              value: dataBanner.title,\n              selector: \"title\",\n              onChange: onSelectInputValue,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"parallax-banner-content__title\",\n            children: [dataBanner.title, variant === 'redactor' && /*#__PURE__*/_jsxDEV(EditButton, {\n              selector: \"title\",\n              action: setBannerSelectors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parallax-banner-content__speaker-block speaker-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parallax-banner-content__quantity\",\n              children: \"\\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), variant == \"redactor\" ? /*#__PURE__*/_jsxDEV(Popover, {\n              placement: \"topRight\",\n              title: speakerName.title,\n              content: speakerName.content,\n              trigger: \"focus\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"test-input speaker-block__name\",\n                value: dataBanner.speakerName,\n                selector: \"speakerName\",\n                autofocus: true,\n                onChange: onSelectInputValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"speaker-block__name\",\n              children: [dataBanner.speakerName, variant === 'redactor' && /*#__PURE__*/_jsxDEV(EditButton, {\n                selector: \"speakerName\",\n                action: setBannerSelectors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), variant == \"redactor\" ? /*#__PURE__*/_jsxDEV(Popover, {\n              placement: \"topRight\",\n              title: speakerShortDescription.title,\n              content: speakerShortDescription.content,\n              trigger: \"focus\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                className: \"test-input speaker-block__description\",\n                value: dataBanner.speakerShortDescription,\n                selector: \"speakerShortDescription\",\n                onChange: onSelectInputValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"speaker-block__description\",\n              children: [dataBanner.speakerShortDescription, variant === 'redactor' && /*#__PURE__*/_jsxDEV(EditButton, {\n                selector: \"speakerShortDescription\",\n                action: setBannerSelectors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__item_shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventPageParallaxBanner, \"IKMwgf92gN1Qy/IZL/i3NI6aiME=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EventPageParallaxBanner;\nexport default EventPageParallaxBanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventPageParallaxBanner\");","map":{"version":3,"names":["React","ParallaxBanner","Popover","url","promoImg","EditButton","EventUploadImage","useDispatch","useSelector","setBannerData","setBannerSelectors","bannerPopoversContent","EventPageParallaxBanner","variant","dispatch","eventRedactor","state","dataBanner","banner","data","title","speakerName","speakerShortDescription","backgroundImg","objBanner","onSelectInputValue","e","selector","target","attributes","nodeValue","value","image","amount","children","minHeight","mainContent","vebinars","length","content"],"sources":["/home/gapasil/Рабочий стол/Загрузки/дз/javascript/netlear/clientNetlear/src/views/CoorseRedactorPage/corse1Page/EventPageParallaxBanner/EventPageParallaxBanner.jsx"],"sourcesContent":["import './EventPageParallaxBanner.scss';\nimport React from 'react';\n\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { Popover } from 'antd';\nimport { url } from \"../../../../conf\"\nimport promoImg from '../../../../assets/img/medicineSections/dentistry.jpg';\n\nimport EditButton from '../../../../components/EditButton/EditButton';\nimport EventUploadImage from '../../../../components/EventUploadImage/EventUploadImage';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setBannerData, setBannerSelectors } from '../../../../redux/actions/eventRedactor/eventRedactor';\nimport { bannerPopoversContent } from '../../../../utils/eventPopoverContent/bannerPopoversContent';\n\nfunction EventPageParallaxBanner({ variant }) {\n  const dispatch = useDispatch();\n  const eventRedactor = useSelector((state) => state.eventRedactor);\n  const dataBanner = eventRedactor.banner.data\n  \n  const { title, speakerName, speakerShortDescription, backgroundImg } = bannerPopoversContent;\n  let objBanner\n\n  const onSelectInputValue = (e) => {\n    const selector = e.target.attributes.selector.nodeValue;\n    const dataBanner = e.target.value;\n    dispatch(setBannerData(selector, '', dataBanner));\n  };\n\n  if(variant == \"redactor\"){\n    objBanner = {\n      image: dataBanner.backgroundImg || promoImg,\n      amount: 1,\n      children: '',\n    }\n  } else {\n    objBanner = {\n      image:`${url}coorsefiles${dataBanner.backgroundImg}`,\n      amount: 1,\n      children: '',\n    }\n  }\n\n  return (\n    <div className=\"parallax-banner\">\n      <ParallaxBanner\n        className=\"\"\n        layers={[\n          objBanner\n        ]}\n        style={{\n          minHeight: '400px',\n        }}>\n        <div className=\"parallax-banner-content\">\n          {variant === 'redactor' && (\n            <EventUploadImage\n              selector={'backgroundImg'}\n              action={setBannerData}\n              popoverContentType={backgroundImg}\n            />\n          )}\n\n          <div className=\"parallax-banner-content__wrapper\">\n            <div className=\"parallax-banner-content__quantity\">\n              курс из <span className=\"text-styled__bright text-styled__bright_large\">{eventRedactor.mainContent.data.vebinars.length}</span>{' '}\n              вебинаров <span className=\"text-styled__bright\">в записи</span>\n            </div>\n            {variant == \"redactor\" ? (\n              <Popover\n                placement=\"topRight\"\n                title={title.title}\n                content={title.content}\n                trigger=\"focus\">\n                <textarea\n                  type=\"text\"\n                  className=\"test-input parallax-banner-content__title\"\n                  value={dataBanner.title}\n                  selector=\"title\"\n                  onChange={onSelectInputValue}\n                  autoFocus\n                />\n              </Popover>\n            ) : (\n              <h2 className=\"parallax-banner-content__title\">\n                {dataBanner.title}\n                {variant === 'redactor' && (\n                  <EditButton selector=\"title\" action={setBannerSelectors} />\n                )}\n              </h2>\n            )}\n\n            <div className=\"parallax-banner-content__speaker-block speaker-block\">\n              <div className=\"parallax-banner-content__quantity\">спикер</div>\n              {variant == \"redactor\" ? (\n                <Popover\n                  placement=\"topRight\"\n                  title={speakerName.title}\n                  content={speakerName.content}\n                  trigger=\"focus\">\n                  <input\n                    type=\"text\"\n                    className=\"test-input speaker-block__name\"\n                    value={dataBanner.speakerName}\n                    selector=\"speakerName\"\n                    autofocus\n                    onChange={onSelectInputValue}\n                  />\n                </Popover>\n              ) : (\n                <h2 className=\"speaker-block__name\">\n                  {dataBanner.speakerName}\n                  {variant === 'redactor' && (\n                    <EditButton selector=\"speakerName\" action={setBannerSelectors} />\n                  )}\n                </h2>\n              )}\n              {variant == \"redactor\" ? (\n                <Popover\n                  placement=\"topRight\"\n                  title={speakerShortDescription.title}\n                  content={speakerShortDescription.content}\n                  trigger=\"focus\">\n                  <textarea\n                    type=\"text\"\n                    className=\"test-input speaker-block__description\"\n                    value={dataBanner.speakerShortDescription}\n                    selector=\"speakerShortDescription\"\n                    onChange={onSelectInputValue}\n                  />\n                </Popover>\n              ) : (\n                <p className=\"speaker-block__description\">\n                  {dataBanner.speakerShortDescription}\n                  {variant === 'redactor' && (\n                    <EditButton selector=\"speakerShortDescription\" action={setBannerSelectors} />\n                  )}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"slider__item_shadow\"></div>\n      </ParallaxBanner>\n    </div>\n  );\n}\n\nexport default EventPageParallaxBanner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}