{"ast":null,"code":"import uploadingCourseAPI from './api';\nexport const setVideosFromRedactor = (vebinarsArray, aboutSpeaker) => {\n  return {\n    type: 'SET_VIDEOS_FROM_REDACTOR',\n    vebinarsArray: vebinarsArray,\n    aboutSpeaker: aboutSpeaker\n  };\n};\nexport const setVideoUploadingProcess = (percent, index) => ({\n  type: 'SET_VIDEO_UPLOADING_PROCESS',\n  percent,\n  index\n});\nexport const setVideoURI = (uri, index) => ({\n  type: 'SET_VIDEO_URI',\n  uri,\n  index\n});\nexport const setVideoTranscodingStatus = (status, index) => ({\n  type: 'SET_VIDEO_TRANSCODING_STATUS',\n  status,\n  index\n});\nexport const setVideoURL = (url, index) => ({\n  type: 'SET_VIDEO_URL',\n  url,\n  index\n});\nexport const setPostedCourseId = id => ({\n  type: 'SET_POSTED_COURSE_ID',\n  payload: id\n});\nexport const setCourseImg = function (file, name) {\n  let index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: 'SET_COURSE_IMG',\n    file: file,\n    name: name,\n    index: index\n  };\n};\nexport const fetchPostEventData = data => dispatch => {\n  uploadingCourseAPI.postEventData(data).then(data => {\n    // debugger;\n    dispatch(setPostedCourseId(data.id));\n    console.log('fetch res data:' + data); // dispatch(setSpinFalse());\n  }).catch(error => {\n    console.log('fetch catch error:' + error);\n    debugger; // console.log(error);\n    // dispatch(setSpinFalse());\n  });\n};\nexport const fetchPostEventPictures = (eventId, data) => dispatch => {\n  uploadingCourseAPI.putEventImages(eventId, data).then(data => {\n    // debugger;\n    // dispatch(setPostedCourseId(data.id));\n    console.log('fetch res data:' + data);\n    dispatch(setImagesUploaded(true)); // dispatch(setSpinFalse());\n  }).catch(error => {\n    console.log('fetch catch error:' + error);\n    debugger; // console.log(error);\n    // dispatch(setSpinFalse());\n  });\n};\nexport const setImagesUploaded = boolean => ({\n  type: 'SET_IMAGES_UPLOADED',\n  boolean\n});","map":{"version":3,"names":["uploadingCourseAPI","setVideosFromRedactor","vebinarsArray","aboutSpeaker","type","setVideoUploadingProcess","percent","index","setVideoURI","uri","setVideoTranscodingStatus","status","setVideoURL","url","setPostedCourseId","id","payload","setCourseImg","file","name","fetchPostEventData","data","dispatch","postEventData","then","console","log","catch","error","fetchPostEventPictures","eventId","putEventImages","setImagesUploaded","boolean"],"sources":["/var/www/netlear/html/clientNetlear/src/redux/actions/UploadingCourse/UploadingCourse.js"],"sourcesContent":["import uploadingCourseAPI from './api';\n\nexport const setVideosFromRedactor = (vebinarsArray, aboutSpeaker) => {\n  return {\n    type: 'SET_VIDEOS_FROM_REDACTOR',\n    vebinarsArray: vebinarsArray,\n    aboutSpeaker: aboutSpeaker,\n  };\n};\n\nexport const setVideoUploadingProcess = (percent, index) => ({\n  type: 'SET_VIDEO_UPLOADING_PROCESS',\n  percent,\n  index,\n});\n\nexport const setVideoURI = (uri, index) => ({\n  type: 'SET_VIDEO_URI',\n  uri,\n  index,\n});\n\nexport const setVideoTranscodingStatus = (status, index) => ({\n  type: 'SET_VIDEO_TRANSCODING_STATUS',\n  status,\n  index,\n});\n\nexport const setVideoURL = (url, index) => ({\n  type: 'SET_VIDEO_URL',\n  url,\n  index,\n});\n\nexport const setPostedCourseId = (id) => ({\n  type: 'SET_POSTED_COURSE_ID',\n  payload: id,\n});\n\nexport const setCourseImg = (file, name, index = false) => ({\n  type: 'SET_COURSE_IMG',\n  file: file,\n  name: name,\n  index: index,\n});\n\nexport const fetchPostEventData = (data) => (dispatch) => {\n  uploadingCourseAPI\n    .postEventData(data)\n    .then((data) => {\n      // debugger;\n      dispatch(setPostedCourseId(data.id));\n      console.log('fetch res data:' + data);\n      // dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      console.log('fetch catch error:' + error);\n      debugger;\n      // console.log(error);\n      // dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchPostEventPictures = (eventId, data) => (dispatch) => {\n  uploadingCourseAPI\n    .putEventImages(eventId, data)\n    .then((data) => {\n      // debugger;\n      // dispatch(setPostedCourseId(data.id));\n      console.log('fetch res data:' + data);\n      dispatch(setImagesUploaded(true));\n      // dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      console.log('fetch catch error:' + error);\n      debugger;\n      // console.log(error);\n      // dispatch(setSpinFalse());\n    });\n};\n\nexport const setImagesUploaded = (boolean) => ({\n  type: 'SET_IMAGES_UPLOADED',\n  boolean,\n});\n"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,OAA/B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;EACpE,OAAO;IACLC,IAAI,EAAE,0BADD;IAELF,aAAa,EAAEA,aAFV;IAGLC,YAAY,EAAEA;EAHT,CAAP;AAKD,CANM;AAQP,OAAO,MAAME,wBAAwB,GAAG,CAACC,OAAD,EAAUC,KAAV,MAAqB;EAC3DH,IAAI,EAAE,6BADqD;EAE3DE,OAF2D;EAG3DC;AAH2D,CAArB,CAAjC;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMF,KAAN,MAAiB;EAC1CH,IAAI,EAAE,eADoC;EAE1CK,GAF0C;EAG1CF;AAH0C,CAAjB,CAApB;AAMP,OAAO,MAAMG,yBAAyB,GAAG,CAACC,MAAD,EAASJ,KAAT,MAAoB;EAC3DH,IAAI,EAAE,8BADqD;EAE3DO,MAF2D;EAG3DJ;AAH2D,CAApB,CAAlC;AAMP,OAAO,MAAMK,WAAW,GAAG,CAACC,GAAD,EAAMN,KAAN,MAAiB;EAC1CH,IAAI,EAAE,eADoC;EAE1CS,GAF0C;EAG1CN;AAH0C,CAAjB,CAApB;AAMP,OAAO,MAAMO,iBAAiB,GAAIC,EAAD,KAAS;EACxCX,IAAI,EAAE,sBADkC;EAExCY,OAAO,EAAED;AAF+B,CAAT,CAA1B;AAKP,OAAO,MAAME,YAAY,GAAG,UAACC,IAAD,EAAOC,IAAP;EAAA,IAAaZ,KAAb,uEAAqB,KAArB;EAAA,OAAgC;IAC1DH,IAAI,EAAE,gBADoD;IAE1Dc,IAAI,EAAEA,IAFoD;IAG1DC,IAAI,EAAEA,IAHoD;IAI1DZ,KAAK,EAAEA;EAJmD,CAAhC;AAAA,CAArB;AAOP,OAAO,MAAMa,kBAAkB,GAAIC,IAAD,IAAWC,QAAD,IAAc;EACxDtB,kBAAkB,CACfuB,aADH,CACiBF,IADjB,EAEGG,IAFH,CAESH,IAAD,IAAU;IACd;IACAC,QAAQ,CAACR,iBAAiB,CAACO,IAAI,CAACN,EAAN,CAAlB,CAAR;IACAU,OAAO,CAACC,GAAR,CAAY,oBAAoBL,IAAhC,EAHc,CAId;EACD,CAPH,EAQGM,KARH,CAQUC,KAAD,IAAW;IAChBH,OAAO,CAACC,GAAR,CAAY,uBAAuBE,KAAnC;IACA,SAFgB,CAGhB;IACA;EACD,CAbH;AAcD,CAfM;AAiBP,OAAO,MAAMC,sBAAsB,GAAG,CAACC,OAAD,EAAUT,IAAV,KAAoBC,QAAD,IAAc;EACrEtB,kBAAkB,CACf+B,cADH,CACkBD,OADlB,EAC2BT,IAD3B,EAEGG,IAFH,CAESH,IAAD,IAAU;IACd;IACA;IACAI,OAAO,CAACC,GAAR,CAAY,oBAAoBL,IAAhC;IACAC,QAAQ,CAACU,iBAAiB,CAAC,IAAD,CAAlB,CAAR,CAJc,CAKd;EACD,CARH,EASGL,KATH,CASUC,KAAD,IAAW;IAChBH,OAAO,CAACC,GAAR,CAAY,uBAAuBE,KAAnC;IACA,SAFgB,CAGhB;IACA;EACD,CAdH;AAeD,CAhBM;AAkBP,OAAO,MAAMI,iBAAiB,GAAIC,OAAD,KAAc;EAC7C7B,IAAI,EAAE,qBADuC;EAE7C6B;AAF6C,CAAd,CAA1B"},"metadata":{},"sourceType":"module"}