{"ast":null,"code":"var _jsxFileName = \"/var/www/netlear/html/clientNetlear/src/components/DeployCourseBlock/DeployCourseBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './DeployCourseBlock.scss';\nimport { url } from \"../../conf\";\nimport Button from '../Button/Button';\nimport EventDeployPanel from '../EventDeployPanel/EventDeployPanel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVideosFromRedactor } from '../../redux/actions/UploadingCourse/UploadingCourse';\nimport { Modal } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeployCourseBlock(_ref) {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const eventRedactor = useSelector(state => state.eventRedactor);\n  const [isDeployPanelOpen, setIsDeployPanelOpen] = React.useState(false);\n\n  const onDeployCourseData = () => {\n    const speaker = eventRedactor.aboutSpeaker.data;\n    const banner = eventRedactor.banner.data;\n    const main = eventRedactor.mainContent.data;\n    const vebinars = eventRedactor.mainContent.data.vebinars;\n    const masVebin = [];\n    let index = 1;\n    const form = new FormData();\n\n    const dataURLtoFile = (dataurl, filename) => {\n      if (dataurl.length > 60) {\n        let arr = dataurl.split(','),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]),\n            n = bstr.length,\n            u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], filename, {\n          type: mime\n        });\n      }\n    };\n\n    const backgroundImg = dataURLtoFile(banner.backgroundImg, \"backgroundImg\");\n\n    for (let key of vebinars) {\n      const objVebinars = {\n        title: key.title,\n        description: key.content,\n        date: key.date,\n        photo: key.promoImg,\n        typeOfContent: key.format,\n        paymentMethod: {\n          paymentType: key.isPaid ? \"Платный контент\" : \"Бесплатный контент\",\n          price: key.cost,\n          currency: key.currency,\n          promocode: key.promoCode,\n          promocodeDiscount: key.personalDiscount\n        },\n        video: {\n          video: key.video,\n          videoName: key.videoName,\n          videoDescription: key.videoDescription\n        }\n      };\n      let vebinarPhoto = dataURLtoFile(key.promoImg, \"vebinarPhoto\");\n\n      if (vebinarPhoto) {\n        form.append(`vebinarPhoto${index}`, vebinarPhoto);\n      }\n\n      if (key.video) {\n        form.append(`vebinarVideo${index}`, key.video);\n      }\n\n      masVebin.push(objVebinars);\n      index += 1;\n    }\n\n    const course = {\n      backgroundTitle: backgroundImg,\n      mainTitle: banner.title,\n      type: props,\n      speakerTitle: banner.speakerName,\n      speakerTitleParagraph: banner.speakerShortDescription,\n      aboutCourse: {\n        title: main.youWillLearn.title,\n        paragraph: main.youWillLearn.content\n      },\n      program: {\n        title: main.eventProgram.title,\n        paragraph: main.eventProgram.content\n      },\n      vebinars: masVebin,\n      fullCoursePayCard: {\n        cost: main.fullCoursePayCard.cost,\n        currency: main.fullCoursePayCard.currency,\n        discount: main.fullCoursePayCard.discount,\n        costWithDiscount: main.fullCoursePayCard.costWithDiscount,\n        promocode: main.fullCoursePayCard.promoCode,\n        promoCodeDiscount: main.fullCoursePayCard.promoCodeDiscount\n      },\n      speaker: {\n        name: speaker.fullName,\n        profession: speaker.career,\n        paragraph: speaker.description,\n        promoVideoName: speaker.videoName,\n        photo: speaker.img,\n        promoVideo: speaker.video\n      }\n    };\n    const speakerImg = dataURLtoFile(speaker.img, \"speakerImg\");\n\n    if (speakerImg) {\n      form.append(\"speakerPhoto\", speakerImg);\n    }\n\n    if (speaker.video.size) {\n      form.append(\"speakerVideo\", speaker.video);\n    }\n\n    if (backgroundImg) {\n      form.append(\"backgroundTitle\", backgroundImg);\n    }\n\n    form.append(\"body\", JSON.stringify(course)); // for(let key of form.entries()){\n    //   console.log(key);\n    // }\n\n    fetch(`${url}post/add`, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      method: \"POST\",\n      body: form\n    }).then(res => res.json()).then(result => console.log(result));\n    setIsDeployPanelOpen(true);\n  };\n\n  if (isDeployPanelOpen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deploy-course\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: onDeployCourseData,\n      text: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u043A\\u0443\\u0440\\u0441\\u0435 \\u043D\\u0430 \\u0440\\u0430\\u0441\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeployCourseBlock, \"p14xlsUXUYbAS9UKyfIAMBJpMPE=\", false, function () {\n  return [useSelector];\n});\n\n_c = DeployCourseBlock;\nexport default DeployCourseBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeployCourseBlock\");","map":{"version":3,"names":["React","useEffect","useState","url","Button","EventDeployPanel","useDispatch","useSelector","setVideosFromRedactor","Modal","DeployCourseBlock","props","eventRedactor","state","isDeployPanelOpen","setIsDeployPanelOpen","onDeployCourseData","speaker","aboutSpeaker","data","banner","main","mainContent","vebinars","masVebin","index","form","FormData","dataURLtoFile","dataurl","filename","length","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","backgroundImg","key","objVebinars","title","description","content","date","photo","promoImg","typeOfContent","format","paymentMethod","paymentType","isPaid","price","cost","currency","promocode","promoCode","promocodeDiscount","personalDiscount","video","videoName","videoDescription","vebinarPhoto","append","push","course","backgroundTitle","mainTitle","speakerTitle","speakerName","speakerTitleParagraph","speakerShortDescription","aboutCourse","youWillLearn","paragraph","program","eventProgram","fullCoursePayCard","discount","costWithDiscount","promoCodeDiscount","name","fullName","profession","career","promoVideoName","img","promoVideo","speakerImg","size","JSON","stringify","fetch","headers","localStorage","getItem","method","body","then","res","json","result","console","log"],"sources":["/var/www/netlear/html/clientNetlear/src/components/DeployCourseBlock/DeployCourseBlock.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './DeployCourseBlock.scss';\nimport { url } from \"../../conf\"\nimport Button from '../Button/Button';\nimport EventDeployPanel from '../EventDeployPanel/EventDeployPanel';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVideosFromRedactor } from '../../redux/actions/UploadingCourse/UploadingCourse';\nimport { Modal } from 'antd';\n\nfunction DeployCourseBlock({props}) {\n  const eventRedactor = useSelector((state) => state.eventRedactor);\n  const [isDeployPanelOpen, setIsDeployPanelOpen] = React.useState(false);\n\n  const onDeployCourseData = () => {\n    const speaker  = eventRedactor.aboutSpeaker.data\n    const banner   = eventRedactor.banner.data\n    const main     = eventRedactor.mainContent.data\n    const vebinars = eventRedactor.mainContent.data.vebinars\n    const masVebin = []\n    let index = 1\n    const form = new FormData()\n    \n    const dataURLtoFile = (dataurl, filename) => {\n      if(dataurl.length > 60){\n  \t    let arr = dataurl.split(','),\n\t        mime = arr[0].match(/:(.*?);/)[1],\n\t        bstr = atob(arr[1]),\n\t        n = bstr.length,\n\t        u8arr = new Uint8Array(n);\n\t      while (n--) {\n\t       u8arr[n] = bstr.charCodeAt(n);\n\t      }\n\t      return new File([u8arr], filename, { type: mime });\n      }\n\t  }\n  \n    const backgroundImg = dataURLtoFile(banner.backgroundImg, \"backgroundImg\")\n\n    for(let key of vebinars){\n      const objVebinars = {\n        title: key.title,\n        description: key.content,\n        date : key.date,\n        photo: key.promoImg,\n        typeOfContent: key.format,\n        paymentMethod: {\n          paymentType: key.isPaid?\"Платный контент\":\"Бесплатный контент\",\n          price      : key.cost ,\n          currency   : key.currency,\n          promocode  : key.promoCode,\n          promocodeDiscount: key.personalDiscount\n        },\n        video: {\n          video : key.video,\n          videoName : key.videoName,\n          videoDescription : key.videoDescription\n        }\n      }\n      let vebinarPhoto = dataURLtoFile(key.promoImg, \"vebinarPhoto\");\n      if(vebinarPhoto){\n        form.append(`vebinarPhoto${index}`,vebinarPhoto)\n      }\n      if(key.video){\n        form.append(`vebinarVideo${index}`,key.video)\n      }\n      masVebin.push(objVebinars)\n      index += 1\n    }\n\n    const course = {\n      backgroundTitle: backgroundImg,\n      mainTitle: banner.title,\n      type: props,\n      speakerTitle: banner.speakerName,\n      speakerTitleParagraph: banner.speakerShortDescription,\n      aboutCourse: {\n        title: main.youWillLearn.title,\n        paragraph:main.youWillLearn.content\n      },\n      program: {\n        title: main.eventProgram.title,\n        paragraph:main.eventProgram.content\n      },\n      vebinars: masVebin,\n      fullCoursePayCard: {\n        cost: main.fullCoursePayCard.cost,\n        currency: main.fullCoursePayCard.currency,\n        discount: main.fullCoursePayCard.discount,\n        costWithDiscount: main.fullCoursePayCard.costWithDiscount,\n        promocode: main.fullCoursePayCard.promoCode,\n        promoCodeDiscount: main.fullCoursePayCard.promoCodeDiscount\n      },\n      speaker: {\n        name: speaker.fullName,\n        profession: speaker.career,\n        paragraph:speaker.description,\n        promoVideoName: speaker.videoName,\n        photo:speaker.img,\n        promoVideo:speaker.video\n      }\n    }\n    const speakerImg = dataURLtoFile(speaker.img, \"speakerImg\");\n    if(speakerImg){\n      form.append(\"speakerPhoto\",speakerImg)\n    }\n    if(speaker.video.size){\n      form.append(\"speakerVideo\",speaker.video)\n    }\n    if(backgroundImg){\n      form.append(\"backgroundTitle\",backgroundImg)\n    }\n    form.append(\"body\",JSON.stringify(course))\n\n    // for(let key of form.entries()){\n    //   console.log(key);\n    // }\n\n    fetch(`${url}post/add`,{\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      method: \"POST\",\n      body: form\n    })\n    .then((res)=>res.json())\n    .then((result)=>console.log(result))\n    setIsDeployPanelOpen(true);\n  };\n  if(isDeployPanelOpen){\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n  return (\n    <div className=\"deploy-course\">\n      <Button type=\"primary\" onClick={onDeployCourseData} text=\"Загрузить данные о курсе на рассмотрение\"/>\n    </div>\n  );\n}\n\nexport default DeployCourseBlock;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}