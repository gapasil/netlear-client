{"ast":null,"code":"import React from'react';import{Spin}from'antd';import{LoadingOutlined}from'@ant-design/icons';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";function Spinner(_ref){var children=_ref.children,color=_ref.color;var antIcon=/*#__PURE__*/_jsx(LoadingOutlined,{style:{fontSize:24,color:color},spin:true});var _useSelector=useSelector(function(state){return state.spinner;}),isSpinning=_useSelector.isSpinning;return/*#__PURE__*/_jsx(Spin,{indicator:antIcon,spinning:isSpinning,children:children});}export default Spinner;","map":{"version":3,"names":["React","Spin","LoadingOutlined","useSelector","Spinner","children","color","antIcon","fontSize","state","spinner","isSpinning"],"sources":["/var/www/netlear/html/clientNetlear/src/components/Spinner/Spinner.jsx"],"sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport { useSelector } from 'react-redux';\n\nfunction Spinner({ children, color }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24, color: color }} spin />;\n\n  const { isSpinning } = useSelector((state) => state.spinner);\n  return (\n    <Spin indicator={antIcon} spinning={isSpinning}>\n      {children}\n    </Spin>\n  );\n}\n\nexport default Spinner;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,MAArB,CACA,OAASC,eAAT,KAAgC,mBAAhC,CAEA,OAASC,WAAT,KAA4B,aAA5B,C,2CAEA,QAASC,QAAT,MAAsC,IAAnBC,SAAmB,MAAnBA,QAAmB,CAATC,KAAS,MAATA,KAAS,CACpC,GAAMC,QAAO,cAAG,KAAC,eAAD,EAAiB,KAAK,CAAE,CAAEC,QAAQ,CAAE,EAAZ,CAAgBF,KAAK,CAAEA,KAAvB,CAAxB,CAAwD,IAAI,KAA5D,EAAhB,CAEA,iBAAuBH,WAAW,CAAC,SAACM,KAAD,QAAWA,MAAK,CAACC,OAAjB,EAAD,CAAlC,CAAQC,UAAR,cAAQA,UAAR,CACA,mBACE,KAAC,IAAD,EAAM,SAAS,CAAEJ,OAAjB,CAA0B,QAAQ,CAAEI,UAApC,UACGN,QADH,EADF,CAKD,CAED,cAAeD,QAAf"},"metadata":{},"sourceType":"module"}