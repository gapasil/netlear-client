{"ast":null,"code":"import profileAPI from'./api';import{setSpinFalse,setSpinTrue}from'../spinner';import{removeLS,getLS,setLS}from'../../../utils/LocalStorage';import{message}from'antd';import{fetchAuthMe,setUserAvatar}from'../Auth/Auth';export var setDefaultUserProfileData=function setDefaultUserProfileData(userData){return{type:'SET_DEFAUILT_USER-PROFILE_DATA',payload:userData};};export var setTempUserProfileData=function setTempUserProfileData(selector,value){return{type:'SET_TEMP_USER-PROFILE_DATA',selector:selector,value:value};};export var setTempUserProfileAvatar=function setTempUserProfileAvatar(value){return{type:'SET_TEMP_USER-PROFILE_AVATAR',value:value};};export var setTempUserProfilePassword=function setTempUserProfilePassword(selector,value){return{type:'SET_TEMP_USER-PROFILE_PASSWORD',selector:selector,value:value};};export var setTempUserProfileEmail=function setTempUserProfileEmail(selector,value){return{type:'SET_TEMP_USER-PROFILE_EMAIL',selector:selector,value:value};};export var fetchNewPassword=function fetchNewPassword(data){return function(dispatch){dispatch(setSpinTrue());profileAPI.newPassword(data).then(function(data){console.log(data);// dispatch(setUserData(data));\n// dispatch(setUserToken(data.token));\n// setLS('EDMED_USER_TOKEN', data.token);\nmessage.success('Данные пароля изменены!');dispatch(setSpinFalse());}).catch(function(error){debugger;console.log(error);dispatch(setSpinFalse());});};};export var fetchNewEmail=function fetchNewEmail(data){return function(dispatch){dispatch(setSpinTrue());profileAPI.newEmail(data).then(function(data){console.log(data);// dispatch(setUserData(data));\n// dispatch(setUserToken(data.token));\n// setLS('EDMED_USER_TOKEN', data.token);\nmessage.success('Данные Email изменены!');dispatch(setSpinFalse());}).catch(function(error){debugger;console.log(error);dispatch(setSpinFalse());});};};export var fetchNewProfileData=function fetchNewProfileData(data){return function(dispatch){dispatch(setSpinTrue());profileAPI.newProfileData(data).then(function(data){console.log(data);// debugger;\n// dispatch(setUserData(data));\n// dispatch(setUserToken(data.token));\n// setLS('EDMED_USER_TOKEN', data.token);\nmessage.success('Данные профиля изменены!');dispatch(setSpinFalse());dispatch(fetchAuthMe());}).catch(function(error){debugger;console.log(error);dispatch(setSpinFalse());});};};export var fetchUploadAvatar=function fetchUploadAvatar(data){return function(dispatch){dispatch(setSpinTrue());profileAPI.uploadAvatar(data).then(function(data){console.log(data);dispatch(setSpinFalse());message.success('Фото профиля загружено!');// dispatch(setUserAvatar(data.picture));\n}).catch(function(error){debugger;console.log(error);dispatch(setSpinFalse());});};};export var setIsSaveDisabled=function setIsSaveDisabled(boolean){return{type:'SET_IS_SAVE_DISABLED',boolean:boolean};};","map":{"version":3,"names":["profileAPI","setSpinFalse","setSpinTrue","removeLS","getLS","setLS","message","fetchAuthMe","setUserAvatar","setDefaultUserProfileData","userData","type","payload","setTempUserProfileData","selector","value","setTempUserProfileAvatar","setTempUserProfilePassword","setTempUserProfileEmail","fetchNewPassword","data","dispatch","newPassword","then","console","log","success","catch","error","fetchNewEmail","newEmail","fetchNewProfileData","newProfileData","fetchUploadAvatar","uploadAvatar","setIsSaveDisabled","boolean"],"sources":["/var/www/netlear/html/clientNetlear/src/redux/actions/Temp/UserProfile.js"],"sourcesContent":["import profileAPI from './api';\nimport { setSpinFalse, setSpinTrue } from '../spinner';\nimport { removeLS, getLS, setLS } from '../../../utils/LocalStorage';\nimport { message } from 'antd';\nimport { fetchAuthMe, setUserAvatar } from '../Auth/Auth';\n\nexport const setDefaultUserProfileData = (userData) => ({\n  type: 'SET_DEFAUILT_USER-PROFILE_DATA',\n  payload: userData,\n});\n\nexport const setTempUserProfileData = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_DATA',\n  selector: selector,\n  value: value,\n});\n\nexport const setTempUserProfileAvatar = (value) => ({\n  type: 'SET_TEMP_USER-PROFILE_AVATAR',\n  value: value,\n});\n\nexport const setTempUserProfilePassword = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_PASSWORD',\n  selector: selector,\n  value: value,\n});\n\nexport const setTempUserProfileEmail = (selector, value) => ({\n  type: 'SET_TEMP_USER-PROFILE_EMAIL',\n  selector: selector,\n  value: value,\n});\n\nexport const fetchNewPassword = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newPassword(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные пароля изменены!');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchNewEmail = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newEmail(data)\n    .then((data) => {\n      console.log(data);\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные Email изменены!');\n      dispatch(setSpinFalse());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchNewProfileData = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .newProfileData(data)\n    .then((data) => {\n      console.log(data);\n      // debugger;\n      // dispatch(setUserData(data));\n      // dispatch(setUserToken(data.token));\n      // setLS('EDMED_USER_TOKEN', data.token);\n      message.success('Данные профиля изменены!');\n      dispatch(setSpinFalse());\n      dispatch(fetchAuthMe());\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const fetchUploadAvatar = (data) => (dispatch) => {\n  dispatch(setSpinTrue());\n  profileAPI\n    .uploadAvatar(data)\n    .then((data) => {\n      console.log(data);\n      dispatch(setSpinFalse());\n      message.success('Фото профиля загружено!');\n      // dispatch(setUserAvatar(data.picture));\n    })\n    .catch((error) => {\n      debugger;\n      console.log(error);\n      dispatch(setSpinFalse());\n    });\n};\n\nexport const setIsSaveDisabled = (boolean) => ({\n  type: 'SET_IS_SAVE_DISABLED',\n  boolean: boolean,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}